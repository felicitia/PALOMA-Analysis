--------- beginning of /dev/log/main
I/Icing   (  713): Indexing F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0 from com.google.android.gms
I/Icing   (  713): Indexing done F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0
D/AndroidRuntime(11079): 
D/AndroidRuntime(11079): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime(11079): CheckJNI is OFF
D/dalvikvm(11079): Using executionMode 2
D/dalvikvm(11079): Trying to load lib libjavacore.so 0x0
D/dalvikvm(11079): Added shared lib libjavacore.so 0x0
D/dalvikvm(11079): Trying to load lib libnativehelper.so 0x0
D/dalvikvm(11079): Added shared lib libnativehelper.so 0x0
D/dalvikvm(11079): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm(11079): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack(11079): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug(11079): failed to load memtrack module: -2
D/AndroidRuntime(11079): Calling main entry com.android.commands.monkey.Monkey
--------- beginning of /dev/log/system
W/BroadcastQueue(  464): Skipping deliver [background] BroadcastRecord{4ae2c718 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4a9b3738 11079 (unknown name)/0/u-1 remote:4af67814}: process crashing
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
D/yeshen  (  681): launcher onpause
I/ActivityManager(  464): Start proc com.dayforce.mobile for activity com.dayforce.mobile/.ui_login.ActivityLoginNormal: pid=11089 uid=10068 gids={50068, 3003, 1028, 1015, 1023}
W/NetworkManagementSocketTagger(  464): setKernelCountSet(10068, 1) failed with errno -13
D/yeshen  (  681): launcher onstop
D/FirebaseApp(  681): Notifying background state change listeners.
D/Tinker.DefaultAppLike(  681): onTrimMemory level:20
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
I/dalvikvm(11089): ignoring registerObject request in thread=1
I/dalvikvm(11089): ignoring registerObject request in thread=1
I/dalvikvm(11089): Could not find method android.app.ActivityManager.getAppTasks, referenced from method com.dayforce.mobile.libs.j.uncaughtException
W/dalvikvm(11089): VFY: unable to resolve virtual method 122: Landroid/app/ActivityManager;.getAppTasks ()Ljava/util/List;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x00ba
D/dalvikvm(11089): DexOpt: couldn't find field Landroid/app/ActivityManager$RecentTaskInfo;.topActivity
I/dalvikvm(11089): DexOpt: unable to optimize instance field ref 0x0003 at 0xcf in Lcom/dayforce/mobile/libs/j;.uncaughtException
D/dalvikvm(11089): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(11089): GC_CONCURRENT freed 230K, 9% free 3070K/3352K, paused 1ms+0ms, total 5ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 10ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 11ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 12ms
I/dalvikvm(11089): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
I/CrashlyticsCore(11089): Initializing Crashlytics 2.3.8.97
W/dalvikvm(11089): VFY: unable to resolve virtual method 284: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x00fb
D/dalvikvm(11089): GC_CONCURRENT freed 192K, 6% free 3426K/3624K, paused 1ms+1ms, total 10ms
I/dalvikvm(11089): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.m.zzl
W/dalvikvm(11089): VFY: unable to resolve virtual method 593: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x001a
D/dalvikvm(11089): GC_CONCURRENT freed 259K, 9% free 3559K/3876K, paused 2ms+1ms, total 6ms
E/dalvikvm(11089): Could not find class 'android.security.keystore.UserNotAuthenticatedException', referenced from method com.dayforce.mobile.ui_login.ActivityLoginNormal.a
W/dalvikvm(11089): VFY: unable to resolve instanceof 293 (Landroid/security/keystore/UserNotAuthenticatedException;) in Lcom/dayforce/mobile/ui_login/ActivityLoginNormal;
D/dalvikvm(11089): VFY: replacing opcode 0x20 at 0x0074
E/dalvikvm(11089): Could not find class 'android.security.keystore.UserNotAuthenticatedException', referenced from method com.dayforce.mobile.ui_login.ActivityLoginNormal.a
W/dalvikvm(11089): VFY: unable to resolve instanceof 293 (Landroid/security/keystore/UserNotAuthenticatedException;) in Lcom/dayforce/mobile/ui_login/ActivityLoginNormal;
D/dalvikvm(11089): VFY: replacing opcode 0x20 at 0x0049
E/dalvikvm(11089): Could not find class 'android.security.keystore.KeyInfo', referenced from method com.dayforce.mobile.ui_login.l.a
W/dalvikvm(11089): VFY: unable to resolve const-class 292 (Landroid/security/keystore/KeyInfo;) in Lcom/dayforce/mobile/ui_login/l;
D/dalvikvm(11089): VFY: replacing opcode 0x1c at 0x000a
E/dalvikvm(11089): Could not find class 'android.security.keystore.KeyGenParameterSpec$Builder', referenced from method com.dayforce.mobile.ui_login.l.b
W/dalvikvm(11089): VFY: unable to resolve new-instance 290 (Landroid/security/keystore/KeyGenParameterSpec$Builder;) in Lcom/dayforce/mobile/ui_login/l;
D/dalvikvm(11089): VFY: replacing opcode 0x22 at 0x0013
I/dalvikvm(11089): Could not find method android.app.KeyguardManager.createConfirmDeviceCredentialIntent, referenced from method com.dayforce.mobile.ui_login.l.a
W/dalvikvm(11089): VFY: unable to resolve virtual method 239: Landroid/app/KeyguardManager;.createConfirmDeviceCredentialIntent (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Landroid/content/Intent;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x0002
E/dalvikvm(11089): Could not find class 'android.security.keystore.UserNotAuthenticatedException', referenced from method com.dayforce.mobile.ui_login.l.a
W/dalvikvm(11089): VFY: unable to resolve instanceof 293 (Landroid/security/keystore/UserNotAuthenticatedException;) in Lcom/dayforce/mobile/ui_login/l;
D/dalvikvm(11089): VFY: replacing opcode 0x20 at 0x0021
D/dalvikvm(11089): DexOpt: unable to opt direct call 0x0595 at 0x16 in Lcom/dayforce/mobile/ui_login/l;.b
I/dalvikvm(11089): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.m.onProvideKeyboardShortcuts
W/dalvikvm(11089): VFY: unable to resolve interface method 15115: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm(11089): VFY: replacing opcode 0x72 at 0x0002
W/dalvikvm(11089): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm(11089): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.m.onSearchRequested
W/dalvikvm(11089): VFY: unable to resolve interface method 15117: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm(11089): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm(11089): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.m.onWindowStartingActionMode
W/dalvikvm(11089): VFY: unable to resolve interface method 15121: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm(11089): VFY: replacing opcode 0x72 at 0x0002
D/dalvikvm(11089): GC_CONCURRENT freed 912K, 24% free 3081K/4052K, paused 1ms+2ms, total 6ms
I/dalvikvm(11089): Could not find method android.content.Context.getColorStateList, referenced from method android.support.v7.a.a.b.a
W/dalvikvm(11089): VFY: unable to resolve virtual method 429: Landroid/content/Context;.getColorStateList (I)Landroid/content/res/ColorStateList;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x0006
D/dalvikvm(11089): GC_FOR_ALLOC freed 82K, 23% free 3151K/4052K, paused 3ms, total 4ms
I/dalvikvm-heap(11089): Grow heap (frag case) to 4.086MB for 1007244-byte allocation
D/dalvikvm(11089): GC_CONCURRENT freed <1K, 18% free 4133K/5036K, paused 3ms+0ms, total 7ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11089): GC_FOR_ALLOC freed 7K, 18% free 4137K/5036K, paused 2ms, total 2ms
I/dalvikvm-heap(11089): Grow heap (frag case) to 4.142MB for 56388-byte allocation
D/dalvikvm(11089): GC_FOR_ALLOC freed <1K, 18% free 4192K/5092K, paused 3ms, total 3ms
D/dalvikvm(11089): GC_FOR_ALLOC freed <1K, 18% free 4192K/5092K, paused 2ms, total 2ms
I/dalvikvm-heap(11089): Grow heap (frag case) to 4.750MB for 635808-byte allocation
D/dalvikvm(11089): GC_CONCURRENT freed <1K, 16% free 4813K/5716K, paused 2ms+0ms, total 7ms
I/dalvikvm(11089): Could not find method android.content.res.Resources.getDrawable, referenced from method android.support.v7.widget.de.getDrawable
W/dalvikvm(11089): VFY: unable to resolve virtual method 635: Landroid/content/res/Resources;.getDrawable (ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x0002
I/dalvikvm(11089): Could not find method android.content.res.Resources.getDrawableForDensity, referenced from method android.support.v7.widget.de.getDrawableForDensity
W/dalvikvm(11089): VFY: unable to resolve virtual method 637: Landroid/content/res/Resources;.getDrawableForDensity (IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x0002
E/dalvikvm(11089): Could not find class 'android.graphics.drawable.RippleDrawable', referenced from method android.support.v7.widget.ai.a
W/dalvikvm(11089): VFY: unable to resolve instanceof 190 (Landroid/graphics/drawable/RippleDrawable;) in Landroid/support/v7/widget/ai;
D/dalvikvm(11089): VFY: replacing opcode 0x20 at 0x000c
E/dalvikvm(11089): Could not find class 'com.flurry.sdk.i', referenced from method com.flurry.sdk.md.a
W/dalvikvm(11089): VFY: unable to resolve const-class 4287 (Lcom/flurry/sdk/i;) in Lcom/flurry/sdk/md;
D/dalvikvm(11089): VFY: replacing opcode 0x1c at 0x0020
W/FlurryAgent(11089): Flurry session started for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4a859f34
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4a859f34
W/FlurryAgent(11089): Event count started: Login Screen
D/dalvikvm(11089): GC_FOR_ALLOC freed 188K, 14% free 4963K/5716K, paused 5ms, total 5ms
I/dalvikvm-heap(11089): Grow heap (frag case) to 5.856MB for 1007244-byte allocation
D/dalvikvm(11089): GC_FOR_ALLOC freed <1K, 12% free 5946K/6700K, paused 4ms, total 4ms
D/dalvikvm(11089): GC_CONCURRENT freed 7K, 12% free 5950K/6700K, paused 0ms+0ms, total 3ms
D/libEGL  (11089): loaded /system/lib/egl/libEGL_adreno.so
D/        (11089): HostConnection::get() New Host Connection established 0xb875db50, tid 11089
D/libEGL  (11089): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (11089): loaded /system/lib/egl/libGLESv2_adreno.so
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer(11089): Enabling debug mode 0
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1117417, downTime=1117417, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1117954, downTime=1117954, deviceId=-1, source=0x101 }
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:2
I/System.out(11089): <com.flurry.sdk.kp: void r()>###specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r1)###https://data.flurry.com/aap.do
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11089): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.dayforce.mobile/settings?instance=685a70868906c1179ce902e2b0c627bd74494838&source=1&build_version=85019&icon_hash=da32e884d3073819a5432a5b19fafd9ef38f9f0e&display_version=8.5019
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:3
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
D/dalvikvm(11089): GC_CONCURRENT freed 520K, 9% free 6369K/6944K, paused 2ms+0ms, total 6ms
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:1
I/System.out(11089): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.dayforce.mobile/settings?instance=685a70868906c1179ce902e2b0c627bd74494838&source=1&build_version=85019&icon_hash=da32e884d3073819a5432a5b19fafd9ef38f9f0e&display_version=8.5019
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:$r7 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:54
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z0)	timediff:1
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z0)	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r1, $r13)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.d$1: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:10
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection r()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_login.ActivityLoginNormal: +712ms
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  532): animationTick called with dtms=-10; nothing to do (h=0.0 v=0.0)
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1118232, downTime=1118232, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
V/PanelView(  532): animationTick called with dtms=-2; nothing to do (h=0.0 v=-0.0)
I/ActivityManager(  464): START u0 {cmp=com.dayforce.mobile/.ui_legal.LegalDocumentListActivity (has extras)} from pid 11089
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_legal.LegalDocumentListActivity@4aa1ac68
D/dalvikvm(11089): GC_CONCURRENT freed 855K, 13% free 6637K/7548K, paused 2ms+4ms, total 15ms
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1118586, downTime=1118586, deviceId=-1, source=0x101 }
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:$r15 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:566
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_SUBTRACT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1118625, downTime=1118625, deviceId=-1, source=0x101 }
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_legal.LegalDocumentListActivity: +265ms
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:723
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String b(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: int a(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream g()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): URLConn;%;0;%;<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream g()>;%;$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.dayforce.mobile/settings?instance=685a70868906c1179ce902e2b0c627bd74494838&source=1&build_version=85019&icon_hash=da32e884d3073819a5432a5b19fafd9ef38f9f0e&display_version=8.5019;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String b(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11089): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(11089): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://e.crashlytics.com/spi/v2/events
I/System.out(11089): body:<io.fabric.sdk.android.services.network.d$1: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection r()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest m()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest m()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:$i0 = virtualinvoke $r4.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:191
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:$r18 = virtualinvoke $r4.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>()	timediff:0
I/System.out(11089): body:<com.flurry.sdk.kp: void r()>	sig:$r23 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): URLConn;%;1;%;<com.flurry.sdk.kp: void r()>;%;$r23 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://data.flurry.com/aap.do;%;true;%;Not found;%;Not found;%;Not found;%;0;%;Not found
I/System.out(11089): body:<com.flurry.sdk.kp: void t()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/FlurryAgent(11089): Analytics report sent.
I/ActivityManager(  464): START u0 {cmp=com.dayforce.mobile/.ui_legal.LegalDocumentActivity (has extras)} from pid 11089
V/WebViewChromium(11089): Binding Chromium to the background looper Looper (main, tid 1) {4a7e59d8}
I/chromium(11089): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(11089): Initializing chromium process, renderers=0
W/chromium(11089): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(11089): body:<retrofit2.aq: retrofit2.aq a(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:5
I/System.out(11089): body:<retrofit2.aq: retrofit2.aq a(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out(11089): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out(11089): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out(11089): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:3
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:3
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
D/dalvikvm(11089): GC_CONCURRENT freed 915K, 13% free 6952K/7920K, paused 3ms+7ms, total 19ms
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:1
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out(11089): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out(11089): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out(11089): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:6
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:55
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(11089): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:1
I/System.out(11089): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>($r2, null, null)	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:1
I/System.out(11089): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a: void b()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:59
I/System.out(11089): body:<com.dayforce.mobile.service.a: void b()>	sig:virtualinvoke $r0.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a: void b()>	sig:virtualinvoke $r0.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:18
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r4.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r7.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r4, $r5, $r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:1
I/System.out(11089): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:3
I/System.out(11089): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:22
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:22
I/System.out(11089): body:<com.dayforce.mobile.service.a: java.lang.Object a(java.lang.Class,android.content.Context,java.lang.String)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:22
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<retrofit2.am: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:4
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:8
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r1)	timediff:9
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i2 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>	sig:staticinvoke <okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>($r1, $r0, $i2, $i1, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r0 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r11 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>($r9)	timediff:11
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r5)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r9, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(11089): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(11089): body:<retrofit2.q: okhttp3.Call f()>	sig:$r5 = interfaceinvoke $r4.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.HttpUrl redactedUrl()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:4
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r1)	timediff:5
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r0 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.HttpUrl redactedUrl()>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>("/...")	timediff:6
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>	sig:$r3 = virtualinvoke $r1.<okhttp3.RealCall: okhttp3.HttpUrl redactedUrl()>()	timediff:6
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>	sig:$r5 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>	sig:$r1 = staticinvoke <okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r4)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>($r1, $r2)	timediff:8
I/System.out(11089): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,okhttp3.RealCall$1)>($r0, $r1, null)	timediff:8
I/System.out(11089): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>	sig:$r5 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp Dispatcher", 0)	timediff:7
I/System.out(11089): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:7
I/System.out(11089): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:7
I/System.out(11089): body:<retrofit2.q: void a(retrofit2.k)>	sig:interfaceinvoke $r8.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r9)	timediff:16
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_legal.LegalDocumentActivity@4a8069b4
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:10
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r7 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r6.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r7)	timediff:0
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1119024, downTime=1119024, deviceId=-1, source=0x101 }
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r9 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r8.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r9)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r10.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:1
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "utf-8")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 1, 0, 1, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 1, 0, 1, 1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)>("sid", $r5)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i2 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>	sig:staticinvoke <okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>($r1, $r0, $i2, $i1, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:3
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r7.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:9
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("RoleId", $r5)	timediff:9
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("CultureCode", $r6)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r8)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r7.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r6, $r11)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:3
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r6)	timediff:5
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:16
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:17
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:19
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:29
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r5, $r7)	timediff:30
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r7, 0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r6)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:4
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:4
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:3
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Version: java.lang.String userAgent()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r6)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r3, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:1
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>(2147483647, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:1
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:3
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:20
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:20
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:22
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i0 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
D/dalvikvm(11089): GC_CONCURRENT freed 999K, 13% free 7344K/8396K, paused 0ms+16ms, total 39ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:3
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(11089): WAIT_FOR_CONCURRENT_GC blocked 11ms
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_legal.LegalDocumentActivity: +561ms
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 464
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest m()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:600
I/System.out(11089): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:191
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:191
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:197
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:197
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:198
I/System.out(11089): body:<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.framed.FramedConnection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:2
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r1, $r3)	timediff:3
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r6.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:159
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(11089): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(11089): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://e.crashlytics.com/spi/v2/events
I/System.out(11089): body:<io.fabric.sdk.android.services.network.d$1: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection r()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest m()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest m()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest m()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:10
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:170
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r7, $r9, $i0)	timediff:171
I/System.out(11089): body:<okio.m: okio.s b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<okio.m: okio.r a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:172
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:7
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:4
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:10
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:19
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:31
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:32
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:2
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:6
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:4
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:2
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:16
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:5
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:12
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:2
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:40
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:40
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:40
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:5
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:2
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:2
I/System.out(11089): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:9
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:10
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:10
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:82
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:3
I/System.out(11089): body:<io.fabric.sdk.android.services.network.HttpRequest: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:159
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4a859f34
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_legal.LegalDocumentListActivity@4aa1ac68
I/WearableService(  654): Wearable Services stopping
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r5 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r6)	timediff:0
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r1.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r5, $r4, $r7, $r8)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r14 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r13)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r5.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r6 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r8, $r12)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r11.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(11089): body:<okio.m: okio.s b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<okio.m: okio.r a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:613
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:613
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r3)	timediff:785
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r14, $z0)	timediff:789
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r15.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r10)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:991
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:991
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r6 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.f,okio.e)>($r1, $r0, $r7, $r10)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:993
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i2, 35)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r4)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r5 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r3)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r6.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:3
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
D/dalvikvm(11089): GC_CONCURRENT freed 1445K, 18% free 7307K/8804K, paused 0ms+1ms, total 11ms
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:6
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:7
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:15
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:188
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:188
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:13
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:14
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:14
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:8
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:8
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:8
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.f access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.s newFixedLengthSource(long)>($l0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>($r1)	timediff:10
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>($r4, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:10
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r16)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r15.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r15.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r15.<okhttp3.Response: int code()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:230
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:230
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1223
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1223
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:7
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:11
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:4
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:7
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;2;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FPrivacyPolicy.html?sid=;%;GET;%;[5664];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:7
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Content-Encoding: gzip
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "fba4d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:53 GMT
I/System.out(11089): Content-Length: 5664
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1259
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:6
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:7
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:7
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:5
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:6
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:4
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:5
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:11
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:2
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r7)	timediff:2
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:4
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:5
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r7, $r3, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1320
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1320
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;3;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FPrivacyPolicy.html?sid=;%;GET;%;[5664];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:12
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Content-Encoding: gzip
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "fba4d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:53 GMT
I/System.out(11089): Content-Length: 5664
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10)	timediff:1338
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r7, $r12)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z1 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r11)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r16.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r12.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r12)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r19.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>($r12, $r17)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r19)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1367
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r10.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r2, null, null)	timediff:1368
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r12)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1404
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1404
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:2
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;4;%;<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r7);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FPrivacyPolicy.html?sid=;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:3
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:5
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "fba4d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:53 GMT
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r7)	timediff:1416
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1437
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1437
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;5;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FPrivacyPolicy.html;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:3
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "fba4d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:53 GMT
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1445
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:1465
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r2 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall)>($r1)	timediff:1465
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.internal.http.RetryAndFollowUpInterceptor access$200(okhttp3.RealCall)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$z1 = virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()>()	timediff:0
W/WindowManager(  464): updateFocusedWindowLocked, focusedAppToken is null.
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:1
I/System.out(11089): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r5 = virtualinvoke $r3.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$l0 = virtualinvoke $r3.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(11089): body:<retrofit2.s: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:3
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<retrofit2.r: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<retrofit2.r: okio.f source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.d,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.f access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.j)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.j)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.j)>($r1, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.d,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11089): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<retrofit2.r: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.r: long contentLength()>	sig:$l0 = virtualinvoke $r1.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
W/ViewRootImpl(  532): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1120597, downTime=1120597, deviceId=-1, source=0x101 }
W/ViewRootImpl(  532): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1120622, downTime=1120622, deviceId=-1, source=0x101 }
W/ViewRootImpl(  532): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1120625, downTime=1120625, deviceId=-1, source=0x101 }
W/ViewRootImpl(  532): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1120627, downTime=1120627, deviceId=-1, source=0x101 }
I/System.out(11089): body:<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.f)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:1
I/System.out(11089): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.f)>	sig:specialinvoke $r3.<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.f)>($r0, $l0, $r1)	timediff:1
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$r0 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.f)>($r3, $l0, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.r: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(11089): body:<retrofit2.b: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(11089): body:<retrofit2.ao: retrofit2.ao a(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:1
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r1, $r2)	timediff:13
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$400(okhttp3.RealCall)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r7 = virtualinvoke $r6.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r7.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:1478
I/System.out(11089): body:<retrofit2.ao: int a()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<retrofit2.ao: boolean c()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r4 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r4)	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r8 = virtualinvoke $r7.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r9 = virtualinvoke $r7.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r3 = virtualinvoke $r9.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r10 = virtualinvoke $r9.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
W/ViewRootImpl(  532): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=1.0, y[0]=-1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1120676, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(  532): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1120677, downTime=1120677, deviceId=-1, source=0x101 }
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/InputEventReceiver(  532): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  532): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  532): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(  532): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=462.8648, y[0]=283.3545, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=8, eventTime=1120769, downTime=1120689, deviceId=0, source=0x1002 }
W/ViewRootImpl(  532): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=476.94464, y[0]=284.35205, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1120778, downTime=1120689, deviceId=0, source=0x1002 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1120809, downTime=1120809, deviceId=-1, source=0x101 }
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 464
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1121070, downTime=1121070, deviceId=-1, source=0x101 }
I/chromium(11089): [INFO:async_pixel_transfer_manager_android.cc(56)] Async pixel transfers not supported
I/chromium(11089): [INFO:simple_index_file.cc(397)] Simple Cache Index is being restored from disk.
I/chromium(11089): [INFO:async_pixel_transfer_manager_android.cc(56)] Async pixel transfers not supported
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
W/InputManager(  464): Input event injection from pid 11079 failed.
D/dalvikvm(11089): GC_FOR_ALLOC freed 1212K, 16% free 7408K/8804K, paused 4ms, total 4ms
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_legal.LegalDocumentListActivity@4aa1ac68
I/ActivityManager(  464): START u0 {act=android.intent.action.VIEW dat=http://www.flurry.com/privacy-policy.html cmp=com.android.browser/.BrowserActivity} from pid 11089
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1122334, downTime=1122334, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1122457, downTime=1122457, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1122476, downTime=1122476, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1122479, downTime=1122479, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1122491, downTime=1122491, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_9, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1122730, downTime=1122730, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a8b888c attribute=null, token = android.os.BinderProxy@4a9ad8b0
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_legal.LegalDocumentActivity@4a8069b4
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 464
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/ActivityManager(  464): START u0 {cmp=com.dayforce.mobile/.ui_legal.LegalDocumentActivity (has extras)} from pid 11089
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(11089): body:<retrofit2.aq: retrofit2.aq a(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:4
I/System.out(11089): body:<retrofit2.aq: retrofit2.aq a(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(11089): GC_FOR_ALLOC freed 702K, 14% free 7766K/8964K, paused 5ms, total 5ms
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:25
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:27
I/System.out(11089): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:28
I/System.out(11089): body:<com.dayforce.mobile.service.a: java.lang.Object a(java.lang.Class,android.content.Context,java.lang.String)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:28
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<retrofit2.am: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
W/InputManager(  464): Input event injection from pid 11079 failed.
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i2 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>	sig:staticinvoke <okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>($r1, $r0, $i2, $i1, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r0 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r11 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>($r9)	timediff:5
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r5)	timediff:1
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r9, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<retrofit2.am: okhttp3.Request a()>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(11089): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(11089): body:<retrofit2.q: okhttp3.Call f()>	sig:$r5 = interfaceinvoke $r4.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.HttpUrl redactedUrl()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r0 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.HttpUrl redactedUrl()>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>("/...")	timediff:3
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>	sig:$r3 = virtualinvoke $r1.<okhttp3.RealCall: okhttp3.HttpUrl redactedUrl()>()	timediff:3
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>	sig:$r5 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>	sig:$r1 = staticinvoke <okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r4)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback)>($r1, $r2)	timediff:3
I/System.out(11089): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,okhttp3.RealCall$1)>($r0, $r1, null)	timediff:3
I/System.out(11089): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r7 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r6.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r9 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r8.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r9)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r10.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "utf-8")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 1, 0, 1, 1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 1, 0, 1, 1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)>("sid", $r5)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>	sig:$i2 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>	sig:staticinvoke <okhttp3.HttpUrl: void percentDecode(okio.d,java.lang.String,int,int,boolean)>($r1, $r0, $i2, $i1, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:3
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r7.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("RoleId", $r5)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("CultureCode", $r6)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r8)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r7.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r6, $r11)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:2
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:2
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:2
I/System.out(11089): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:4
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:4
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(11089): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:5
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r6)	timediff:6
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:4
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:4
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r5, $r7)	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r7, 0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r6)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Version: java.lang.String userAgent()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r6)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r3, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:1
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:31
I/System.out(11089): body:<retrofit2.q: void a(retrofit2.k)>	sig:interfaceinvoke $r8.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r9)	timediff:35
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_legal.LegalDocumentActivity@4aa8ee70
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(11089): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:6
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:6
I/System.out(11089): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:8
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i0 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r9 = virtualinvoke $r8.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out(11089): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:4
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r6.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:1
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1123639, downTime=1123639, deviceId=-1, source=0x101 }
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_legal.LegalDocumentActivity: +266ms
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:170
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r7, $r9, $i0)	timediff:170
I/System.out(11089): body:<okio.m: okio.s b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<okio.m: okio.r a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:172
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:4
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:3
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:3
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:11
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:12
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:10
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:4
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:7
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:11
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:27
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:27
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:28
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:8
I/System.out(11089): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:8
I/System.out(11089): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:9
I/System.out(11089): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:9
I/System.out(11089): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:10
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:10
I/System.out(11089): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:10
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:50
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:1
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:2
I/System.out(11089): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:2
I/System.out(11089): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:2
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:3
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/ActivityManager(  464): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 11089
W/PhoneFallbackEventHandler(11089): No activity found for android.intent.action.CALL_BUTTON.
D/dalvikvm(11089): GC_CONCURRENT freed 1590K, 18% free 7771K/9416K, paused 1ms+2ms, total 14ms
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_legal.LegalDocumentListActivity@4aa1ac68
D/dalvikvm(  464): GC_CONCURRENT freed 2972K, 32% free 17602K/25564K, paused 2ms+2ms, total 13ms
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 464
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r5 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r6)	timediff:0
I/System.out(11089): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r1.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r5, $r4, $r7, $r8)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r14 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r13)	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r5.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(11089): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r6 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r8, $r12)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r11.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(11089): body:<okio.m: okio.s b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<okio.m: okio.r a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:574
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:574
I/System.out(11089): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r3)	timediff:746
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r14, $z0)	timediff:746
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(11089): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:3
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r15.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r10)	timediff:3
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:755
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:755
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r6 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.f,okio.e)>($r1, $r0, $r7, $r10)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:757
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:3
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(11089): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i2, 35)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:5
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:6
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:2
I/ActivityManager(  464): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 11089
W/PhoneFallbackEventHandler(11089): No activity found for android.intent.action.CALL_BUTTON.
I/System.out(11089): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r4)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r5 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r6.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:5
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:181
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:181
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:3
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:8
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:9
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:9
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.f access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.s newFixedLengthSource(long)>($l0)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.s getTransferStream(okhttp3.Response)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>($r4, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:5
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r16)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:2
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:4
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:5
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r15.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r15.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r15.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:223
I/System.out(11089): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:223
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:981
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:981
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:7
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;6;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FTermsOfUse.html?sid=;%;GET;%;[3447];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:3
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Content-Encoding: gzip
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "3fa74d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:58 GMT
I/System.out(11089): Content-Length: 3447
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:999
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:4
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:4
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:4
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:6
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:6
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:6
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:8
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:3
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:3
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r7, $r3, $r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1019
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1020
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;7;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FTermsOfUse.html?sid=;%;GET;%;[3447];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Content-Encoding: gzip
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "3fa74d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:58 GMT
I/System.out(11089): Content-Length: 3447
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10)	timediff:1030
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r7, $r12)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:6
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:6
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:6
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z1 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r11)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r16.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r12.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r12)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r19.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.f)>($r12, $r17)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r19)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1047
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r10.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r2, null, null)	timediff:1047
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r12)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1059
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1059
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:2
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_EMAIL]}} from pid 464
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:6
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(11089): OkHttpP;%;8;%;<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r7);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FTermsOfUse.html?sid=;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:8
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "3fa74d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:58 GMT
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<com.dayforce.mobile.service.a$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r7)	timediff:1082
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:1091
I/System.out(11089): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:1091
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:1
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:6
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:6
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:2
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:4
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:1
I/System.out(11089): OkHttpP;%;9;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://dfonlinehelp.dayforcehcm.com/Global/Legal/English%2FTermsOfUse.html;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:3
I/System.out(11089): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:13
I/System.out(11089): header:Content-Type: text/html
I/System.out(11089): Last-Modified: Fri, 16 Mar 2018 16:14:13 GMT
I/System.out(11089): Accept-Ranges: bytes
I/System.out(11089): ETag: "3fa74d341bdd31:0"
I/System.out(11089): Vary: Accept-Encoding
I/System.out(11089): Server: Microsoft-IIS/10.0
I/System.out(11089): Date: Fri, 13 Apr 2018 21:59:58 GMT
I/System.out(11089): Strict-Transport-Security: max-age=157680000
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1123
I/System.out(11089): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:1124
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r2 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall)>($r1)	timediff:1124
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.internal.http.RetryAndFollowUpInterceptor access$200(okhttp3.RealCall)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$z1 = virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()>()	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
W/InputManager(  464): Input event injection from pid 11079 failed.
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:5
I/System.out(11089): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:5
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:6
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11089): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r5 = virtualinvoke $r3.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$l0 = virtualinvoke $r3.<okhttp3.ResponseBody: long contentLength()>()	timediff:1
I/System.out(11089): body:<retrofit2.s: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out(11089): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out(11089): body:<retrofit2.q: retrofit2.ao a(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<retrofit2.r: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<retrofit2.r: okio.f source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.d,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.f access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.j)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.j)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.j)>($r1, $r5)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:1
I/System.out(11089): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(11089): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:1
I/System.out(11089): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.d,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:2
I/System.out(11089): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(11089): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:1
I/System.out(11089): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(11089): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(11089): body:<retrofit2.r: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(11089): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:1
I/System.out(11089): body:<retrofit2.r: long contentLength()>	sig:$l0 = virtualinvoke $r1.<okhttp3.ResponseBody: long contentLength()>()	timediff:1
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:1
I/System.out(11089): body:<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.f)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.f)>	sig:specialinvoke $r3.<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.f)>($r0, $l0, $r1)	timediff:0
I/System.out(11089): body:<retrofit2.at: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:$r0 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.f)>($r3, $l0, $r1)	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(11089): body:<retrofit2.r: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(11089): body:<retrofit2.b: okhttp3.ResponseBody a(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:6
I/System.out(11089): body:<retrofit2.ao: retrofit2.ao a(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r1, $r2)	timediff:21
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$400(okhttp3.RealCall)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r7 = virtualinvoke $r6.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(11089): body:<retrofit2.ao: int a()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(11089): body:<retrofit2.ao: boolean c()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r4 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.f source()>()	timediff:0
I/System.out(11089): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 1)	timediff:1
I/System.out(11089): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r4)	timediff:0
I/System.out(11089): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r7.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:1
I/System.out(11089): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:0
I/System.out(11089): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:1146
I/System.out(11089): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(11089): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r8 = virtualinvoke $r7.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:1
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r9 = virtualinvoke $r7.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r3 = virtualinvoke $r9.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<com.dayforce.mobile.ui_legal.LegalDocumentActivity$7: void a(retrofit2.h,retrofit2.ao)>	sig:$r10 = virtualinvoke $r9.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
W/InputManager(  464): Input event injection from pid 11079 failed.
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-1.0, y[0]=4.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=1124894, downTime=-1, deviceId=0, source=0x10004 }
I/chromium(11089): [INFO:async_pixel_transfer_manager_android.cc(56)] Async pixel transfers not supported
I/chromium(11089): [INFO:async_pixel_transfer_manager_android.cc(56)] Async pixel transfers not supported
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1125834, downTime=1125834, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-5.0, y[0]=-4.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=3, eventTime=1125860, downTime=-1, deviceId=0, source=0x10004 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1126601, downTime=1126601, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_CALL, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1126613, downTime=1126613, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9ec6fc attribute=null, token = android.os.BinderProxy@4aca5fbc
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
D/dalvikvm(11089): GC_CONCURRENT freed 1613K, 18% free 7721K/9416K, paused 2ms+1ms, total 8ms
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
I/ActivityManager(  464): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 11089
W/PhoneFallbackEventHandler(11089): No activity found for android.intent.action.CALL_BUTTON.
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyMultiple called from: android.webkit.WebView.onKeyMultiple(WebView.java:2179)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_CALENDAR]}} from pid 464
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
I/SnapScrollController(11089): setSnapScrollingMode case-default no-op
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/UnimplementedWebViewApi(11089): Unimplemented WebView method onKeyDown called from: android.webkit.WebView.onKeyDown(WebView.java:2169)
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_legal.LegalDocumentListActivity@4aa1ac68
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1130866, downTime=1130866, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1131028, downTime=1131028, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1131103, downTime=1131103, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-1.0, y[0]=-3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=1131110, downTime=-1, deviceId=0, source=0x10004 }
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/FlurryAgent(11089): Event count incremented: Login Screen
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4a859f34
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm(11089): GC_FOR_ALLOC freed 528K, 19% free 7643K/9416K, paused 4ms, total 4ms
I/dalvikvm-heap(11089): Grow heap (frag case) to 7.596MB for 87628-byte allocation
D/dalvikvm(11089): GC_FOR_ALLOC freed 0K, 19% free 7729K/9504K, paused 9ms, total 9ms
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_legal.LegalDocumentListActivity@4aa1ac68
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_12, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1131723, downTime=1131723, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1131723, downTime=1131723, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae58dc4 attribute=android.view.inputmethod.EditorInfo@4acc42ec, token = android.os.BinderProxy@4af6c9ec
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132050, downTime=1132050, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BACK, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132079, downTime=1132079, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_AT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132180, downTime=1132180, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a972908 attribute=android.view.inputmethod.EditorInfo@4a962298, token = android.os.BinderProxy@4af6c9ec
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132208, downTime=1132208, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132342, downTime=1132342, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132342, downTime=1132342, deviceId=-1, source=0x101 }
W/EGL_emulation( 1941): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9e03b0 attribute=android.view.inputmethod.EditorInfo@4a9ce358, token = android.os.BinderProxy@4af6c9ec
D/FirebaseApp(  681): Notifying background state change listeners.
W/EGL_emulation(  681): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(  681): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1132631, downTime=1132631, deviceId=-1, source=0x101 }
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4a859f34
W/Launcher(  681): No global search activity found.
W/PropertyValuesHolder(  681): Method setBrightness() with type int not found on target class class ph
W/PropertyValuesHolder(  681): Method getBrightness() with type int not found on target class class ph
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.android.camera/.Camera bnds=[742,174][946,301] (has extras)} from pid 681
W/ContextImpl(  681): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3192 com.vphone.launcher.Launcher.onClickAppShortcut:3144 
W/PropertyValuesHolder(  681): Method setBrightness() with type int not found on target class class ph
W/PropertyValuesHolder(  681): Method getBrightness() with type int not found on target class class ph
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.cyanogenmod.filemanager/.activities.NavigationActivity bnds=[334,174][538,301] (has extras)} from pid 681
W/PropertyValuesHolder(  681): Method setBrightness() with type int not found on target class class ph
W/PropertyValuesHolder(  681): Method getBrightness() with type int not found on target class class ph
W/ContextImpl(  681): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1137 android.content.ContextWrapper.sendBroadcast:370 com.vphone.launcher.Stats.recordLaunch:129 com.vphone.launcher.Launcher.c:3192 com.vphone.launcher.Launcher.onClickAppShortcut:3144 
W/NetworkManagementSocketTagger(  464): setKernelCountSet(10068, 0) failed with errno -13
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_legal.LegalDocumentActivity@4aa8ee70
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
I/ActivityManager(  464): START u0 {act=android.intent.action.VIEW dat=https://tracking.apptrackerlink.com/ws/action/click?offer_id=885364&bid_id=NBVpl8jBGqSxpnoXpY74Hmmg9RJy&imp_id=DOj2YRJpqAhAYj3BLzMxiw8YoOw&p_id=a57d1f0d-3e45-4524-8e9b-4f61b8d09b3a&mac=2C:56:DC:4E:22:14&gaid=e4382e3f-a082-4060-b970-a4dd13ffa2b6 cmp=com.android.browser/.BrowserActivity} from pid 681
W/ContextImpl(  681): Calling a method in the system process without a qualified user: android.app.ContextImpl.bindService:1556 android.content.ContextWrapper.bindService:517 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.common.stats.zzb.zza:-1 com.google.android.gms.ads.identifier.AdvertisingIdClient.zzh:-1 
I/qtaguid (  681): Untagging socket 82 failed errno=-13
W/NetworkManagementSocketTagger(  681): untagSocket(82) failed with errno -13
I/qtaguid (  681): Tagging socket 82 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(  681): tagSocketFd(82, 1239581248, -1) failed with errno-13
D/dalvikvm(  464): GC_FOR_ALLOC freed 1604K, 33% free 17250K/25564K, paused 12ms, total 13ms
I/dalvikvm-heap(  464): Grow heap (frag case) to 18.878MB for 2073612-byte allocation
D/dalvikvm(  464): GC_FOR_ALLOC freed 3K, 31% free 19272K/27592K, paused 14ms, total 14ms
D/dalvikvm(  464): GC_FOR_ALLOC freed 17K, 31% free 19260K/27592K, paused 19ms, total 19ms
I/dalvikvm-heap(  464): Grow heap (frag case) to 20.840MB for 2073612-byte allocation
D/dalvikvm(  464): GC_FOR_ALLOC freed 4K, 29% free 21281K/29620K, paused 22ms, total 22ms
D/dalvikvm(  464): GC_FOR_ALLOC freed 11K, 29% free 21275K/29620K, paused 13ms, total 14ms
I/dalvikvm-heap(  464): Grow heap (frag case) to 22.808MB for 2073612-byte allocation
D/dalvikvm(  464): GC_FOR_ALLOC freed <1K, 27% free 23299K/31648K, paused 15ms, total 16ms
D/dalvikvm(  681): GC_CONCURRENT freed 7256K, 13% free 53023K/60404K, paused 1ms+11ms, total 68ms
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
I/qtaguid (  681): Tagging socket 110 with tag 49e2824000000000(1239581248) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(  681): tagSocketFd(110, 1239581248, -1) failed with errno-13
I/ActivityManager(  464): START u0 {act=android.intent.action.VIEW dat=http://launcher.us.yeshen.com/api/app/detail?id=com.sega.sonicdash flg=0x10000000 cmp=com.android.browser/.BrowserActivity} from pid 681
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
I/ActivityManager(  464): START u0 {act=android.intent.action.VIEW dat=http://launcher.us.yeshen.com/api/app/detail?id=com.sega.sonicdash flg=0x10000000 cmp=com.android.browser/.BrowserActivity} from pid 681
D/dalvikvm(  464): GC_FOR_ALLOC freed 6310K, 46% free 17139K/31648K, paused 13ms, total 16ms
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
D/dalvikvm(  464): GC_FOR_ALLOC freed 13K, 39% free 19393K/31648K, paused 22ms, total 22ms
D/yeshen  (  681): launcher onpause
W/NetworkManagementSocketTagger(  464): setKernelCountSet(10068, 1) failed with errno -13
W/FlurryAgent(11089): Event count incremented: Login Screen
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4aa161d0
D/dalvikvm(  532): GC_FOR_ALLOC freed 8086K, 28% free 13466K/18480K, paused 3ms, total 3ms
I/dalvikvm-heap(  532): Grow heap (frag case) to 15.179MB for 2073612-byte allocation
D/dalvikvm(  532): GC_FOR_ALLOC freed 117K, 26% free 15374K/20508K, paused 4ms, total 4ms
D/dalvikvm(  464): GC_FOR_ALLOC freed 428K, 34% free 21109K/31648K, paused 51ms, total 52ms
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/iu.UploadsManager(  713): End new media; added: 3, uploading: 0, time: 614 ms
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
I/qtaguid (  681): Untagging socket 85 failed errno=-13
W/NetworkManagementSocketTagger(  681): untagSocket(85) failed with errno -13
I/qtaguid (  681): Tagging socket 85 with tag 1b8a7d1b00000000(462060827) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(  681): tagSocketFd(85, 462060827, -1) failed with errno-13
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_login.ActivityLoginNormal: +317ms
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1134653, downTime=1134653, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1134670, downTime=1134670, deviceId=-1, source=0x101 }
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa60604 attribute=android.view.inputmethod.EditorInfo@4ad35204, token = android.os.BinderProxy@4af66464
I/ActivityManager(  464): START u0 {cmp=com.dayforce.mobile/.ui_login.ActivityAccountSettings} from pid 11089
I/dalvikvm(11089): Could not find method android.widget.CompoundButton.drawableHotspotChanged, referenced from method android.support.v7.widget.SwitchCompat.drawableHotspotChanged
W/dalvikvm(11089): VFY: unable to resolve virtual method 15450: Landroid/widget/CompoundButton;.drawableHotspotChanged (FF)V
D/dalvikvm(11089): VFY: replacing opcode 0x6f at 0x0006
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_login.ActivityAccountSettings@4aa5eb50
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(11089): <com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://www.dayforcehcm.com/MobileWebService/JSONService.svc/getEmailLoginEnabled
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:virtualinvoke $r12.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: void a(java.net.HttpURLConnection,com.android.volley.Request)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")	timediff:0
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=4.0, y[0]=3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=3, eventTime=1134856, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-4.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=1134864, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=0.0, y[0]=-1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=1134944, downTime=-1, deviceId=0, source=0x10004 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/qtaguid (  681): Tagging socket 101 with tag 1b8a7d1b00000000(462060827) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(  681): tagSocketFd(101, 462060827, -1) failed with errno-13
I/qtaguid (11089): Tagging socket 44 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(44, 1398686303, -1) failed with errno-13
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_login.ActivityAccountSettings: +308ms
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_POINTER_DOWN(1), id[0]=0, x[0]=1017.8673, y[0]=62.55301, toolType[0]=TOOL_TYPE_UNKNOWN, id[1]=1, x[1]=56.0, y[1]=-78.0, toolType[1]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=2, historySize=0, eventTime=1135189, downTime=1135187, deviceId=0, source=0x1002 }
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_POINTER_UP(1), id[0]=0, x[0]=1009.1116, y[0]=51.839508, toolType[0]=TOOL_TYPE_UNKNOWN, id[1]=1, x[1]=49.273895, y[1]=-87.63844, toolType[1]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=2, historySize=0, eventTime=1135192, downTime=1135187, deviceId=0, source=0x1002 }
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=1007.2931, y[0]=34.112106, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1135193, downTime=1135187, deviceId=0, source=0x1002 }
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1995 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/        (  681): {"errNum":0,"message":"SUCCESS"}
I/ActivityManager(  464): START u0 {cmp=com.dayforce.mobile/.ui_login.WebViewerActivity (has extras)} from pid 11089
D/dalvikvm(11089): GC_CONCURRENT freed 909K, 13% free 8347K/9500K, paused 2ms+2ms, total 16ms
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_login.WebViewerActivity@4a7f4d80
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_F10, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1135496, downTime=1135496, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_9, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1135664, downTime=1135664, deviceId=-1, source=0x101 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_PAGE_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1135664, downTime=1135664, deviceId=-1, source=0x101 }
W/AwContents(11089): nativeOnDraw failed; clearing to background color.
I/ActivityManager(  464): Displayed com.dayforce.mobile/.ui_login.WebViewerActivity: +210ms
I/qtaguid (11089): Tagging socket 108 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(108, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 108 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(108) failed with errno -13
I/qtaguid (11089): Tagging socket 108 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(108, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 108 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(108) failed with errno -13
I/qtaguid (11089): Tagging socket 108 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(108, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 108 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(108) failed with errno -13
I/qtaguid (11089): Tagging socket 108 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(108, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 108 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(108) failed with errno -13
I/qtaguid (11089): Tagging socket 108 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(108, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 108 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(108) failed with errno -13
I/qtaguid (11089): Tagging socket 108 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(108, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 108 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(108) failed with errno -13
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1995 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/AwContents(11089): nativeOnDraw failed; clearing to background color.
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1135904, downTime=1135904, deviceId=-1, source=0x101 }
W/AwContents(11089): nativeOnDraw failed; clearing to background color.
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:1033
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$r8 = virtualinvoke $r12.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$r1 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): URLConn;%;10;%;<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>;%;$r1 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://www.dayforcehcm.com/MobileWebService/JSONService.svc/getEmailLoginEnabled;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r0.<java.net.HttpURLConnection: int getContentLength()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentType()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$r5 = virtualinvoke $r12.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>()	timediff:1
I/qtaguid (11089): Tagging socket 111 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(111, 1398686303, -1) failed with errno-13
I/qtaguid (11089): Untagging socket 44 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(44) failed with errno -13
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/dalvikvm(11089): Could not find method android.widget.PopupWindow.setEnterTransition, referenced from method android.support.v7.widget.MenuPopupWindow.a
W/dalvikvm(11089): VFY: unable to resolve virtual method 15887: Landroid/widget/PopupWindow;.setEnterTransition (Landroid/transition/Transition;)V
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x000c
I/dalvikvm(11089): Could not find method android.widget.PopupWindow.setExitTransition, referenced from method android.support.v7.widget.MenuPopupWindow.b
W/dalvikvm(11089): VFY: unable to resolve virtual method 15888: Landroid/widget/PopupWindow;.setExitTransition (Landroid/transition/Transition;)V
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x000c
I/ListPopupWindow(11089): Could not find method setEpicenterBounds(Rect) on PopupWindow. Oh well.
I/dalvikvm(11089): Could not find method android.view.View.drawableHotspotChanged, referenced from method android.support.v7.widget.bf.a
W/dalvikvm(11089): VFY: unable to resolve virtual method 14768: Landroid/view/View;.drawableHotspotChanged (FF)V
D/dalvikvm(11089): VFY: replacing opcode 0x6e at 0x004e
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/chromium(11089): [INFO:async_pixel_transfer_manager_android.cc(56)] Async pixel transfers not supported
I/chromium(11089): [INFO:async_pixel_transfer_manager_android.cc(56)] Async pixel transfers not supported
D/yeshen  (  681): launcher onstop
D/FirebaseApp(  681): Notifying background state change listeners.
D/Tinker.DefaultAppLike(  681): onTrimMemory level:20
W/DebugConnManager(  681): getNetworkInfo() on networkType 1
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_login.ActivityLoginNormal@4aa161d0
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_login.ActivityAccountSettings@4aa5eb50
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
I/ActivityManager(  464): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 11089
W/PhoneFallbackEventHandler(11089): No activity found for android.intent.action.CALL_BUTTON.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=386.0, y[0]=-28.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1138625, downTime=1138624, deviceId=0, source=0x1002 }
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/FlurryAgent(11089): Flurry session resumed for context:com.dayforce.mobile.ui_login.ActivityAccountSettings@4aa5eb50
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)	timediff:0
I/System.out(11089): <com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>###specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r8)###https://www.dayforcehcm.com/MobileWebService/JSONService.svc/getEmailLoginEnabled
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: java.net.HttpURLConnection a(java.net.URL,com.android.volley.Request)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:virtualinvoke $r12.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r8, $r7)	timediff:1
I/System.out(11089): body:<com.android.volley.toolbox.j: void a(java.net.HttpURLConnection,com.android.volley.Request)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")	timediff:0
I/qtaguid (11089): Tagging socket 44 with tag 535e425f00000000(1398686303) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(11089): tagSocketFd(44, 1398686303, -1) failed with errno-13
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:175
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$r8 = virtualinvoke $r12.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$r1 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(11089): URLConn;%;11;%;<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>;%;$r1 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://www.dayforcehcm.com/MobileWebService/JSONService.svc/getEmailLoginEnabled;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$i1 = virtualinvoke $r0.<java.net.HttpURLConnection: int getContentLength()>()	timediff:1
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentType()>()	timediff:0
I/System.out(11089): body:<com.android.volley.toolbox.j: org.apache.http.HttpResponse a(com.android.volley.Request,java.util.Map)>	sig:$r5 = virtualinvoke $r12.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>()	timediff:0
I/qtaguid (11089): Untagging socket 44 failed errno=-13
W/NetworkManagementSocketTagger(11089): untagSocket(44) failed with errno -13
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a982c18 attribute=null, token = android.os.BinderProxy@4a9fefd8
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1139015, downTime=1139015, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1139036, downTime=1139036, deviceId=-1, source=0x101 }
I/ActivityManager(  464): START u0 {act=android.intent.action.CHOOSER flg=0x1 cmp=android/com.android.internal.app.ChooserActivity (has clip) (has extras)} from pid 11089
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a93e570 attribute=null, token = android.os.BinderProxy@4a9fefd8
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
V/PanelView(  532): animationTick called with dtms=0; nothing to do (h=0.0 v=-2367.05)
V/PanelView(  532): animationTick called with dtms=-10; nothing to do (h=0.0 v=-2367.05)
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1139518, downTime=1139518, deviceId=-1, source=0x101 }
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/FlurryAgent(11089): Flurry session paused for context:com.dayforce.mobile.ui_login.WebViewerActivity@4a7f4d80
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.dayforce.mobile/.ui_login.ActivityLoginNormal} from pid 11079
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1139723, downTime=1139723, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=74.49869, y[0]=384.2281, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1139860, downTime=1139852, deviceId=0, source=0x1002 }
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa4eb54 attribute=android.view.inputmethod.EditorInfo@4aa6472c, token = android.os.BinderProxy@4a9fefd8
I/ActivityManager(  464): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 464
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
I/InputDispatcher(  464): Dropped event because of pending overdue app switch.
W/InputManager(  464): Input event injection from pid 11079 failed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1140667, downTime=1140667, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1140713, downTime=1140713, deviceId=-1, source=0x101 }
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=19.91098, y[0]=-143.5831, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=2, eventTime=1140836, downTime=1140833, deviceId=0, source=0x1002 }
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=19.085571, y[0]=-142.63123, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1140837, downTime=1140833, deviceId=0, source=0x1002 }
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=815.0, y[0]=280.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1140843, downTime=1140843, deviceId=0, source=0x1002 }
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=811.2468, y[0]=279.70782, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1140845, downTime=1140843, deviceId=0, source=0x1002 }
W/ViewRootImpl(11089): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-1.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=1, eventTime=1140848, downTime=-1, deviceId=0, source=0x10004 }
I/ActivityManager(  464): START u0 {act=android.intent.action.VIEW cat=[android.intent.category.BROWSABLE] dat=https://www.ceridian.com/contact-us/dayforce-mobile-faqs.html cmp=com.android.browser/.BrowserActivity (has extras)} from pid 11089
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=0.0, y[0]=1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=7, eventTime=1140871, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1140876, downTime=1140876, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab90404 attribute=android.view.inputmethod.EditorInfo@4a9f41c8, token = android.os.BinderProxy@4a9fefd8
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.windowGainedFocus:1932 
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1140942, downTime=1140942, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  464): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  644): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/InputEventReceiver(11089): Attempted to finish an input event but the input event receiver has already been disposed.
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-3.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1141204, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1141205, downTime=1141205, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4adc13fc attribute=null, token = android.os.BinderProxy@4a9fefd8
W/InputMethodManagerService(  464): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa4b7f4 attribute=null, token = android.os.BinderProxy@4a9fefd8
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1141319, downTime=1141319, deviceId=-1, source=0x101 }
W/EGL_emulation(11089): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(11089): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_L2, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1141343, downTime=1141343, deviceId=-1, source=0x101 }
I/AndroidRuntime(11079): VM exiting with result code 0.
