--------- beginning of /dev/log/system
D/BackupManagerService(  492): Received broadcast Intent { act=android.intent.action.PACKAGE_REMOVED dat=package:com.booking flg=0x4000010 (has extras) }
--------- beginning of /dev/log/main
D/CF      ( 2282): ALARM_SERVICE_START_TIME = 1521943738012
I/ActivityManager(  492): Process com.ksmobile.launcher (pid 20445) has died.
I/ActivityManager(  492): Process com.groupon (pid 20821) has died.
I/ActivityManager(  492): Process com.enflick.android.TextNow (pid 20931) has died.
I/ActivityManager(  492): Process com.ksmobile.launcher:locker (pid 19498) has died.
I/ActivityManager(  492): Process com.usablenet.mobile.walgreen (pid 20877) has died.
D/BackupManagerService(  492): Received broadcast Intent { act=android.intent.action.PACKAGE_ADDED dat=package:com.booking flg=0x4000010 (has extras) }
V/BackupManagerService(  492): removePackageParticipantsLocked: uid=10098 #1
V/BackupManagerService(  492): addPackageParticipantsLocked: #1
W/ResourceType(  752): Failure getting entry for 0x7f050000 (t=4 e=0) in package 0 (error -75)
W/PackageManager(  752): Failure retrieving text 0x7f050000 in package com.android.keyguard
W/PackageManager(  752): android.content.res.Resources$NotFoundException: String resource ID #0x7f050000
W/PackageManager(  752): 	at android.content.res.Resources.getText(Resources.java:244)
W/PackageManager(  752): 	at android.app.ApplicationPackageManager.getText(ApplicationPackageManager.java:1008)
W/PackageManager(  752): 	at android.content.pm.PackageItemInfo.loadLabel(PackageItemInfo.java:115)
W/PackageManager(  752): 	at com.lionmobi.util.i.getInstalledAppMap(dalvik_source_com.lionmobi.powerclean.apk)
W/PackageManager(  752): 	at com.lionmobi.powerclean.e.b.a(dalvik_source_com.lionmobi.powerclean.apk)
W/PackageManager(  752): 	at com.lionmobi.powerclean.e.b.onEventAsync(dalvik_source_com.lionmobi.powerclean.apk)
W/PackageManager(  752): 	at java.lang.reflect.Method.invokeNative(Native Method)
W/PackageManager(  752): 	at java.lang.reflect.Method.invoke(Method.java:515)
W/PackageManager(  752): 	at de.greenrobot.event.c.a(dalvik_source_com.lionmobi.powerclean.apk)
W/PackageManager(  752): 	at de.greenrobot.event.c.a(dalvik_source_com.lionmobi.powerclean.apk)
W/PackageManager(  752): 	at de.greenrobot.event.a.run(dalvik_source_com.lionmobi.powerclean.apk)
W/PackageManager(  752): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
W/PackageManager(  752): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
W/PackageManager(  752): 	at java.lang.Thread.run(Thread.java:841)
I/ActivityManager(  492): Process com.microsoft.office.word (pid 20521) has died.
I/ActivityManager(  492): Process com.hermes.superb.booster (pid 19760) has died.
I/ActivityManager(  492): Process org.mozilla.firefox (pid 19961) has died.
I/ActivityManager(  492): Process com.facebook.lite:fbns (pid 19797) has died.
I/ActivityManager(  492): Process android.process.acore (pid 20540) has died.
W/System.err(11786): java.lang.IllegalArgumentException: Please call get() first
W/ManagedEGLContext(18415): doTerminate failed: EGL count is 2 but managed count is 1
D/Tinker.DefaultAppLike(  729): onTrimMemory level:5
W/AlexaApplication(13873): TRIM_MEMORY_MODERATE: Medium risk of getting killed.
W/AmznMusic_AmazonApplication(14706): onTrimMemory(80)
W/ManagedEGLContext(15628): doTerminate failed: EGL count is 2 but managed count is 1
I/DefaultDeliveryClient(13873): Event: 'TRIM_...' recorded to local filestore
I/DefaultDeliveryClient(13873): Event: 'APP_M...' recorded to local filestore
I/Finsky  (18746): [1] com.google.android.finsky.ci.a.onTrimMemory(5): Memory trim requested to level 5
W/System.err(11786): 	at com.alibaba.aliexpress.painter.image.h.a(SourceFile:156)
W/System.err(11786): 	at com.alibaba.app.AEApp.onLowMemory(SourceFile:692)
W/System.err(11786): 	at com.alibaba.app.AEApp.onTrimMemory(SourceFile:606)
W/System.err(11786): 	at android.app.ActivityThread.handleTrimMemory(ActivityThread.java:4055)
W/System.err(11786): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1388)
W/System.err(11786): 	at android.os.Handler.dispatchMessage(Handler.java:102)
W/System.err(11786): 	at android.os.Looper.loop(Looper.java:136)
W/System.err(11786): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
W/System.err(11786): 	at java.lang.reflect.Method.invokeNative(Native Method)
W/System.err(11786): 	at java.lang.reflect.Method.invoke(Method.java:515)
W/System.err(11786): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
W/System.err(11786): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
W/System.err(11786): 	at dalvik.system.NativeStart.main(Native Method)
W/ManagedEGLContext(14706): doTerminate failed: EGL count is 2 but managed count is 1
I/ActivityManager(  492): Process com.android.gallery3d (pid 19301) has died.
I/ActivityManager(  492): Process com.aim.racing (pid 18957) has died.
I/ActivityManager(  492): Process com.cmplay.tiles2 (pid 19340) has died.
W/InputDispatcher(  492): channel '4b2a70d4 com.amazon.dee.app/com.amazon.dee.app.Launcher (server)' ~ Consumer closed input channel or an error occurred.  events=0x9
E/InputDispatcher(  492): channel '4b2a70d4 com.amazon.dee.app/com.amazon.dee.app.Launcher (server)' ~ Channel is unrecoverably broken and will be disposed!
I/WindowState(  492): WIN DEATH: Window{4b2a70d4 u0 com.amazon.dee.app/com.amazon.dee.app.Launcher}
I/ActivityManager(  492): Process com.amazon.dee.app (pid 13873) has died.
W/InputDispatcher(  492): Attempted to unregister already unregistered input channel '4b2a70d4 com.amazon.dee.app/com.amazon.dee.app.Launcher (server)'
D/AndroidRuntime(21097): 
D/AndroidRuntime(21097): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime(21097): CheckJNI is OFF
D/dalvikvm(21097): Using executionMode 2
D/dalvikvm(21097): Trying to load lib libjavacore.so 0x0
D/dalvikvm(21097): Added shared lib libjavacore.so 0x0
D/dalvikvm(21097): Trying to load lib libnativehelper.so 0x0
D/dalvikvm(21097): Added shared lib libnativehelper.so 0x0
D/dalvikvm(21097): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm(21097): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack(21097): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug(21097): failed to load memtrack module: -2
D/AndroidRuntime(21097): Calling main entry com.android.commands.monkey.Monkey
W/BroadcastQueue(  492): Skipping deliver [background] BroadcastRecord{4b1c27c8 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4abb95e0 21097 (unknown name)/0/u-1 remote:4b750b04}: process crashing
D/dalvikvm( 3899): GC_FOR_ALLOC freed 488K, 20% free 3889K/4848K, paused 27ms, total 27ms
I/ActivityManager(  492): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.booking/.activity.StartActivity} from pid 21097
D/dalvikvm( 3899): GC_CONCURRENT freed 41K, 20% free 3902K/4848K, paused 20ms+1ms, total 23ms
D/UIKit   (20053): UIKit Pause
D/UIKit   (20053): onPauseReally -- NOTIFYING APP WILL RESIGN ACTIVE/DID ENTER BACKGROUND
D/UIKit   (20053): onPause - currentAppState = STATE_BACKGROUND_FOCUSED
W/Searchables(  492): No global search activity found
D/UIKit   (20053): UIKit Pause
D/UIKit   (20053): onPause - currentAppState = STATE_BACKGROUND_FOCUSED
D/dalvikvm( 3899): GC_FOR_ALLOC freed 281K, 19% free 3942K/4848K, paused 12ms, total 12ms
W/Searchables(  492): No global search activity found
W/RecognitionManagerService(  492): no available voice recognition services found for user 0
V/flow    (20053): onPause
D/NewAdsSurface(20053): onPause
D/MoPub   (20053): Refresh disabled for ad unit (cfbb1c329a8911e295fa123138070049).
I/AppsFlyer_1.18(20053): app goes to background
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:1
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/System.out(20053): body:<com.appsflyer.BackgroundHttpTask: java.lang.String mapToString(java.util.Map)>	sig:$r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8")	timediff:0
I/body    (20053): uid=1521564710896-1404531166941358849&devkey=qXAKGdRmAEJpnVDbKVUuMJ&platform=Android&time_in_app=188&app_id=com.bigduckgames.flow&statType=user_closed_app&launch_counter=2
D/UIApplication(20053): sendAppWillResignActive
I/ActivityManager(  492): Start proc com.booking for activity com.booking/.activity.StartActivity: pid=21125 uid=10098 gids={50098, 3003, 1028, 1015, 1023}
W/NetworkManagementSocketTagger(  492): setKernelCountSet(10098, 1) failed with errno -13
I/dalvikvm(21125): ignoring registerObject request in thread=1
I/dalvikvm(21125): ignoring registerObject request in thread=1
D/UIApplication(20053): sendAppDidEnterBackground
D/UIKit   (20053): Focus change: LOST FOCUS
D/UIKit   (20053): onWindowFocusChanged - currentAppState = STATE_BACKGROUND_NOT_FOCUSED
D/dalvikvm(11649): GC_CONCURRENT freed 4136K, 26% free 15269K/20604K, paused 1ms+0ms, total 54ms
D/dalvikvm(21125): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21125): GC_CONCURRENT freed 188K, 9% free 2985K/3268K, paused 2ms+1ms, total 6ms
D/dalvikvm(21125): GC_CONCURRENT freed 113K, 7% free 3256K/3468K, paused 4ms+1ms, total 7ms
D/dalvikvm(21125): GC_CONCURRENT freed 106K, 6% free 3535K/3744K, paused 2ms+1ms, total 5ms
D/dalvikvm(21125): GC_CONCURRENT freed 113K, 6% free 3808K/4036K, paused 2ms+0ms, total 5ms
I/tnet-jni(11786): 825 -  create new session: accscdn.m.taobao.com:443
D/dalvikvm(21125): GC_CONCURRENT freed 106K, 6% free 4087K/4316K, paused 2ms+0ms, total 5ms
D/dalvikvm(  752): GC_FOR_ALLOC freed 4099K, 24% free 14655K/19172K, paused 127ms, total 128ms
D/dalvikvm(21125): GC_CONCURRENT freed 107K, 6% free 4366K/4608K, paused 2ms+0ms, total 4ms
D/dalvikvm(21125): GC_CONCURRENT freed 125K, 6% free 4643K/4912K, paused 2ms+0ms, total 5ms
D/dalvikvm(21125): GC_CONCURRENT freed 136K, 6% free 5001K/5284K, paused 2ms+0ms, total 7ms
I/AppsFlyer_1.18(20053): Connection call succeeded
I/tnet-jni(11786): 824 - [spdySessionFailedError] - 
I/tnet-jni(11786): 824 - [SpdySessionCallBack.spdySessionFailedError] - org.android.spdy.SpdySession@4a7df660
D/tnet-jni(11786): 824 - [SpdySession.cleanUp] - 
D/tnet-jni(11786): 824 - [SpdySession.clearAllStreamCb] - 
D/tnet-jni(11786): 824 - [SpdySession.cleanUp] - 
D/dalvikvm(21125): DexOpt: --- BEGIN 'com.booking-2.apk.classes2.zip' (bootstrap=0) ---
D/dalvikvm(21173): DexOpt: couldn't find static field Landroid/os/Build;.SUPPORTED_ABIS
D/dalvikvm(21173): DexOpt: load 94ms, verify+opt 117ms, 3291404 bytes
D/dalvikvm(21125): DexOpt: --- END 'com.booking-2.apk.classes2.zip' (success) ---
D/dalvikvm(21125): DEX prep '/data/data/com.booking/app_outdexBooking/com.booking-2.apk.classes2.zip': unzip in 44ms, rewrite 489ms
D/dalvikvm(21125): DexOpt: --- BEGIN 'com.booking-2.apk.classes3.zip' (bootstrap=0) ---
D/dalvikvm(21175): DexOpt: load 21ms, verify+opt 34ms, 1416348 bytes
D/dalvikvm(21125): DexOpt: --- END 'com.booking-2.apk.classes3.zip' (success) ---
D/dalvikvm(21125): DEX prep '/data/data/com.booking/app_outdexBooking/com.booking-2.apk.classes3.zip': unzip in 10ms, rewrite 254ms
D/dalvikvm(21125): DexOpt: --- BEGIN 'com.booking-2.apk.classes4.zip' (bootstrap=0) ---
D/dalvikvm(21176): DexOpt: load 22ms, verify+opt 61ms, 1495660 bytes
D/dalvikvm(21125): DexOpt: --- END 'com.booking-2.apk.classes4.zip' (success) ---
D/dalvikvm(21125): DEX prep '/data/data/com.booking/app_outdexBooking/com.booking-2.apk.classes4.zip': unzip in 13ms, rewrite 296ms
D/dalvikvm(21125): DexOpt: --- BEGIN 'com.booking-2.apk.classes5.zip' (bootstrap=0) ---
D/dalvikvm(21177): DexOpt: load 14ms, verify+opt 54ms, 1227916 bytes
D/dalvikvm(21125): DexOpt: --- END 'com.booking-2.apk.classes5.zip' (success) ---
D/dalvikvm(21125): DEX prep '/data/data/com.booking/app_outdexBooking/com.booking-2.apk.classes5.zip': unzip in 15ms, rewrite 281ms
D/dalvikvm(21125): DexOpt: --- BEGIN 'com.booking-2.apk.classes6.zip' (bootstrap=0) ---
D/dalvikvm(21178): DexOpt: load 27ms, verify+opt 109ms, 1964260 bytes
D/dalvikvm(21125): DexOpt: --- END 'com.booking-2.apk.classes6.zip' (success) ---
D/dalvikvm(21125): DEX prep '/data/data/com.booking/app_outdexBooking/com.booking-2.apk.classes6.zip': unzip in 25ms, rewrite 369ms
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out(21125): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out(21125): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out(21125): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>	sig:specialinvoke $r3.<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>($r0, $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>	sig:$r3 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>($r0, $l0, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>(null, $r0)	timediff:2
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: void <clinit>()>	sig:$r3 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>(null, $r0)	timediff:3
I/System.out(21125): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:6
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_NULL_MD5", 1)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_NULL_SHA", 2)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_RC4_128_MD5", 4)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_RC4_128_SHA", 5)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_NULL_SHA256", 59)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", 65)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", 68)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", 69)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", 132)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", 135)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", 136)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_RC4_128_SHA", 138)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_3DES_EDE_CBC_SHA", 139)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_128_CBC_SHA", 140)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_256_CBC_SHA", 141)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_SEED_CBC_SHA", 150)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 575K, 13% free 5094K/5804K, paused 0ms+5ms, total 8ms
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157)	timediff:2
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_FALLBACK_SCSV", 22016)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166)	timediff:2
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188)	timediff:2
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198)	timediff:1
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", 49205)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA", 49206)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256", 52392)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", 52393)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_3", 0, "TLSv1.3")	timediff:0
I/System.out(21125): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 1, "TLSv1.2")	timediff:0
I/System.out(21125): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 2, "TLSv1.1")	timediff:0
I/System.out(21125): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 3, "TLSv1")	timediff:0
I/System.out(21125): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 4, "SSLv3")	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:1
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21125): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:2
I/System.out(21125): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:63
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:35
D/dalvikvm(21125): GC_CONCURRENT freed 2619K, 47% free 3119K/5884K, paused 0ms+3ms, total 8ms
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:11
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r8)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>	sig:specialinvoke $r6.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>($r0, $r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:$r6 = staticinvoke <okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:1
I/System.out(21125): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:2
I/System.out(21125): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:2
I/System.out(21125): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:2
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:51
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:51
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 288K, 46% free 3218K/5884K, paused 0ms+1ms, total 5ms
D/FirebaseApp(21125): com.google.firebase.auth.FirebaseAuth is not linked. Skipping initialization.
I/dalvikvm(21125): Could not find method android.content.Context.getNoBackupFilesDir, referenced from method com.google.android.gms.common.util.zzw.getNoBackupFilesDir
W/dalvikvm(21125): VFY: unable to resolve virtual method 80: Landroid/content/Context;.getNoBackupFilesDir ()Ljava/io/File;
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0006
D/FirebaseApp(21125): com.google.firebase.crash.FirebaseCrash is not linked. Skipping initialization.
I/dalvikvm(21125): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.zze.zzs
W/dalvikvm(21125): VFY: unable to resolve virtual method 398: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0010
I/FA      (21125): App measurement is starting up, version: 10084
I/FA      (21125): To enable debug logging run: adb shell setprop log.tag.FA VERBOSE
D/dalvikvm(21125): GC_CONCURRENT freed 307K, 44% free 3304K/5884K, paused 1ms+1ms, total 4ms
I/FA      (21125): To enable faster debug mode event logging run:
I/FA      (21125):   adb shell setprop debug.firebase.analytics.app com.booking
I/dalvikvm(21125): Could not find method android.view.Window.setSharedElementEnterTransition, referenced from method com.booking.util.Utils.setupActivityForSharedElementTransitions
W/dalvikvm(21125): VFY: unable to resolve virtual method 7551: Landroid/view/Window;.setSharedElementEnterTransition (Landroid/transition/Transition;)V
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x001f
D/dalvikvm(21125): GC_CONCURRENT freed 271K, 42% free 3466K/5884K, paused 3ms+1ms, total 5ms
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.core.squeaks.XmlSqueakSender: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/ActivityManager(  492): Start proc com.booking:bookingcomprocess for service com.booking/.dcl.DCLService: pid=21191 uid=10098 gids={50098, 3003, 1028, 1015, 1023}
I/dalvikvm(21191): ignoring registerObject request in thread=1
I/dalvikvm(21191): ignoring registerObject request in thread=1
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:21
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:24
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:24
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
D/dalvikvm(21125): GC_CONCURRENT freed 221K, 39% free 3629K/5884K, paused 1ms+0ms, total 4ms
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out(21125): body:<com.booking.common.util.BackendSettings: java.lang.String getUrlHost(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r0)	timediff:5
I/System.out(21125): body:<com.booking.common.util.BackendSettings: java.lang.String getUrlHost(java.lang.String)>	sig:$r0 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:4
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:4
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:4
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 493K, 38% free 3648K/5884K, paused 3ms+0ms, total 8ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:5
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r9 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r9 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r3 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:3
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:3
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:3
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:3
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 412K, 38% free 3671K/5884K, paused 0ms+3ms, total 7ms
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:5
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:5
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r9 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r9 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientBuilder)>	sig:$r3 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 271K, 36% free 3783K/5884K, paused 1ms+1ms, total 4ms
D/dalvikvm(21125): GC_CONCURRENT freed 268K, 34% free 3898K/5884K, paused 1ms+1ms, total 4ms
D/dalvikvm(21125): GC_CONCURRENT freed 195K, 31% free 4086K/5884K, paused 1ms+1ms, total 4ms
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out(21191): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out(21191): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out(21191): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out(21191): body:<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>	sig:specialinvoke $r3.<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>($r0, $l0, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>	sig:$r3 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>($r0, $l0, $r2)	timediff:0
I/System.out(21191): body:<okhttp3.internal.Util: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>(null, $r0)	timediff:0
I/System.out(21191): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out(21191): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out(21191): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out(21191): body:<okhttp3.internal.Util: void <clinit>()>	sig:$r3 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>(null, $r0)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_NULL_MD5", 1)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_NULL_SHA", 2)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_RC4_128_MD5", 4)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_RC4_128_SHA", 5)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
D/dalvikvm(21191): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21191): GC_CONCURRENT freed 319K, 13% free 2854K/3268K, paused 7ms+1ms, total 11ms
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_NULL_SHA256", 59)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", 65)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", 68)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", 69)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", 132)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", 135)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", 136)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_RC4_128_SHA", 138)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_3DES_EDE_CBC_SHA", 139)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_128_CBC_SHA", 140)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_256_CBC_SHA", 141)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_SEED_CBC_SHA", 150)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_FALLBACK_SCSV", 22016)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161)	timediff:5
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:6
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191)	timediff:6
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", 49205)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA", 49206)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256", 52392)	timediff:1
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", 52393)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:1
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:1
I/System.out(21191): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_3", 0, "TLSv1.3")	timediff:0
I/System.out(21191): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 1, "TLSv1.2")	timediff:3
I/System.out(21191): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 2, "TLSv1.1")	timediff:0
I/System.out(21191): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 3, "TLSv1")	timediff:0
I/System.out(21191): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 4, "SSLv3")	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
D/dalvikvm(21191): GC_CONCURRENT freed 349K, 14% free 2892K/3336K, paused 1ms+0ms, total 4ms
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21191): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21191): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:4
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:1
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:56
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(21125): GC_FOR_ALLOC freed 373K, 29% free 4225K/5884K, paused 6ms, total 6ms
D/dalvikvm(21125): GC_CONCURRENT freed 1K, 29% free 4224K/5884K, paused 2ms+1ms, total 7ms
D/dalvikvm(21125): GC_CONCURRENT freed 214K, 26% free 4394K/5884K, paused 2ms+1ms, total 7ms
D/dalvikvm(21191): GC_CONCURRENT freed 185K, 11% free 3092K/3456K, paused 2ms+1ms, total 6ms
D/dalvikvm(21125): GC_CONCURRENT freed 131K, 21% free 4673K/5884K, paused 2ms+1ms, total 6ms
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:78
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:3
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r8)	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>	sig:specialinvoke $r6.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>($r0, $r2, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:$r6 = staticinvoke <okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21191): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:2
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:84
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:84
I/System.out(21191): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/InputDispatcher(  492): Application is not responding: AppWindowToken{4b210290 token=Token{4b7511a8 ActivityRecord{4a8e7d10 u0 com.booking/.activity.StartActivity t49}}}.  It has been 5004.5ms since event, 5001.7ms since wait started.  Reason: Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.
I/Process (  492): Sending signal. PID: 21125 SIG: 3
I/WindowManager(  492): Input event dispatching timed out sending to application AppWindowToken{4b210290 token=Token{4b7511a8 ActivityRecord{4a8e7d10 u0 com.booking/.activity.StartActivity t49}}}.  Reason: Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.
W/InputManager(  492): Input event injection from pid 21097 timed out.
I/dalvikvm(21125): threadid=3: reacting to signal 3
I/System.out(21191): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21191): body:<com.booking.core.squeaks.XmlSqueakSender: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(21191): GC_CONCURRENT freed 295K, 12% free 3224K/3628K, paused 2ms+1ms, total 6ms
I/dalvikvm(21125): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  492): Sending signal. PID: 492 SIG: 3
I/dalvikvm(  492): threadid=3: reacting to signal 3
D/dalvikvm(21125): GC_CONCURRENT freed 50K, 19% free 4785K/5884K, paused 2ms+1ms, total 8ms
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:29
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21191): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21191): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:30
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:30
I/System.out(21191): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:1
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:1
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:2
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:2
I/System.out(21191): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:1
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:1
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 190K, 13% free 5135K/5884K, paused 2ms+0ms, total 8ms
D/dalvikvm(21191): GC_CONCURRENT freed 233K, 10% free 3388K/3728K, paused 0ms+1ms, total 4ms
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:27
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(21191): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21191): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21191): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:30
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:30
I/System.out(21191): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
I/System.out(21191): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21191): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21191): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:1
I/System.out(21191): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:3
I/System.out(21191): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:3
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(20053): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(20053): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:2
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:5
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:1
D/dalvikvm(21125): GC_CONCURRENT freed 234K, 6% free 5624K/5980K, paused 1ms+4ms, total 21ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 20ms
D/dalvikvm(21125): GC_CONCURRENT freed 263K, 7% free 6263K/6664K, paused 1ms+2ms, total 10ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/dalvikvm(  492): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  492): Sending signal. PID: 718 SIG: 3
I/dalvikvm(  718): threadid=3: reacting to signal 3
I/CrashlyticsCore(21125): Initializing Crashlytics 2.3.8.97
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/Process (21191): Sending signal. PID: 21191 SIG: 9
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:6
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:7
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:7
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:7
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/ActivityManager(  492): Process com.booking:bookingcomprocess (pid 21191) has died.
I/dalvikvm(  718): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  492): Sending signal. PID: 576 SIG: 3
I/dalvikvm(  576): threadid=3: reacting to signal 3
I/dalvikvm(  576): Wrote stack traces to '/data/anr/traces.txt'
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.net.OkHttpJsonCaller: void init(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.net.OkHttpJsonCaller: void init(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(10L, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.net.OkHttpJsonCaller: void init(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(3L, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.net.OkHttpJsonCaller: void init(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(10L, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.net.OkHttpJsonCaller: void init(okhttp3.OkHttpClient)>	sig:$r0 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
D/ClClient(14306): Not sending keepalive.  Current connection state=STOPPED
D/dalvikvm(21125): GC_CONCURRENT freed 918K, 15% free 6379K/7452K, paused 34ms+2ms, total 43ms
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:44
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:45
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:46
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:46
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r0 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r0 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r0 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r0 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r2 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r4 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r4 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:1
I/System.out(21125): body:<com.booking.net.VolleyJsonCaller: void enableCertificatePinning(boolean)>	sig:$r3 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke r11.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:12
I/System.out(21125): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke r11.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.booking/settings?instance=dbe2bb8c3a1d299b928e308229f8515d1f0ab2c5&source=1&build_version=3300&icon_hash=6835e6b9437d61e142e568d141e192c8e28a7435&display_version=12.9
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke r13.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke r7.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke r7.<java.net.URL: void <init>(java.lang.String)>($r4)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.booking/settings?instance=dbe2bb8c3a1d299b928e308229f8515d1f0ab2c5&source=1&build_version=3300&icon_hash=6835e6b9437d61e142e568d141e192c8e28a7435&display_version=12.9
D/dalvikvm(21125): GC_CONCURRENT freed 3126K, 43% free 4367K/7632K, paused 2ms+10ms, total 26ms
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:5
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:1
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
D/dalvikvm(21125): GC_CONCURRENT freed 480K, 43% free 4416K/7632K, paused 0ms+5ms, total 22ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 14ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 15ms
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:358
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 380K, 42% free 4490K/7632K, paused 2ms+2ms, total 8ms
I/System.out(21125): body:<com.booking.service.LoggingService: void <clinit>()>	sig:$r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: void <clinit>()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")	timediff:0
D/dalvikvm(21125): Trying to load lib /data/app-lib/com.booking-2/libmapgraph.so 0x94f48890
I/System.out(20053): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:88
D/dalvikvm(21125): Added shared lib /data/app-lib/com.booking-2/libmapgraph.so 0x94f48890
D/dalvikvm(21125): No JNI_OnLoad found in /data/app-lib/com.booking-2/libmapgraph.so 0x94f48890, skipping init
I/SoundDecoder_SetError(19397): Cannot operate on sample because already at EOF
D/dalvikvm(21125): GC_CONCURRENT freed 379K, 41% free 4568K/7632K, paused 0ms+2ms, total 9ms
D/dalvikvm(21125): GC_CONCURRENT freed 402K, 39% free 4726K/7632K, paused 2ms+6ms, total 15ms
I/dalvikvm(21125): Could not find method android.net.ConnectivityManager.getAllNetworks, referenced from method com.tealium.internal.a$1.a
W/dalvikvm(21125): VFY: unable to resolve virtual method 562: Landroid/net/ConnectivityManager;.getAllNetworks ()[Landroid/net/Network;
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x001b
I/dalvikvm(21125): Could not find method android.webkit.CookieManager.setAcceptThirdPartyCookies, referenced from method com.tealium.internal.b.c.onWebViewCreated
W/dalvikvm(21125): VFY: unable to resolve virtual method 1041: Landroid/webkit/CookieManager;.setAcceptThirdPartyCookies (Landroid/webkit/WebView;Z)V
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0016
D/dalvikvm(21125): GC_CONCURRENT freed 397K, 37% free 4856K/7632K, paused 2ms+0ms, total 6ms
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:7
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:7
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:9
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:9
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:9
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 570K, 36% free 4900K/7632K, paused 3ms+10ms, total 32ms
D/dalvikvm(21125): GC_CONCURRENT freed 396K, 34% free 5082K/7632K, paused 2ms+1ms, total 7ms
D/dalvikvm(21125): GC_CONCURRENT freed 432K, 30% free 5375K/7632K, paused 2ms+1ms, total 14ms
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.BookingLocationTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.cityguide.attractions.checkout.persistance.ConfirmedAttractionTicket
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.WishlistOrmTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.common.data.BookingV2
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.FlightInfoTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.ConfirmedAttractionTicketTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.common.data.BookingLocation
I/DaoManager(21125): Loaded configuration for class com.booking.cityguide.attractions.checkout.persistance.InProgressAttractionTicket
I/DaoManager(21125): Loaded configuration for class com.booking.common.data.Booking$Room
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.CheckInRatingsTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.common.data.WishList
I/DaoManager(21125): Loaded configuration for class com.booking.postbooking.destinationOS.flighttracker.data.BookingFlightInfo
I/DaoManager(21125): Loaded configuration for class com.booking.ugc.model.CheckInRatingData
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.AttractionsInfoTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.HotelTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.RoomTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.ugc.model.DestinationTip
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.DestinationReviewsTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.postbooking.attractions.data.DbAttractionsInfo
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.BookingTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.ormlite.generated.internal.data.data.InprogressAttractionTicketTableDataClass
I/DaoManager(21125): Loaded configuration for class com.booking.common.data.Hotel
I/dalvikvm(21125): Could not find method android.view.Window.setStatusBarColor, referenced from method com.booking.util.UiUtils.enableBlueSystemBar
W/dalvikvm(21125): VFY: unable to resolve virtual method 7554: Landroid/view/Window;.setStatusBarColor (I)V
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0021
I/GAv4    (21125): Google Analytics 10.0.84 is starting up. To enable debug logging on a device run:
I/GAv4    (21125):   adb shell setprop log.tag.GAv4 DEBUG
I/GAv4    (21125):   adb logcat -s GAv4
D/dalvikvm(21125): GC_CONCURRENT freed 697K, 29% free 5423K/7632K, paused 3ms+1ms, total 10ms
I/ActivityManager(  492): START u0 {cmp=com.booking/.activity.SplashActivity (has extras)} from pid 21125
W/ProcessCpuTracker(  492): Skipping unknown process pid 20796
W/GAv4    (21125): string configuration name not recognized: ga_logLevel
V/WebViewChromium(21125): Binding Chromium to the background looper Looper (main, tid 1) {4a79f840}
I/chromium(21125): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(21125): Initializing chromium process, renderers=0
D/dalvikvm(  492): GC_EXPLICIT freed 3188K, 40% free 23972K/39760K, paused 3ms+4ms, total 43ms
D/dalvikvm(21125): GC_CONCURRENT freed 651K, 28% free 5556K/7632K, paused 3ms+1ms, total 14ms
W/chromium(21125): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/tnet-jni(11786): 825 -  create new session: accscdn.m.taobao.com:80
D/libEGL  (21125): loaded /system/lib/egl/libEGL_adreno.so
D/        (21125): HostConnection::get() New Host Connection established 0xb9963590, tid 21125
D/libEGL  (21125): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (21125): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:855
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>	sig:$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(21125): URLConn;%;0;%;<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>;%;$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.booking/settings?instance=dbe2bb8c3a1d299b928e308229f8515d1f0ab2c5&source=1&build_version=3300&icon_hash=6835e6b9437d61e142e568d141e192c8e28a7435&display_version=12.9;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke r11.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(21125): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke r11.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke r13.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke r7.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke r7.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:1
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:1
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>("https")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r3 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:specialinvoke $r4.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r3)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network$3: void <init>(java.util.concurrent.Callable)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:7
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:7
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r1)	timediff:10
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 799K, 27% free 5616K/7632K, paused 1ms+4ms, total 17ms
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("X-LIBRARY", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r5)	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("B-T", $r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_version", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("device_id", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("network_type", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("languagecode", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("display", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:3
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:3
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:$r2 = virtualinvoke $r1.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String type()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String subtype()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r3 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r2 = virtualinvoke $r3.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Type", $r10)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r10, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:specialinvoke $r4.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/tnet-jni(11786): 824 - [spdySessionFailedError] - 
I/tnet-jni(11786): 824 - [SpdySessionCallBack.spdySessionFailedError] - org.android.spdy.SpdySession@4a79cb9c
D/tnet-jni(11786): 824 - [SpdySession.cleanUp] - 
D/dalvikvm(11786): GC_CONCURRENT freed 428K, 15% free 3531K/4140K, paused 2ms+2ms, total 10ms
D/tnet-jni(11786): 825 - [SpdySession.closeSession] - 
D/tnet-jni(11786): 824 - [SpdySession.clearAllStreamCb] - 
D/tnet-jni(11786): 824 - [SpdySession.cleanUp] - 
I/System.out(21125): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:148
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:150
I/System.out(21125): body:<okhttp3.internal.http2.Http2Connection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.http2.Http2Connection$Listener$1: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.http2.Http2Connection$Listener: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object)>($r0, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:2
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:2
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = virtualinvoke $r6.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r9.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/Process (  492): Sending signal. PID: 19397 SIG: 3
I/dalvikvm(19397): threadid=3: reacting to signal 3
I/dalvikvm(19397): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  492): Sending signal. PID: 11786 SIG: 3
I/dalvikvm(11786): threadid=3: reacting to signal 3
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:278
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:73
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r10.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r9, $r11, $i0)	timediff:73
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:76
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/dalvikvm(11786): Wrote stack traces to '/data/anr/traces.txt'
D/dalvikvm(21125): GC_CONCURRENT freed 922K, 27% free 5639K/7632K, paused 1ms+1ms, total 16ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 11ms
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:14
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(11786): GC_CONCURRENT freed 55K, 16% free 3497K/4140K, paused 0ms+0ms, total 4ms
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/Process (  492): Sending signal. PID: 752 SIG: 3
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:17
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/dalvikvm(  752): threadid=3: reacting to signal 3
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:4
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r5)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r10)	timediff:21
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r6.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:0
I/dalvikvm(  752): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  492): Sending signal. PID: 20053 SIG: 3
I/dalvikvm(20053): threadid=3: reacting to signal 3
I/System.out(21125): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:78
D/dalvikvm(21125): GC_CONCURRENT freed 837K, 26% free 5659K/7632K, paused 0ms+0ms, total 14ms
I/dalvikvm(20053): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  492): Sending signal. PID: 1851 SIG: 3
I/dalvikvm( 1851): threadid=3: reacting to signal 3
I/dalvikvm( 1851): Wrote stack traces to '/data/anr/traces.txt'
E/ActivityManager(  492): ANR in com.booking (com.booking/.activity.StartActivity)
E/ActivityManager(  492): PID: 21125
E/ActivityManager(  492): Reason: Input dispatching timed out (Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.)
E/ActivityManager(  492): Load: 6.16 / 3.81 / 2.7
E/ActivityManager(  492): CPU usage from 5437ms to 31ms ago:
E/ActivityManager(  492):   73% 19397/com.badcrane.rgbexpress: 1.8% user + 71% kernel / faults: 2 minor 1 major
E/ActivityManager(  492):   13% 20053/com.bigduckgames.flow: 3.6% user + 10% kernel / faults: 3532 minor 82 major
E/ActivityManager(  492):   9.6% 752/com.lionmobi.powerclean: 4% user + 5.5% kernel / faults: 2805 minor 2 major
E/ActivityManager(  492):   6.6% 492/system_server: 2.4% user + 4.2% kernel / faults: 6257 minor 20 major
E/ActivityManager(  492):   5.9% 11649/com.alibaba.aliexpresshd: 3.3% user + 2.5% kernel / faults: 2332 minor 22 major
E/ActivityManager(  492):   3.1% 74/adbd: 0% user + 3.1% kernel
E/ActivityManager(  492):   2.9% 169/surfaceflinger: 0.3% user + 2.5% kernel / faults: 6 minor 3 major
E/ActivityManager(  492):   2.4% 21092/logcat: 0% user + 2.4% kernel
E/ActivityManager(  492):   2.4% 21097/com.android.commands.monkey: 1.8% user + 0.5% kernel / faults: 3296 minor 98 major
E/ActivityManager(  492):   2.2% 172/mediaserver: 0% user + 2.2% kernel / faults: 10 minor 4 major
E/ActivityManager(  492):   2% 11786/com.alibaba.aliexpresshd:channel: 1.8% user + 0.1% kernel / faults: 279 minor 49 major
E/ActivityManager(  492):   1.2% 2282/com.cmplay.tiles2:service: 0% user + 1.2% kernel / faults: 2 major
E/ActivityManager(  492):   1.1% 1851/com.hermes.superb.booster:active: 0.3% user + 0.7% kernel / faults: 63 minor 2 major
E/ActivityManager(  492):   0.9% 3899/com.moonactive.coinmaster: 0.7% user + 0.1% kernel / faults: 987 minor 16 major
E/ActivityManager(  492):   0.3% 15628/com.amazon.mShop.android.shopping: 0.1% user + 0.1% kernel / faults: 1 minor
E/ActivityManager(  492):   0.1% 72/sdcard: 0% user + 0.1% kernel
E/ActivityManager(  492):   0.1% 170/zygote: 0% user + 0.1% kernel / faults: 127 minor
E/ActivityManager(  492):   0.1% 837/com.google.android.gms: 0.1% user + 0% kernel / faults: 14 minor 1 major
E/ActivityManager(  492):   0.1% 14706/com.amazon.mp3: 0% user + 0.1% kernel / faults: 3 minor 2 major
E/ActivityManager(  492):  +0% 21125/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):  +0% 21191/com.booking:bookingcomprocess: 0% user + 0% kernel
E/ActivityManager(  492): 99% TOTAL: 36% user + 59% kernel + 0.6% iowait + 2.4% softirq
E/ActivityManager(  492): CPU usage from 1086ms to 1599ms later:
E/ActivityManager(  492):   70% 19397/com.badcrane.rgbexpress: 0% user + 70% kernel
E/ActivityManager(  492):     64% 19417/Thread-1319: 0% user + 64% kernel
E/ActivityManager(  492):     3.9% 19425/OpenAL/sl/m: 1.9% user + 1.9% kernel
E/ActivityManager(  492):     1.9% 19426/Thread-1319: 0% user + 1.9% kernel
E/ActivityManager(  492):   32% 21125/com.booking: 21% user + 11% kernel / faults: 929 minor 22 major
E/ActivityManager(  492):     15% 21125/com.booking: 13% user + 1.9% kernel
E/ActivityManager(  492):     5.7% 21268/EtApi logVisito: 0% user + 5.7% kernel
E/ActivityManager(  492):     3.8% 21131/GC: 3.8% user + 0% kernel
E/ActivityManager(  492):     3.8% 21214/Answers Events : 1.9% user + 1.9% kernel
E/ActivityManager(  492):     1.9% 21219/Crashlytics Exc: 0% user + 1.9% kernel
E/ActivityManager(  492):     1.9% 21257/user_orientatio: 1.9% user + 0% kernel
E/ActivityManager(  492):    +0% 21279/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21280/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21281/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21282/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21283/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21284/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21285/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21286/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21287/com.booking: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21289/Crashlytics Rep: 0% user + 0% kernel
E/ActivityManager(  492):    +0% 21292/OkHttp Connecti: 0% user + 0% kernel
E/ActivityManager(  492):   14% 11786/com.alibaba.aliexpresshd:channel: 14% user + 0% kernel / faults: 262 minor
E/ActivityManager(  492):     13% 12074/presshd:channel: 13% user + 0% kernel
E/ActivityManager(  492):     1.6% 11788/GC: 0% user + 1.6% kernel
E/ActivityManager(  492):     1.6% 12073/dTi: 1.6% user + 0% kernel
E/ActivityManager(  492):     1.6% 12077/Thread-825: 0% user + 1.6% kernel
E/ActivityManager(  492):   9.8% 492/system_server: 0% user + 9.8% kernel / faults: 153 minor
E/ActivityManager(  492):     1.9% 499/FinalizerDaemon: 0% user + 1.9% kernel
E/ActivityManager(  492):   7.8% 752/com.lionmobi.powerclean: 3.1% user + 4.6% kernel
E/ActivityManager(  492):     7.8% 886/Thread-67: 3.1% user + 4.6% kernel
E/ActivityManager(  492):   8.7% 21092/logcat: 0% user + 8.7% kernel
E/ActivityManager(  492):   6.8% 20053/com.bigduckgames.flow: 1.7% user + 5.1% kernel / faults: 806 minor 10 major
E/ActivityManager(  492):     3.4% 20171/gduckgames.flow: 1.7% user + 1.7% kernel
E/ActivityManager(  492):     1.7% 20053/gduckgames.flow: 0% user + 1.7% kernel
E/ActivityManager(  492):     1.7% 20142/Thread-1371: 1.7% user + 0% kernel
E/ActivityManager(  492):   5.8% 74/adbd: 0% user + 5.8% kernel
E/ActivityManager(  492):     1.9% 74/adbd: 0% user + 1.9% kernel
E/ActivityManager(  492):     1.9% 921/adbd: 0% user + 1.9% kernel
E/ActivityManager(  492):     1.9% 922/adbd: 0% user + 1.9% kernel
E/ActivityManager(  492):   1.5% 165/netd
I/System.out(21125): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(21125): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r8 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(21125): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r9.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r8, $r7, $r4, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r14)	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r6)	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r6.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r15.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r3, $r13)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r12.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:197
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:197
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:274
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:274
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:431
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:431
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http1.Http1Codec: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out(21125): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void writeTo(okio.BufferedSink)>	sig:virtualinvoke $r4.<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>($r1)	timediff:22
D/dalvikvm(  492): GC_FOR_ALLOC freed 412K, 40% free 23943K/39760K, paused 73ms, total 73ms
I/dalvikvm-heap(  492): Grow heap (frag case) to 23.895MB for 439620-byte allocation
D/dalvikvm(  492): GC_FOR_ALLOC freed <1K, 40% free 24372K/40192K, paused 33ms, total 33ms
D/dalvikvm(  492): GC_FOR_ALLOC freed 223K, 40% free 24149K/40192K, paused 28ms, total 28ms
I/dalvikvm-heap(  492): Grow heap (frag case) to 24.100MB for 443716-byte allocation
D/dalvikvm(  492): GC_FOR_ALLOC freed <1K, 40% free 24583K/40628K, paused 60ms, total 60ms
W/ActivityManager(  492): Activity pause timeout for ActivityRecord{4a8e7d10 u0 com.booking/.activity.StartActivity t49}
D/CF      ( 2282): ALARM_SERVICE_START_TIME = 1521943748209
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:6
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:2
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;1;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:728
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:2
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;2;%;<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:732
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:732
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:2
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;3;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:736
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r10 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:3
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:3
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:2
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:virtualinvoke $r6.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r10, $r8)	timediff:5
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:743
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:2
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:3
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;4;%;<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:5
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:5
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:751
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:753
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:4
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:4
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:5
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;5;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:763
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:770
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:6
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;6;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:780
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:781
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:4
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;7;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 918K, 26% free 5701K/7632K, paused 1ms+1ms, total 10ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:5
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:791
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:792
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:6
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;8;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:801
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = virtualinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:804
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpE;%;9;%;<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>;%;$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>();%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[127];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:08 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 127
I/System.out(21125): B-T-S: AAAAAAAAAAA=4Yfl33rRz-UNtPFXJF_6MMc0zyMFw9wTmm16pMHU9BkDynV8N6-6U8EaWOdkITCkfrXoQmmDvwl38Hbg_wtq9zZlZMsi-D7gDJeFWgMPao3IPnf4uJFekXOpSFaJZC2CgG7HDNO150r4JcftPAoTQve8GQ6GnHc7TP8tHWdy3tprofBYM_ZiUTywAe0Dq4st-xqVqG62hqalEyQtutDWpeFCGo4zMyypHxap7JIqtQkbPGuJd2uoiYsKxkHk9zZ9pS4zY1fiDcnh4dlOCSqMw_yd7TbJFbcmm4vrow
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>()	timediff:810
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$z0 = virtualinvoke $r9.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r17 = virtualinvoke $r9.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:1
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r13 = virtualinvoke $r17.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:1
D/dalvikvm(21125): GC_FOR_ALLOC freed 666K, 25% free 5755K/7632K, paused 8ms, total 8ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 6.314MB for 635808-byte allocation
D/dalvikvm(21125): GC_FOR_ALLOC freed <1K, 23% free 6375K/8256K, paused 6ms, total 6ms
W/dalvikvm(21125): VFY: unable to find class referenced in signature (Landroid/webkit/WebResourceRequest;)
W/dalvikvm(21125): VFY: unable to find class referenced in signature (Landroid/webkit/WebResourceError;)
I/dalvikvm(21125): Could not find method android.webkit.WebViewClient.onReceivedError, referenced from method com.tealium.internal.b.c$4.onReceivedError
W/dalvikvm(21125): VFY: unable to resolve virtual method 1081: Landroid/webkit/WebViewClient;.onReceivedError (Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;Landroid/webkit/WebResourceError;)V
D/dalvikvm(21125): VFY: replacing opcode 0x6f at 0x0027
W/dalvikvm(21125): VFY: unable to find class referenced in signature (Landroid/webkit/WebResourceRequest;)
I/dalvikvm(21125): Could not find method android.webkit.WebResourceRequest.getUrl, referenced from method com.tealium.internal.b.c$4.onReceivedHttpError
W/dalvikvm(21125): VFY: unable to resolve interface method 1047: Landroid/webkit/WebResourceRequest;.getUrl ()Landroid/net/Uri;
D/dalvikvm(21125): VFY: replacing opcode 0x72 at 0x000c
W/dalvikvm(21125): VFY: unable to find class referenced in signature (Landroid/webkit/WebResourceRequest;)
I/dalvikvm(21125): Could not find method android.webkit.WebResourceRequest.getUrl, referenced from method com.tealium.internal.b.c$4.shouldOverrideUrlLoading
W/dalvikvm(21125): VFY: unable to resolve interface method 1047: Landroid/webkit/WebResourceRequest;.getUrl ()Landroid/net/Uri;
D/dalvikvm(21125): VFY: replacing opcode 0x72 at 0x0000
D/Tealium-5.2.0(21125): WebView android.webkit.WebView{4a8534cc VFEDHVC. ......I. 0,0-0,0} created and cookies enabled
I/AffiliateManager(21125): affiliate-label: version=12.9-android;referrer_id=null;device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9
I/FA      (21125): Tag Manager is not found and thus will not be used
I/Choreographer(21125): Skipped 135 frames!  The application may be doing too much work on its main thread.
E/ActivityThread(21125): Failed to find provider info for com.sfr.android.console.partner.provider
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<com.booking.common.util.Utils: java.lang.String urlEncodeInUtf8(java.lang.String)>	sig:$r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:6
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:7
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:7
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:7
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:5
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:5
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:5
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:4
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:4
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:4
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:4
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:4
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:4
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 908K, 20% free 6665K/8256K, paused 3ms+1ms, total 32ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 23ms
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:22
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:$r12 = virtualinvoke $r11.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r12)	timediff:1
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r4 = virtualinvoke $r0.<okhttp3.MediaType: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>	sig:$r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>($r0, $r6)	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:$r14 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r13, $r6)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:$r15 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:0
I/System.out(21125): body:<com.booking.service.LoggingService: com.booking.service.LoggingService$SendLogsStatus sendLogs(android.content.Context,java.util.List)>	sig:$r16 = virtualinvoke $r9.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r15)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:1
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("X-LIBRARY", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("B-T", $r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:3
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_version", $r6)	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("device_id", $r6)	timediff:0
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 27ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 14ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 31ms
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("network_type", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("languagecode", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("display", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Accept-Encoding")	timediff:1
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:$r2 = virtualinvoke $r1.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String type()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String subtype()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r3 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r2 = virtualinvoke $r3.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Type", $r10)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r10, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: java.lang.String generateSignatureV1(okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: java.lang.String generateSignatureV1(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:2
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:2
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("B-S", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:2
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:specialinvoke $r4.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r5)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object)>($r0, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r7)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isClosed()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isOutputShutdown()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$i0 = virtualinvoke $r2.<java.net.Socket: int getSoTimeout()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>(1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int decodeHexDigit(char)>($c4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>	sig:staticinvoke <okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)>($r1, $r0, $i2, $i1, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:7
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:7
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:7
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:8
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$z2 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>($z1)	timediff:10
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:10
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http1.Http1Codec: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out(21125): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void writeTo(okio.BufferedSink)>	sig:virtualinvoke $r4.<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder get()>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("GET", null)	timediff:15
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:4
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("X-LIBRARY", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r5)	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("B-T", $r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:10
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:21
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5)	timediff:0
I/ActivityManager(  492): Start proc com.google.process.gapps for service com.google.android.gms/.auth.be.appcert.AppCertService: pid=21320 uid=10007 gids={50007, 3003, 1007, 1028, 1015, 1023, 3002, 3001, 3007, 2001, 3006}
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;10;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/mobile.squeak?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[9];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:09 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 9
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:189
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;11;%;<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.squeak?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[9];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:09 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 9
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:190
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:192
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;12;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.squeak?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[9];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:09 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 9
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:194
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r10 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:1
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:virtualinvoke $r6.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r10, $r8)	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:195
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:3
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:09 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 9
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:228
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:230
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
W/ContextImpl(  492): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out(21125): header:Server: nginx
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = virtualinvoke $r6.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/qtaguid (21125): Tagging socket 101 with tag 464ae7ed00000000(1179314157) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(21125): tagSocketFd(101, 1179314157, -1) failed with errno-13
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r9.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r1)	timediff:0
I/dalvikvm(21320): ignoring registerObject request in thread=1
I/dalvikvm(21320): ignoring registerObject request in thread=1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:173
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:176
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_version", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("device_id", $r6)	timediff:19
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:1
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("network_type", $r6)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("languagecode", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/ActivityManager(  492): Displayed com.booking/.activity.SplashActivity: +1s677ms (total +8s664ms)
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:1
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>("https")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createGetExperimentsRequest(java.util.concurrent.Callable)>	sig:$r3 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:1
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createGetExperimentsRequest(java.util.concurrent.Callable)>	sig:specialinvoke $r4.<okhttp3.Request$Builder: void <init>()>()	timediff:1
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createGetExperimentsRequest(java.util.concurrent.Callable)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r3)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network$3: void <init>(java.util.concurrent.Callable)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createGetExperimentsRequest(java.util.concurrent.Callable)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createGetExperimentsRequest(java.util.concurrent.Callable)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:2
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
W/dalvikvm(21320): VFY: unable to resolve static field 937 (PR_SET_DUMPABLE) in Landroid/system/OsConstants;
D/dalvikvm(21320): VFY: replacing opcode 0x60 at 0x0009
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
W/dalvikvm(21320): VFY: unable to find class referenced in signature (Laqvj;)
W/dalvikvm(21320): VFY: unable to find class referenced in signature (Laqvj;)
W/dalvikvm(21320): VFY: unable to find class referenced in signature (Laqvj;)
W/dalvikvm(21320): VFY: unable to find class referenced in signature (Laqvj;)
I/dalvikvm(21320): Could not find method android.content.Context.getSystemService, referenced from method ro.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1684: Landroid/content/Context;.getSystemService (Ljava/lang/Class;)Ljava/lang/Object;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0008
I/dalvikvm(21320): Could not find method android.content.Context.createDeviceProtectedStorageContext, referenced from method jkx.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1659: Landroid/content/Context;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0029
I/dalvikvm(21320): Could not find method android.content.Context.getSystemService, referenced from method jkx.b
W/dalvikvm(21320): VFY: unable to resolve virtual method 1684: Landroid/content/Context;.getSystemService (Ljava/lang/Class;)Ljava/lang/Object;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x000b
I/dalvikvm(21320): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method zcx.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0009
I/dalvikvm(21320): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method zcx.c
W/dalvikvm(21320): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x005d
I/dalvikvm(21320): Could not find method android.os.PowerManager.isInteractive, referenced from method jih.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 2258: Landroid/os/PowerManager;.isInteractive ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0012
I/dalvikvm(21320): Could not find method android.content.ContextWrapper.createCredentialProtectedStorageContext, referenced from method com.google.android.chimera.ModuleContext.createCredentialProtectedStorageContext
W/dalvikvm(21320): VFY: unable to resolve virtual method 1708: Landroid/content/ContextWrapper;.createCredentialProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21320): Could not find method android.content.ContextWrapper.createDeviceProtectedStorageContext, referenced from method com.google.android.chimera.ModuleContext.createDeviceProtectedStorageContext
W/dalvikvm(21320): VFY: unable to resolve virtual method 1709: Landroid/content/ContextWrapper;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21320): Could not find method android.content.Context.isCredentialProtectedStorage, referenced from method cqq.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1688: Landroid/content/Context;.isCredentialProtectedStorage ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0000
I/dalvikvm(21320): Could not find method android.os.UserManager.isUserUnlocked, referenced from method cqq.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 2311: Landroid/os/UserManager;.isUserUnlocked ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x001a
I/dalvikvm(21320): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method cqq.b
W/dalvikvm(21320): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0000
I/dalvikvm(21320): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method cqq.c
W/dalvikvm(21320): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0000
I/MultiDex(21320): VM with version 1.6.0 does not have multidex support
I/MultiDex(21320): install
I/MultiDex(21320): MultiDexExtractor.load(/system/priv-app/GmsCore.apk, false)
I/MultiDex(21320): Blocking on lock /data/data/com.google.android.gms/code_cache/secondary-dexes/MultiDex.lock
I/MultiDex(21320): /data/data/com.google.android.gms/code_cache/secondary-dexes/MultiDex.lock locked
I/MultiDex(21320): loading existing secondary dex files
I/MultiDex(21320): load found 4 secondary dex files
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:139
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:148
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:149
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:149
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:150
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:150
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:150
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("X-LIBRARY", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("B-T", $r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_version", $r6)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("device_id", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("network_type", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/MultiDex(21320): install done
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:136
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("languagecode", $r6)	timediff:10
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("display", $r6)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:3
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:3
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:123
D/dalvikvm(21125): GC_CONCURRENT freed 1275K, 19% free 6742K/8256K, paused 4ms+17ms, total 45ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 30ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 6.748MB for 79888-byte allocation
D/dalvikvm(21320): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21320): GC_CONCURRENT freed 298K, 12% free 2886K/3276K, paused 2ms+5ms, total 10ms
D/dalvikvm(21125): GC_FOR_ALLOC freed 3K, 19% free 6816K/8336K, paused 22ms, total 22ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 53ms
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:54
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 54ms
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:57
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:57
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:$r2 = virtualinvoke $r1.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String type()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String subtype()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r3 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r2 = virtualinvoke $r3.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Type", $r10)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r10, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:specialinvoke $r4.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object)>($r0, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r7)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isClosed()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isOutputShutdown()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$i0 = virtualinvoke $r2.<java.net.Socket: int getSoTimeout()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>(1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:58
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:225
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:226
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:226
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void <init>(okhttp3.RequestBody)>	sig:$r2 = virtualinvoke $r1.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String type()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r1 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String subtype()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r3 = virtualinvoke $r0.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.Utils: okhttp3.MediaType gunzipMediaType(okhttp3.MediaType)>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: java.lang.String getContentType(okhttp3.RequestBody,okhttp3.Request,java.lang.String)>	sig:$r2 = virtualinvoke $r3.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Type", $r10)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r10, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(21125): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:specialinvoke $r4.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r5)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$z2 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>($z1)	timediff:12
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:12
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http1.Http1Codec: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out(21125): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:82
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r10.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r9, $r11, $i0)	timediff:83
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:364
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/GservicesProvider(21320): Gservices pushing to system: true; secure/global: true
D/dalvikvm(21125): GC_FOR_ALLOC freed 621K, 18% free 6842K/8336K, paused 28ms, total 28ms
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:3
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:3
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r5)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r10)	timediff:6
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r6.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:0
D/dalvikvm(21320): GC_CONCURRENT freed 178K, 9% free 3095K/3368K, paused 2ms+1ms, total 6ms
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void writeTo(okio.BufferedSink)>	sig:virtualinvoke $r4.<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>($r1)	timediff:61
D/dalvikvm(21320): GC_CONCURRENT freed 108K, 6% free 3372K/3576K, paused 2ms+0ms, total 4ms
D/dalvikvm(21125): GC_FOR_ALLOC freed 868K, 19% free 6827K/8336K, paused 30ms, total 33ms
I/dalvikvm(21320): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method kel.d
W/dalvikvm(21320): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0006
I/dalvikvm(21320): Could not find method android.os.UserHandle.isOwner, referenced from method kel.i
W/dalvikvm(21320): VFY: unable to resolve virtual method 2304: Landroid/os/UserHandle;.isOwner ()Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x000a
D/dalvikvm(21125): GC_FOR_ALLOC freed <1K, 18% free 6866K/8336K, paused 29ms, total 29ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 6.869MB for 79888-byte allocation
I/dalvikvm(21320): Could not find method android.content.pm.PackageManager.isInstantApp, referenced from method kkc.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1808: Landroid/content/pm/PackageManager;.isInstantApp (Ljava/lang/String;)Z
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x002d
D/dalvikvm(21125): GC_FOR_ALLOC freed 1K, 18% free 6943K/8416K, paused 9ms, total 9ms
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:157
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.http2.Http2Connection$Listener: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object)>($r0, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = virtualinvoke $r6.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/qtaguid (21125): Tagging socket 130 with tag 464ae7ed00000000(1179314157) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(21125): tagSocketFd(130, 1179314157, -1) failed with errno-13
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r9.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/dalvikvm(21320): Could not find method android.content.ContextWrapper.createCredentialProtectedStorageContext, referenced from method jwn.createCredentialProtectedStorageContext
W/dalvikvm(21320): VFY: unable to resolve virtual method 1708: Landroid/content/ContextWrapper;.createCredentialProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21320): Could not find method android.content.ContextWrapper.createDeviceProtectedStorageContext, referenced from method jwn.createDeviceProtectedStorageContext
W/dalvikvm(21320): VFY: unable to resolve virtual method 1709: Landroid/content/ContextWrapper;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6f at 0x0002
D/dalvikvm(21320): DexOpt: couldn't find static field Landroid/os/Build;.SUPPORTED_ABIS
W/dalvikvm(21320): VFY: unable to resolve static field 918 (SUPPORTED_ABIS) in Landroid/os/Build;
D/dalvikvm(21320): VFY: replacing opcode 0x62 at 0x0008
D/dalvikvm(21320): DexOpt: couldn't find static field Landroid/os/Build;.SUPPORTED_ABIS
W/dalvikvm(21320): VFY: unable to resolve static field 918 (SUPPORTED_ABIS) in Landroid/os/Build;
D/dalvikvm(21320): VFY: replacing opcode 0x62 at 0x0097
D/dalvikvm(21320): DexOpt: couldn't find field Landroid/content/pm/ApplicationInfo;.splitSourceDirs
W/dalvikvm(21320): VFY: unable to resolve instance field 849
D/dalvikvm(21320): VFY: replacing opcode 0x54 at 0x0053
D/dalvikvm(21320): DexOpt: couldn't find field Landroid/content/pm/ApplicationInfo;.splitSourceDirs
I/dalvikvm(21320): DexOpt: unable to optimize instance field ref 0x0351 at 0x57 in Lkgr;.d
D/dalvikvm(21320): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f4ad98
D/dalvikvm(21320): Added shared lib /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f4ad98
D/dalvikvm(21320): No JNI_OnLoad found in /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f4ad98, skipping init
D/dalvikvm(21320): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so 0x94f4ad98
D/dalvikvm(21320): Added shared lib /data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so 0x94f4ad98
V/NativeCrypto(21320): Registering com/google/android/gms/org/conscrypt/NativeCrypto's 276 native methods...
E/dalvikvm(21320): Could not find class 'javax.net.ssl.SNIServerName', referenced from method com.google.android.gms.org.conscrypt.Platform.getSniHostnameFromParams
W/dalvikvm(21320): VFY: unable to resolve check-cast 2222 (Ljavax/net/ssl/SNIServerName;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21320): VFY: replacing opcode 0x1f at 0x0025
E/dalvikvm(21320): Could not find class 'javax.net.ssl.SNIHostName', referenced from method com.google.android.gms.org.conscrypt.Platform.setParametersSniHostname
W/dalvikvm(21320): VFY: unable to resolve new-instance 2221 (Ljavax/net/ssl/SNIHostName;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21320): VFY: replacing opcode 0x22 at 0x0024
E/dalvikvm(21320): Could not find class 'javax.net.ssl.SNIHostName', referenced from method com.google.android.gms.org.conscrypt.Platform.setParametersSniHostname
W/dalvikvm(21320): VFY: unable to resolve new-instance 2221 (Ljavax/net/ssl/SNIHostName;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21320): VFY: replacing opcode 0x22 at 0x0024
W/dalvikvm(21320): Unable to resolve superclass of Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession; (2212)
W/dalvikvm(21320): Link of class 'Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;' failed
E/dalvikvm(21320): Could not find class 'com.google.android.gms.org.conscrypt.DelegatingExtendedSSLSession', referenced from method com.google.android.gms.org.conscrypt.Platform.unwrapSSLSession
W/dalvikvm(21320): VFY: unable to resolve instanceof 1304 (Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21320): VFY: replacing opcode 0x20 at 0x0007
W/dalvikvm(21320): Unable to resolve superclass of Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession; (2212)
W/dalvikvm(21320): Link of class 'Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;' failed
E/dalvikvm(21320): Could not find class 'com.google.android.gms.org.conscrypt.DelegatingExtendedSSLSession', referenced from method com.google.android.gms.org.conscrypt.Platform.wrapSSLSession
W/dalvikvm(21320): VFY: unable to resolve new-instance 1304 (Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21320): VFY: replacing opcode 0x22 at 0x0007
D/dalvikvm(21320): DexOpt: unable to opt direct call 0x3096 at 0x2a in Lcom/google/android/gms/org/conscrypt/Platform;.setParametersSniHostname
D/dalvikvm(21320): DexOpt: unable to opt direct call 0x3096 at 0x2a in Lcom/google/android/gms/org/conscrypt/Platform;.setParametersSniHostname
W/dalvikvm(21320): Unable to resolve superclass of Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession; (2212)
W/dalvikvm(21320): Link of class 'Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;' failed
D/dalvikvm(21320): GC_CONCURRENT freed 299K, 11% free 3457K/3856K, paused 1ms+1ms, total 4ms
D/dalvikvm(21320): DexOpt: unable to opt direct call 0x1b67 at 0x09 in Lcom/google/android/gms/org/conscrypt/Platform;.wrapSSLSession
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:78
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r10.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r9, $r11, $i0)	timediff:78
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:78
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(21320): GC_CONCURRENT freed 353K, 12% free 3614K/4064K, paused 2ms+10ms, total 30ms
D/dalvikvm(21320): WAIT_FOR_CONCURRENT_GC blocked 22ms
D/dalvikvm(21320): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f4ad98
D/dalvikvm(21320): Shared lib '/data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so' already loaded in same CL 0x94f4ad98
D/dalvikvm(21320): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so 0x94f4ad98
D/dalvikvm(21320): Shared lib '/data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so' already loaded in same CL 0x94f4ad98
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpE;%;27;%;<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>;%;$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>();%;https://iphone-xml.booking.com/json/mobile.getExperiments;%;POST;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:10 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/dalvikvm(21320): Could not find method android.app.AppOpsManager.permissionToOp, referenced from method pq.a
W/dalvikvm(21320): VFY: unable to resolve static method 1450: Landroid/app/AppOpsManager;.permissionToOp (Ljava/lang/String;)Ljava/lang/String;
D/dalvikvm(21320): VFY: replacing opcode 0x71 at 0x000f
I/dalvikvm(21320): Could not find method android.content.Context.getSystemService, referenced from method pq.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1684: Landroid/content/Context;.getSystemService (Ljava/lang/Class;)Ljava/lang/Object;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0030
D/dalvikvm(21125): GC_CONCURRENT freed 1368K, 18% free 6954K/8424K, paused 13ms+2ms, total 59ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 46ms
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>()	timediff:431
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$z0 = virtualinvoke $r9.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r17 = virtualinvoke $r9.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:2
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:3
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 37ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 27ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 53ms
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:167
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:4
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:4
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:4
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r13 = virtualinvoke $r17.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:9
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:2
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:9
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(21320): GC_FOR_ALLOC freed 120K, 10% free 3823K/4204K, paused 36ms, total 40ms
I/dalvikvm(21320): Could not find method android.content.ContextWrapper.createCredentialProtectedStorageContext, referenced from method jia.createCredentialProtectedStorageContext
W/dalvikvm(21320): VFY: unable to resolve virtual method 1708: Landroid/content/ContextWrapper;.createCredentialProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21320): Could not find method android.content.ContextWrapper.createDeviceProtectedStorageContext, referenced from method jia.createDeviceProtectedStorageContext
W/dalvikvm(21320): VFY: unable to resolve virtual method 1709: Landroid/content/ContextWrapper;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21320): VFY: replacing opcode 0x6f at 0x0002
D/dalvikvm(21320): GC_CONCURRENT freed 187K, 7% free 4022K/4308K, paused 2ms+0ms, total 10ms
D/dalvikvm(21125): GC_CONCURRENT freed 1121K, 15% free 7228K/8440K, paused 4ms+24ms, total 66ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 55ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 46ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 25ms
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:125
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:13
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:315
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(21320): GC_CONCURRENT freed 134K, 4% free 4421K/4592K, paused 3ms+0ms, total 8ms
I/dalvikvm(21320): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method izp.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 1801: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x001c
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:51
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:8
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/ActivityManager(  492): Start proc com.booking:bookingcomprocess for service com.booking/.dcl.DCLService: pid=21347 uid=10098 gids={50098, 3003, 1028, 1015, 1023}
I/dalvikvm(21125): Could not find method android.graphics.drawable.Drawable.setTintList, referenced from method me.zhanghai.android.materialprogressbar.MaterialProgressBar.applyTintForDrawable
W/dalvikvm(21125): VFY: unable to resolve virtual method 504: Landroid/graphics/drawable/Drawable;.setTintList (Landroid/content/res/ColorStateList;)V
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0046
I/dalvikvm(21125): Could not find method android.graphics.drawable.Drawable.setTintMode, referenced from method me.zhanghai.android.materialprogressbar.MaterialProgressBar.applyTintForDrawable
W/dalvikvm(21125): VFY: unable to resolve virtual method 505: Landroid/graphics/drawable/Drawable;.setTintMode (Landroid/graphics/PorterDuff$Mode;)V
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0058
I/dalvikvm(21347): ignoring registerObject request in thread=1
I/dalvikvm(21347): ignoring registerObject request in thread=1
D/dalvikvm(21320): GC_CONCURRENT freed 134K, 5% free 4710K/4948K, paused 2ms+0ms, total 8ms
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:2
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
W/ActivityManager(  492): Launch timeout has expired, giving up wake lock!
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", 65)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", 68)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", 69)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", 132)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", 135)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", 136)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
W/GLSUser (21320): [DeviceKeyStore] Cannot load key: Device key file not found.
D/dalvikvm(21347): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21347): GC_FOR_ALLOC freed 433K, 16% free 2867K/3392K, paused 30ms, total 30ms
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_RC4_128_SHA", 138)	timediff:30
D/dalvikvm(21347): GC_CONCURRENT freed 6K, 16% free 2863K/3392K, paused 6ms+1ms, total 13ms
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:15
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_3DES_EDE_CBC_SHA", 139)	timediff:15
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:3
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_128_CBC_SHA", 140)	timediff:5
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_256_CBC_SHA", 141)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_SEED_CBC_SHA", 150)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162)	timediff:5
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_FALLBACK_SCSV", 22016)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155)	timediff:1
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176)	timediff:1
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192)	timediff:1
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", 49205)	timediff:1
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>	sig:specialinvoke $r6.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>($r0, $r2, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:$r6 = staticinvoke <okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>()	timediff:6
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:6
I/System.out(21347): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:6
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/ActivityManager(  492): Start proc com.google.android.gms.unstable for service com.google.android.gms/.droidguard.DroidGuardService: pid=21369 uid=10007 gids={50007, 3003, 1007, 1028, 1015, 1023, 3002, 3001, 3007, 2001, 3006}
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:12
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:1
I/dalvikvm(21369): Could not find method android.content.Context.createDeviceProtectedStorageContext, referenced from method jkx.a
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void writeTo(okio.BufferedSink)>	sig:virtualinvoke $r4.<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>($r1)	timediff:0
W/dalvikvm(21369): VFY: unable to resolve virtual method 1659: Landroid/content/Context;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x000b
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
D/dalvikvm(21347): GC_CONCURRENT freed 325K, 12% free 3289K/3732K, paused 2ms+6ms, total 38ms
I/System.out(21347): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:11
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/dalvikvm(21369): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method zcx.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0009
D/kinfoc  ( 2282): report thread running
I/dalvikvm(21369): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method zcx.c
W/dalvikvm(21369): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x005d
I/dalvikvm(21369): Could not find method android.os.PowerManager.isInteractive, referenced from method jih.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 2258: Landroid/os/PowerManager;.isInteractive ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0012
D/kinfoc  ( 2282): reporting all files
D/kinfoc  ( 2282): no files to report
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:38
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21347): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/dalvikvm(21369): Could not find method android.content.ContextWrapper.createCredentialProtectedStorageContext, referenced from method com.google.android.chimera.ModuleContext.createCredentialProtectedStorageContext
W/dalvikvm(21369): VFY: unable to resolve virtual method 1708: Landroid/content/ContextWrapper;.createCredentialProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21369): Could not find method android.content.ContextWrapper.createDeviceProtectedStorageContext, referenced from method com.google.android.chimera.ModuleContext.createDeviceProtectedStorageContext
W/dalvikvm(21369): VFY: unable to resolve virtual method 1709: Landroid/content/ContextWrapper;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21369): Could not find method android.content.Context.isCredentialProtectedStorage, referenced from method cqq.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 1688: Landroid/content/Context;.isCredentialProtectedStorage ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0000
I/dalvikvm(21369): Could not find method android.os.UserManager.isUserUnlocked, referenced from method cqq.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 2311: Landroid/os/UserManager;.isUserUnlocked ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x001a
I/dalvikvm(21369): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method cqq.b
W/dalvikvm(21369): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0000
I/dalvikvm(21369): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method cqq.c
W/dalvikvm(21369): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0000
I/MultiDex(21369): VM with version 1.6.0 does not have multidex support
I/MultiDex(21369): install
I/MultiDex(21369): MultiDexExtractor.load(/system/priv-app/GmsCore.apk, false)
I/MultiDex(21369): Blocking on lock /data/data/com.google.android.gms/code_cache/secondary-dexes/MultiDex.lock
I/MultiDex(21369): /data/data/com.google.android.gms/code_cache/secondary-dexes/MultiDex.lock locked
I/MultiDex(21369): loading existing secondary dex files
I/MultiDex(21369): load found 4 secondary dex files
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r2 = virtualinvoke $r6.<okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)>($r2, $r1)	timediff:298
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r3, $r13)	timediff:298
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r12.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:1692
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:1692
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:2056
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:2057
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:2090
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:2090
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/qtaguid (21125): Tagging socket 131 with tag 464ae7ed00000000(1179314157) for uid -1 failed errno=-13
I/NetworkManagementSocketTagger(21125): tagSocketFd(131, 1179314157, -1) failed with errno-13
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/MultiDex(21369): install done
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:119
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(21347): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21347): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21347): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:129
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:129
I/System.out(21347): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21347): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21347): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:1
I/System.out(21347): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http1.Http1Codec: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:47
I/System.out(21125): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:1
I/dalvikvm(21369): Could not find method android.content.Context.isDeviceProtectedStorage, referenced from method kel.d
W/dalvikvm(21369): VFY: unable to resolve virtual method 1689: Landroid/content/Context;.isDeviceProtectedStorage ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0006
I/dalvikvm(21369): Could not find method android.os.UserHandle.isOwner, referenced from method kel.i
W/dalvikvm(21369): VFY: unable to resolve virtual method 2304: Landroid/os/UserHandle;.isOwner ()Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x000a
I/System.out(21347): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:specialinvoke r23.<okhttp3.Request$Builder: void <init>()>()	timediff:20
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
D/dalvikvm(  752): GC_CONCURRENT freed 4442K, 26% free 14193K/19172K, paused 1ms+2ms, total 103ms
D/dalvikvm(  752): WAIT_FOR_CONCURRENT_GC blocked 83ms
D/dalvikvm(21347): GC_CONCURRENT freed 252K, 11% free 3421K/3812K, paused 2ms+1ms, total 30ms
I/System.out(21347): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:40
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:41
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r2)	timediff:41
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:3
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r9)	timediff:7
I/System.out(21347): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:1
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/dalvikvm(21369): Could not find method android.content.pm.PackageManager.isInstantApp, referenced from method kkc.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 1808: Landroid/content/pm/PackageManager;.isInstantApp (Ljava/lang/String;)Z
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x002d
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21347): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21347): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("X-LIBRARY", $r5)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r5)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
D/dalvikvm(21369): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21369): GC_CONCURRENT freed 315K, 13% free 2890K/3304K, paused 2ms+3ms, total 8ms
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:9
I/System.out(21347): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:9
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:9
I/System.out(21347): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:9
I/System.out(21347): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("B-T", $r4)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_version", $r6)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("device_id", $r6)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("network_type", $r6)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:1
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("bt", "1")	timediff:2
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:2
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:2
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:1
I/dalvikvm(21369): Could not find method android.content.ContextWrapper.createCredentialProtectedStorageContext, referenced from method jwn.createCredentialProtectedStorageContext
W/dalvikvm(21369): VFY: unable to resolve virtual method 1708: Landroid/content/ContextWrapper;.createCredentialProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21369): Could not find method android.content.ContextWrapper.createDeviceProtectedStorageContext, referenced from method jwn.createDeviceProtectedStorageContext
W/dalvikvm(21369): VFY: unable to resolve virtual method 1709: Landroid/content/ContextWrapper;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6f at 0x0002
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:3
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:3
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:3
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>("Accept-Encoding")	timediff:1
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21347): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
D/dalvikvm(21369): DexOpt: couldn't find static field Landroid/os/Build;.SUPPORTED_ABIS
W/dalvikvm(21369): VFY: unable to resolve static field 918 (SUPPORTED_ABIS) in Landroid/os/Build;
D/dalvikvm(21369): VFY: replacing opcode 0x62 at 0x0008
D/dalvikvm(21369): DexOpt: couldn't find static field Landroid/os/Build;.SUPPORTED_ABIS
W/dalvikvm(21369): VFY: unable to resolve static field 918 (SUPPORTED_ABIS) in Landroid/os/Build;
D/dalvikvm(21369): VFY: replacing opcode 0x62 at 0x0097
D/dalvikvm(21369): DexOpt: couldn't find field Landroid/content/pm/ApplicationInfo;.splitSourceDirs
W/dalvikvm(21369): VFY: unable to resolve instance field 849
D/dalvikvm(21369): VFY: replacing opcode 0x54 at 0x0053
D/dalvikvm(21369): DexOpt: couldn't find field Landroid/content/pm/ApplicationInfo;.splitSourceDirs
I/dalvikvm(21369): DexOpt: unable to optimize instance field ref 0x0351 at 0x57 in Lkgr;.d
D/dalvikvm(21369): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f48cf8
D/dalvikvm(21369): Added shared lib /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f48cf8
D/dalvikvm(21369): No JNI_OnLoad found in /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f48cf8, skipping init
D/dalvikvm(21369): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so 0x94f48cf8
D/dalvikvm(21369): Added shared lib /data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so 0x94f48cf8
V/NativeCrypto(21369): Registering com/google/android/gms/org/conscrypt/NativeCrypto's 276 native methods...
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
E/dalvikvm(21369): Could not find class 'javax.net.ssl.SNIServerName', referenced from method com.google.android.gms.org.conscrypt.Platform.getSniHostnameFromParams
W/dalvikvm(21369): VFY: unable to resolve check-cast 2222 (Ljavax/net/ssl/SNIServerName;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21369): VFY: replacing opcode 0x1f at 0x0025
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
D/dalvikvm(21347): GC_CONCURRENT freed 364K, 12% free 3441K/3908K, paused 3ms+1ms, total 8ms
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:8
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:19
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:19
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:2
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:2
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21347): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:specialinvoke $r4.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21347): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): OkHttpP;%;28;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 419
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21347): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:1968
I/System.out(21347): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;29;%;<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 419
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1969
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:1969
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21347): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;30;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
E/dalvikvm(21369): Could not find class 'javax.net.ssl.SNIHostName', referenced from method com.google.android.gms.org.conscrypt.Platform.setParametersSniHostname
W/dalvikvm(21369): VFY: unable to resolve new-instance 2221 (Ljavax/net/ssl/SNIHostName;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21369): VFY: replacing opcode 0x22 at 0x0024
E/dalvikvm(21369): Could not find class 'javax.net.ssl.SNIHostName', referenced from method com.google.android.gms.org.conscrypt.Platform.setParametersSniHostname
W/dalvikvm(21369): VFY: unable to resolve new-instance 2221 (Ljavax/net/ssl/SNIHostName;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21369): VFY: replacing opcode 0x22 at 0x0024
W/dalvikvm(21369): Unable to resolve superclass of Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession; (2212)
W/dalvikvm(21369): Link of class 'Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;' failed
E/dalvikvm(21369): Could not find class 'com.google.android.gms.org.conscrypt.DelegatingExtendedSSLSession', referenced from method com.google.android.gms.org.conscrypt.Platform.unwrapSSLSession
W/dalvikvm(21369): VFY: unable to resolve instanceof 1304 (Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21369): VFY: replacing opcode 0x20 at 0x0007
W/dalvikvm(21369): Unable to resolve superclass of Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession; (2212)
W/dalvikvm(21369): Link of class 'Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;' failed
E/dalvikvm(21369): Could not find class 'com.google.android.gms.org.conscrypt.DelegatingExtendedSSLSession', referenced from method com.google.android.gms.org.conscrypt.Platform.wrapSSLSession
W/dalvikvm(21369): VFY: unable to resolve new-instance 1304 (Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;) in Lcom/google/android/gms/org/conscrypt/Platform;
D/dalvikvm(21369): VFY: replacing opcode 0x22 at 0x0007
D/dalvikvm(21369): DexOpt: unable to opt direct call 0x3096 at 0x2a in Lcom/google/android/gms/org/conscrypt/Platform;.setParametersSniHostname
D/dalvikvm(21369): DexOpt: unable to opt direct call 0x3096 at 0x2a in Lcom/google/android/gms/org/conscrypt/Platform;.setParametersSniHostname
W/dalvikvm(21369): Unable to resolve superclass of Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession; (2212)
W/dalvikvm(21369): Link of class 'Lcom/google/android/gms/org/conscrypt/DelegatingExtendedSSLSession;' failed
D/dalvikvm(21369): DexOpt: unable to opt direct call 0x1b67 at 0x09 in Lcom/google/android/gms/org/conscrypt/Platform;.wrapSSLSession
I/System.out(21347): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:10
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:11
I/System.out(21347): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:3
I/System.out(21347): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:4
D/dalvikvm(21369): GC_CONCURRENT freed 316K, 13% free 2962K/3372K, paused 0ms+0ms, total 2ms
I/System.out(21347): body:<okhttp3.internal.http2.Http2Connection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.http2.Http2Connection$Listener$1: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.http2.Http2Connection$Listener: void <init>()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object)>($r0, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:2
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:2
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21347): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r3.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = virtualinvoke $r6.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r9.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r11 = virtualinvoke $r3.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
D/dalvikvm(21369): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so 0x94f48cf8
D/dalvikvm(21369): Shared lib '/data/data/com.google.android.gms/app_extracted_libs/x86/libgmscore.so' already loaded in same CL 0x94f48cf8
D/dalvikvm(21369): Trying to load lib /data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so 0x94f48cf8
D/dalvikvm(21369): Shared lib '/data/data/com.google.android.gms/app_extracted_libs/x86/libconscrypt_gmscore_jni.so' already loaded in same CL 0x94f48cf8
D/dalvikvm(21369): GC_CONCURRENT freed 256K, 11% free 3114K/3464K, paused 1ms+13ms, total 17ms
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:76
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r10.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r9, $r11, $i0)	timediff:76
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:83
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(21347): GC_CONCURRENT freed 356K, 12% free 3470K/3940K, paused 1ms+1ms, total 16ms
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:16
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:6
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:24
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:5
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(21347): GC_CONCURRENT freed 386K, 14% free 3471K/3992K, paused 1ms+0ms, total 5ms
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:18
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:26
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r5)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21347): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(21347): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r10)	timediff:52
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r6.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:0
I/ProviderInstaller(21369): Installed default security provider GmsCore_OpenSSL
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:233
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 419
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:2203
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r10 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:virtualinvoke $r6.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r10, $r8)	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2203
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;31;%;<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 419
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:2205
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2206
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;32;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 419
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:2207
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2721
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;33;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 419
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:2723
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2766
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;34;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/bookings.getAppUpdate?model=SM-G9350&include_tealium_parameters=1&affiliate_label=version%3D12.9-android%3Breferrer_id%3Dnull%3Bdevice_id%3D818c4503-494e-4555-a0f3-de4ad63b2fe9&show_country=1&first_use=1521564953455&affiliate_id=337862&limit_ad_tracking_enabled=0&osversion=19&version=12.9&android_id=b2a4bb24-96c2-4808-8092-94b035a16c16&trademob_id=&device_token=GCM_APA91bGmnRgRK05RnkdzMxMz75tVsBcOCIZA7UCgsTjtYwSJCKTf0KsAFsceGzgOv07ZHprochs-rtgyaumVCTKR-J69yi0nj8RY23eBG0WYSYXigFhX500&show_sid=1&carrier=T-Mobile&user_latitude=35.71659&app_store=google&os=Android&app=booking.Android&install_referrer=&screen_width=720&user_longitude=139.72598166666666&include_usp_figures=1&support_actions=1&brand=samsung&carrier_country=US&screen_height=1280;%;POST;%;[419];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/dalvikvm(21369): Could not find method android.app.AppOpsManager.permissionToOp, referenced from method pq.a
W/dalvikvm(21369): VFY: unable to resolve static method 1450: Landroid/app/AppOpsManager;.permissionToOp (Ljava/lang/String;)Ljava/lang/String;
D/dalvikvm(21369): VFY: replacing opcode 0x71 at 0x000f
I/dalvikvm(21369): Could not find method android.content.Context.getSystemService, referenced from method pq.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 1684: Landroid/content/Context;.getSystemService (Ljava/lang/Class;)Ljava/lang/Object;
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0030
D/dalvikvm(21369): GC_CONCURRENT freed 165K, 8% free 3346K/3624K, paused 4ms+0ms, total 12ms
I/dalvikvm(21369): Could not find method android.content.ContextWrapper.createCredentialProtectedStorageContext, referenced from method jia.createCredentialProtectedStorageContext
W/dalvikvm(21369): VFY: unable to resolve virtual method 1708: Landroid/content/ContextWrapper;.createCredentialProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6f at 0x0002
I/dalvikvm(21369): Could not find method android.content.ContextWrapper.createDeviceProtectedStorageContext, referenced from method jia.createDeviceProtectedStorageContext
W/dalvikvm(21369): VFY: unable to resolve virtual method 1709: Landroid/content/ContextWrapper;.createDeviceProtectedStorageContext ()Landroid/content/Context;
D/dalvikvm(21369): VFY: replacing opcode 0x6f at 0x0002
D/dalvikvm(21347): GC_CONCURRENT freed 358K, 13% free 3498K/3992K, paused 5ms+2ms, total 21ms
D/dalvikvm(21369): GC_CONCURRENT freed 168K, 7% free 3579K/3844K, paused 2ms+1ms, total 13ms
I/dalvikvm(21369): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method izp.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 1801: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x001c
I/System.out(21347): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(21347): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r8 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(21347): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:2
I/System.out(21347): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r9.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r8, $r7, $r4, $r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r14)	timediff:3
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(21347): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:1
I/System.out(21347): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r6)	timediff:1
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r6.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r15.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21347): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r3, $r13)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r12.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:274
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:274
I/System.out(21347): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:357
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:357
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(21347): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:429
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
W/ConfigurationChimeraPro(  705): Got null configs for com.google.android.gms.droidguard
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm(21369): GC_CONCURRENT freed 131K, 6% free 3834K/4064K, paused 3ms+0ms, total 6ms
I/dalvikvm(21369): Could not find method android.content.Context.checkSelfPermission, referenced from method jwb.a
W/dalvikvm(21369): VFY: unable to resolve virtual method 1657: Landroid/content/Context;.checkSelfPermission (Ljava/lang/String;)I
D/dalvikvm(21369): VFY: replacing opcode 0x6e at 0x0034
I/dalvikvm(21369): Failed resolving Ljwc; interface 782 'Landroid/content/pm/PackageManager$OnPermissionsChangedListener;'
W/dalvikvm(21369): Link of class 'Ljwc;' failed
E/dalvikvm(21369): Could not find class 'jwc', referenced from method jwb.a
W/dalvikvm(21369): VFY: unable to resolve new-instance 2609 (Ljwc;) in Ljwb;
D/dalvikvm(21369): VFY: replacing opcode 0x22 at 0x0000
I/dalvikvm(21369): Failed resolving Ljwc; interface 782 'Landroid/content/pm/PackageManager$OnPermissionsChangedListener;'
W/dalvikvm(21369): Link of class 'Ljwc;' failed
D/dalvikvm(21369): DexOpt: unable to opt direct call 0x37c7 at 0x02 in Ljwb;.a
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:83
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:83
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
D/dalvikvm(21369): GC_CONCURRENT freed 196K, 7% free 4146K/4440K, paused 1ms+3ms, total 18ms
D/dalvikvm(21369): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(21369): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(21369): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:30
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:60
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:61
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:136
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;36;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/bookings.getCurrencyExchangeRates?base_currency=EUR&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:3019
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21347): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21347): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21347): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21347): OkHttpE;%;8;%;<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>;%;$r11 = interfaceinvoke $r10.<okhttp3.Call: okhttp3.Response execute()>();%;https://iphone-xml.booking.com/json/mobile.getMobileComponents?languagecode=en-us;%;GET;%;[881];%;[];%;[];%;[];%;[];%;
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21347): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21347): header:Server: nginx
I/System.out(21347): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21347): Content-Type: application/json; charset=utf-8
I/System.out(21347): Content-Length: 881
I/System.out(21347): Server-Wallclock: 0
I/System.out(21347): X-XSS-Protection: 1; mode=block
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r11 = interfaceinvoke $r10.<okhttp3.Call: okhttp3.Response execute()>()	timediff:852
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$z0 = virtualinvoke $r11.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(21347): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21347): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21347): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21347): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(21347): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(21347): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:specialinvoke $r3.<okhttp3.ResponseBody$BomAwareReader: void <init>(okio.BufferedSource,java.nio.charset.Charset)>($r2, $r4)	timediff:0
I/System.out(21347): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r14 = virtualinvoke $r13.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:0
I/System.out(21347): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:82
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;40;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/bookings.getCurrencyExchangeRates?base_currency=EUR&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:3212
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:3311
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;41;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/bookings.getCurrencyExchangeRates?base_currency=EUR;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:12 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:3312
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:3312
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/ActivityManager(  492): Process com.booking:bookingcomprocess (pid 21347) has died.
I/ActivityManager(  492): START u0 {act=android.intent.action.VIEW cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.booking/.activity.StartActivity} from pid -1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:19
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r3 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:specialinvoke $r4.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r3)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network$3: void <init>(java.util.concurrent.Callable)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.Request createLogVisitorRequest(java.util.concurrent.Callable)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/ActivityManager(  492): START u0 {cmp=com.booking/.activity.SearchActivity (has extras)} from pid 21125
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:11
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:11
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:12
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/qtaguid (21369): Tagging socket 60 with tag 3000180300000000(805312515) for uid -1 failed errno=-13
D/dalvikvm(21369): GC_CONCURRENT freed 580K, 12% free 5131K/5808K, paused 2ms+3ms, total 20ms
D/dalvikvm(21125): GC_FOR_ALLOC freed 89K, 21% free 7192K/8992K, paused 36ms, total 36ms
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:65
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:6
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
W/dalvikvm(21125): VFY: unable to resolve virtual method 280: Landroid/content/Context;.getColorStateList (I)Landroid/content/res/ColorStateList;
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("B-T", $r4)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_version", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("device_id", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("network_type", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("languagecode", $r6)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/ActivityManager(  492): Start proc com.booking:bookingcomprocess for service com.booking/.dcl.DCLService: pid=21409 uid=10098 gids={50098, 3003, 1028, 1015, 1023}
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object)>	sig:specialinvoke $r4.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r5)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/qtaguid (21369): Untagging socket 47 failed errno=-13
W/NetworkManagementSocketTagger(21369): untagSocket(47) failed with errno -13
D/dalvikvm(  170): GC_EXPLICIT freed <1K, 5% free 2788K/2924K, paused 0ms+0ms, total 49ms
D/dalvikvm(21369): GC_FOR_ALLOC freed 1998K, 42% free 3493K/5996K, paused 13ms, total 14ms
D/dalvikvm(  170): GC_EXPLICIT freed <1K, 5% free 2788K/2924K, paused 0ms+0ms, total 28ms
I/dalvikvm(21409): ignoring registerObject request in thread=1
I/dalvikvm(21409): ignoring registerObject request in thread=1
D/dalvikvm(21125): GC_FOR_ALLOC freed 986K, 20% free 7232K/8992K, paused 61ms, total 61ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 7.336MB for 196230-byte allocation
I/ActivityManager(  492): Start proc com.hermes.superb.booster for service com.hermes.superb.booster/com.daemon.accounts.SyncService: pid=21423 uid=10046 gids={50046, 3003, 1028, 1015, 1023, 3002, 3001}
D/dalvikvm(21125): GC_FOR_ALLOC freed <1K, 20% free 7423K/9184K, paused 38ms, total 38ms
I/dalvikvm(21423): ignoring registerObject request in thread=1
I/dalvikvm(21423): ignoring registerObject request in thread=1
I/DynamiteModule(21369): Considering local module com.google.android.gms.googlecertificates:4 and remote module com.google.android.gms.googlecertificates:4
I/DynamiteModule(21369): Selected local version of com.google.android.gms.googlecertificates
D/dalvikvm(21125): GC_FOR_ALLOC freed 178K, 21% free 7294K/9184K, paused 31ms, total 31ms
D/dalvikvm(21369): GC_CONCURRENT freed 239K, 40% free 3638K/5996K, paused 0ms+1ms, total 4ms
I/Icing   (  837): updateResources: need to parse rwo{com.google.android.gms}
D/dalvikvm(21125): GC_FOR_ALLOC freed 191K, 22% free 7240K/9184K, paused 58ms, total 58ms
I/dalvikvm(21125): Could not find method android.widget.TextView.setTextAppearance, referenced from method com.booking.android.ui.font.BuiFont.setStyle
W/dalvikvm(21125): VFY: unable to resolve virtual method 2220: Landroid/widget/TextView;.setTextAppearance (I)V
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0024
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:11
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:216
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out(21125): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/dalvikvm(21125): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.WindowCallbackWrapper.onProvideKeyboardShortcuts
W/dalvikvm(21125): VFY: unable to resolve interface method 10197: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm(21125): VFY: replacing opcode 0x72 at 0x0002
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object)>($r0, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r7)	timediff:6
I/System.out(21125): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:7
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:7
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:7
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isClosed()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isOutputShutdown()>()	timediff:0
W/dalvikvm(21125): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm(21125): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.WindowCallbackWrapper.onSearchRequested
W/dalvikvm(21125): VFY: unable to resolve interface method 10199: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm(21125): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm(21125): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.WindowCallbackWrapper.onWindowStartingActionMode
W/dalvikvm(21125): VFY: unable to resolve interface method 10203: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm(21125): VFY: replacing opcode 0x72 at 0x0002
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$i0 = virtualinvoke $r2.<java.net.Socket: int getSoTimeout()>()	timediff:6
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>(1)	timediff:0
I/AppCompatDelegate(21125): The Activity's LayoutInflater already has a Factory installed so we can not install AppCompat's
I/System.out(21125): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$z2 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>($z1)	timediff:25
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:32
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http1.Http1Codec: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out(21125): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/dalvikvm(21125): Could not find method android.widget.FrameLayout.startActionModeForChild, referenced from method android.support.v7.widget.ActionBarContainer.startActionModeForChild
W/dalvikvm(21125): VFY: unable to resolve virtual method 10464: Landroid/widget/FrameLayout;.startActionModeForChild (Landroid/view/View;Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm(21125): VFY: replacing opcode 0x6f at 0x0002
D/dalvikvm(21369): GC_CONCURRENT freed 132K, 36% free 3890K/5996K, paused 5ms+0ms, total 9ms
I/dalvikvm(21125): Could not find method android.content.Context.getColorStateList, referenced from method android.support.v7.content.res.AppCompatResources.getColorStateList
W/dalvikvm(21125): VFY: unable to resolve virtual method 200: Landroid/content/Context;.getColorStateList (I)Landroid/content/res/ColorStateList;
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0006
I/dalvikvm(21125): Could not find method android.content.res.Resources.getDrawable, referenced from method android.support.v7.widget.ResourcesWrapper.getDrawable
W/dalvikvm(21125): VFY: unable to resolve virtual method 295: Landroid/content/res/Resources;.getDrawable (ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0002
I/dalvikvm(21125): Could not find method android.content.res.Resources.getDrawableForDensity, referenced from method android.support.v7.widget.ResourcesWrapper.getDrawableForDensity
W/dalvikvm(21125): VFY: unable to resolve virtual method 297: Landroid/content/res/Resources;.getDrawableForDensity (IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(21125): VFY: replacing opcode 0x6e at 0x0002
D/dalvikvm(21423): Trying to load lib /data/data/com.hermes.superb.booster/files/so_libs/librx.so 0x94f41558
E/dalvikvm(21125): Could not find class 'android.graphics.drawable.RippleDrawable', referenced from method android.support.v7.widget.AppCompatImageHelper.hasOverlappingRendering
W/dalvikvm(21125): VFY: unable to resolve instanceof 165 (Landroid/graphics/drawable/RippleDrawable;) in Landroid/support/v7/widget/AppCompatImageHelper;
D/dalvikvm(21125): VFY: replacing opcode 0x20 at 0x000c
D/dalvikvm(21423): Added shared lib /data/data/com.hermes.superb.booster/files/so_libs/librx.so 0x94f41558
D/dalvikvm(21423): Trying to load lib /data/app-lib/com.hermes.superb.booster-1/librx.so 0x94f41558
D/dalvikvm(21423): Added shared lib /data/app-lib/com.hermes.superb.booster-1/librx.so 0x94f41558
D/dalvikvm(21369): GC_CONCURRENT freed 104K, 31% free 4169K/5996K, paused 2ms+1ms, total 5ms
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor$GzipRequestBody: void writeTo(okio.BufferedSink)>	sig:virtualinvoke $r4.<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>($r1)	timediff:103
E/NFC     (21125): could not retrieve NFC service
D/dalvikvm(21423): Trying to load lib /data/data/com.hermes.superb.booster/files/so_libs/librx.so 0x94f41558
D/dalvikvm(21423): Shared lib '/data/data/com.hermes.superb.booster/files/so_libs/librx.so' already loaded in same CL 0x94f41558
D/dalvikvm(21423): Trying to load lib /data/app-lib/com.hermes.superb.booster-1/librx.so 0x94f41558
D/dalvikvm(21423): Shared lib '/data/app-lib/com.hermes.superb.booster-1/librx.so' already loaded in same CL 0x94f41558
D/dalvikvm(21125): GC_CONCURRENT freed 1132K, 18% free 7595K/9184K, paused 9ms+21ms, total 55ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 33ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 43ms
I/dalvikvm(21125): Could not find method android.widget.LinearLayout.<init>, referenced from method com.booking.ui.ValuePropositionView.<init>
W/dalvikvm(21125): VFY: unable to resolve direct method 1054: Landroid/widget/LinearLayout;.<init> (Landroid/content/Context;Landroid/util/AttributeSet;II)V
D/dalvikvm(21125): VFY: replacing opcode 0x70 at 0x0000
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 35ms
D/dalvikvm(21369): GC_CONCURRENT freed 107K, 26% free 4445K/5996K, paused 2ms+1ms, total 6ms
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.io.FileSystem: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.io.FileSystem$1: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Cache: void <init>(java.io.File,long,okhttp3.internal.io.FileSystem)>	sig:specialinvoke $r3.<okhttp3.Cache$1: void <init>(okhttp3.Cache)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)>	sig:$r5 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp DiskLruCache", 1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.cache.DiskLruCache: void <init>(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor)>	sig:specialinvoke $r5.<okhttp3.internal.cache.DiskLruCache$1: void <init>(okhttp3.internal.cache.DiskLruCache)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)>	sig:specialinvoke $r7.<okhttp3.internal.cache.DiskLruCache: void <init>(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor)>($r0, $r1, $i0, $i1, $l2, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Cache: void <init>(java.io.File,long,okhttp3.internal.io.FileSystem)>	sig:$r4 = staticinvoke <okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)>($r2, $r1, 201105, 2, $l0)	timediff:2
I/System.out(21125): body:<okhttp3.Cache: void <init>(java.io.File,long)>	sig:specialinvoke $r0.<okhttp3.Cache: void <init>(java.io.File,long,okhttp3.internal.io.FileSystem)>($r1, $l0, $r2)	timediff:2
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/dalvikvm(21423): Could not find method android.content.res.Configuration.getLocales, referenced from method org.neptune.PlanetNeptune.c
W/dalvikvm(21423): VFY: unable to resolve virtual method 1090: Landroid/content/res/Configuration;.getLocales ()Landroid/os/LocaleList;
D/dalvikvm(21423): VFY: replacing opcode 0x6e at 0x000e
D/dalvikvm(21369): GC_CONCURRENT freed 114K, 21% free 4759K/5996K, paused 6ms+1ms, total 9ms
D/dalvikvm(21423): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21423): GC_CONCURRENT freed 393K, 15% free 2874K/3364K, paused 4ms+1ms, total 10ms
D/dalvikvm(21369): GC_CONCURRENT freed 146K, 15% free 5144K/5996K, paused 2ms+0ms, total 7ms
D/dalvikvm(21369): Trying to load lib /data/data/com.google.android.gms/app_dg_cache/604D6B5A95469D67511CB194B173B042E6F7A341/libdB5D837E3553E.so 0x9515ed58
D/dalvikvm(21125): GC_FOR_ALLOC freed 518K, 15% free 7842K/9184K, paused 174ms, total 174ms
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:8
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:196
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21125): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:196
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:2
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;44;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:700
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;45;%;<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:704
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:704
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;46;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
W/Settings(21125): Setting airplane_mode_on has moved from android.provider.Settings.System to android.provider.Settings.Global, returning read-only value.
D/dalvikvm(21369): Added shared lib /data/data/com.google.android.gms/app_dg_cache/604D6B5A95469D67511CB194B173B042E6F7A341/libdB5D837E3553E.so 0x9515ed58
D/dalvikvm(21369): No JNI_OnLoad found in /data/data/com.google.android.gms/app_dg_cache/604D6B5A95469D67511CB194B173B042E6F7A341/libdB5D837E3553E.so 0x9515ed58, skipping init
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:18
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:723
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r10 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:virtualinvoke $r6.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r10, $r8)	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:724
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;47;%;<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:14
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:738
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:761
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:79
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;48;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:862
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:887
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;49;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:888
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out(21409): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out(21409): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out(21409): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>	sig:specialinvoke $r3.<okhttp3.ResponseBody$1: void <init>(okhttp3.MediaType,long,okio.BufferedSource)>($r0, $l0, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>	sig:$r3 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>($r0, $l0, $r2)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>(null, $r0)	timediff:1
I/System.out(21409): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l2, $l3)	timediff:0
I/System.out(21409): body:<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>	sig:specialinvoke $r3.<okhttp3.RequestBody$2: void <init>(okhttp3.MediaType,int,byte[],int)>($r0, $i1, $r1, $i0)	timediff:0
I/System.out(21409): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:1
I/System.out(21409): body:<okhttp3.internal.Util: void <clinit>()>	sig:$r3 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>(null, $r0)	timediff:6
I/System.out(21409): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:7
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_NULL_MD5", 1)	timediff:3
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_NULL_SHA", 2)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_RC4_128_MD5", 4)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_RC4_128_SHA", 5)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:3
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21)	timediff:3
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27)	timediff:3
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31)	timediff:0
D/dalvikvm(21409): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(21409): GC_CONCURRENT freed 328K, 13% free 2856K/3280K, paused 2ms+6ms, total 14ms
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:11
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32)	timediff:11
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_NULL_SHA256", 59)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", 65)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", 68)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", 69)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", 132)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", 135)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", 136)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_RC4_128_SHA", 138)	timediff:4
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_3DES_EDE_CBC_SHA", 139)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_128_CBC_SHA", 140)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_PSK_WITH_AES_256_CBC_SHA", 141)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_SEED_CBC_SHA", 150)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 1447K, 17% free 8073K/9620K, paused 46ms+27ms, total 84ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 39ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 39ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166)	timediff:9
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_FALLBACK_SCSV", 22016)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
D/dalvikvm(21423): GC_CONCURRENT freed 355K, 14% free 2906K/3364K, paused 1ms+0ms, total 3ms
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:4
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161)	timediff:4
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200)	timediff:2
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", 49205)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA", 49206)	timediff:1
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256", 52392)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int)>("TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", 52393)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:1
I/System.out(21409): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:9
I/System.out(21409): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_3", 0, "TLSv1.3")	timediff:0
I/System.out(21409): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 1, "TLSv1.2")	timediff:0
I/System.out(21409): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 2, "TLSv1.1")	timediff:0
I/System.out(21409): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 3, "TLSv1")	timediff:0
D/dalvikvm(21369): DexOpt: --- BEGIN 'f.apk' (bootstrap=0) ---
D/dalvikvm(21409): GC_CONCURRENT freed 348K, 14% free 2893K/3336K, paused 2ms+0ms, total 5ms
I/System.out(21409): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 4, "SSLv3")	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:1
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(21409): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:1
I/System.out(21409): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21409): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:1
I/System.out(21409): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:80
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(21125): GC_FOR_ALLOC freed 227K, 18% free 8133K/9812K, paused 42ms, total 42ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 57ms
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:889
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;50;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:991
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:991
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;51;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:993
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = virtualinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:1019
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:6
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpE;%;52;%;<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>;%;$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>();%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:13 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>()	timediff:1032
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$z0 = virtualinvoke $r9.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r17 = virtualinvoke $r9.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)>($r1, $r2)	timediff:1
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r13 = virtualinvoke $r17.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:1
D/dalvikvm(21409): GC_CONCURRENT freed 189K, 11% free 3088K/3456K, paused 19ms+0ms, total 21ms
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:130
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r8)	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>	sig:specialinvoke $r6.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>($r0, $r2, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:$r6 = staticinvoke <okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out(21409): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(21409): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:133
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:133
D/dalvikvm(21125): GC_CONCURRENT freed 1735K, 19% free 8177K/10008K, paused 39ms+1ms, total 61ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 13ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 13ms
D/dalvikvm(21125): WAIT_FOR_CONCURRENT_GC blocked 17ms
I/System.out(21409): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r7 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>("https")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.NetworkXml: okhttp3.HttpUrl$Builder newHttpUrlBuilder(java.lang.String)>	sig:$r2 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("iphone-xml.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("pulse.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder get()>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("GET", null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("secure-iphone-xml.booking.com", $r3)	timediff:54
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:2
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:2
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:$r1 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>($r0, $r1, 0)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:virtualinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.AutoDetectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: void <init>(okhttp3.Interceptor$Chain,okhttp3.Interceptor[])>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers: java.lang.String get(java.lang.String)>("X-LIBRARY")	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("X-LIBRARY", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r5)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = virtualinvoke $r5.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(21409): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21409): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:18
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(21409): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: void <init>(com.booking.common.http.BookingHttpClientDriver,boolean)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21409): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(1L, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r0)	timediff:0
D/dalvikvm(21125): DexOpt: unable to opt direct call 0x02bf at 0x30 in Lcom/booking/android/ui/widget/TheButton;.addRippleDrawable
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:3
I/System.out(21409): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(21409): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:46
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;53;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:72
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:19
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;55;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(21409): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:1
I/System.out(21409): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:1
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:852
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:853
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;57;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:856
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:978
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:2
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;58;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:982
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:983
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;59;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;60;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): header:Server: nginx
I/System.out(21409): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21409): Content-Type: application/json; charset=utf-8
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): header:Server: nginx
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21409): OkHttpP;%;2;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.getMobileComponents?languagecode=en-us&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&bt=1;%;GET;%;[881];%;[];%;[];%;[];%;[];%;
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21409): header:Server: nginx
I/System.out(21409): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21409): Content-Type: application/json; charset=utf-8
I/System.out(21409): Content-Length: 881
I/System.out(21409): Server-Wallclock: 0
I/System.out(21409): X-XSS-Protection: 1; mode=block
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21409): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21409): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r2)	timediff:2
I/System.out(21409): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient,boolean)>($r1, $z0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:35
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21409): body:<com.booking.core.squeaks.XmlSqueakSender: okhttp3.Request buildSqueakingRequest(java.util.Collection)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)	timediff:3
I/System.out(21409): body:<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>	sig:$r2 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>($r0, $r1, 0, $i0)	timediff:0
I/System.out(21409): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(21409): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r0)	timediff:0
I/System.out(21409): body:<com.booking.core.squeaks.XmlSqueakSender: boolean sendSqueaks(java.util.Collection)>	sig:$r8 = virtualinvoke $r6.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r7)	timediff:0
I/System.out(21409): body:<okhttp3.RealCall: void captureCallStackTrace()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)>("response.body().close()")	timediff:0
I/System.out(21409): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:specialinvoke $r0.<okhttp3.RealCall: void captureCallStackTrace()>()	timediff:0
I/System.out(21409): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21409): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("user_os", $r6)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:1
I/System.out(21409): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:19
I/System.out(21409): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("attractions-xml-secure-mobile.booking.com", $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r4)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>	sig:specialinvoke $r6.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r4 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])>("mobile.api.booking.com", $r3)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient$Builder configureSslCertificatePinning(okhttp3.OkHttpClient$Builder)>	sig:$r2 = virtualinvoke $r4.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>	sig:$i1 = staticinvoke <okhttp3.OkHttpClient$Builder: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)>("timeout", $l0, $r1)	timediff:0
I/System.out(21125): body:<com.booking.common.http.BookingHttpClientBuilder: okhttp3.OkHttpClient newOkHttpClient()>	sig:virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
W/ContextImpl(  492): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:2000 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;66;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.getExplorerGuides?show_all=1&resolution=640x320&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1402
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2345
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
D/dalvikvm(21409): GC_FOR_ALLOC freed 502K, 15% free 3643K/4240K, paused 12ms, total 12ms
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:2
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:34
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21409): OkHttpE;%;17;%;<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>;%;$r11 = interfaceinvoke $r10.<okhttp3.Call: okhttp3.Response execute()>();%;https://iphone-xml.booking.com/json/mobile.getMobileComponents?languagecode=en-us;%;GET;%;[881];%;[];%;[];%;[];%;[];%;
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21409): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21409): header:Server: nginx
I/System.out(21409): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21409): Content-Type: application/json; charset=utf-8
I/System.out(21409): Content-Length: 881
I/System.out(21409): Server-Wallclock: 0
I/System.out(21409): X-XSS-Protection: 1; mode=block
I/System.out(21409): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r11 = interfaceinvoke $r10.<okhttp3.Call: okhttp3.Response execute()>()	timediff:424
I/System.out(21409): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$z0 = virtualinvoke $r11.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(21409): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21409): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(21409): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:specialinvoke $r3.<okhttp3.ResponseBody$BomAwareReader: void <init>(okio.BufferedSource,java.nio.charset.Charset)>($r2, $r4)	timediff:0
I/System.out(21409): body:<com.booking.dcl.DCLServiceHelper: java.util.List getPatchesInformation(okhttp3.OkHttpClient,java.lang.String,java.lang.String)>	sig:$r14 = virtualinvoke $r13.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21409): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(21409): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:1
I/System.out(21409): body:<okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)>($r5, $r3)	timediff:1
I/System.out(21409): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21409): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;67;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:367
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;68;%;<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:368
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:368
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;69;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:369
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r10 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:virtualinvoke $r6.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r10, $r8)	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:370
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm(21409): GC_CONCURRENT freed 160K, 14% free 3672K/4240K, paused 4ms+19ms, total 48ms
W/DebugConnManager(21409): getNetworkInfo() on networkType 1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:33
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;70;%;<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:405
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:406
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;71;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor?user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&languagecode=en-us&display=large_undefined;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:408
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:437
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/Process (21409): Sending signal. PID: 21409 SIG: 9
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:27
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;72;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:3
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:10
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:477
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:477
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:7
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;73;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:485
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:485
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;74;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/ActivityManager(  492): Process com.booking:bookingcomprocess (pid 21409) has died.
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:11
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:502
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = virtualinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:503
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpE;%;75;%;<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>;%;$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>();%;https://iphone-xml.booking.com/json/mobile.logVisitor;%;POST;%;[95];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:12
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:16 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Content-Length: 95
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.Call: okhttp3.Response execute()>()	timediff:516
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$z0 = virtualinvoke $r9.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r17 = virtualinvoke $r9.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:4
I/System.out(21125): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:4
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:5
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:5
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:30
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)>($r1, $r2)	timediff:30
I/System.out(21125): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(21125): body:<com.booking.core.exp.Network: com.google.gson.JsonObject fetchRequest(okhttp3.Request,java.util.concurrent.locks.Lock)>	sig:$r13 = virtualinvoke $r17.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:34
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;76;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.getExplorerGuides?show_all=1&resolution=640x320;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:2617
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:0
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2617
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;77;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.getExplorerGuides?show_all=1&resolution=640x320;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:2617
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2617
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
D/dalvikvm(21125): GC_CONCURRENT freed 2158K, 21% free 9159K/11460K, paused 3ms+2ms, total 33ms
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:32
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = virtualinvoke $r7.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;78;%;<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>;%;$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r5.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r1)	timediff:719
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;79;%;<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.RequestSignatureInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:720
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:720
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:111
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;81;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://iphone-xml.booking.com/json/mobile.getExplorerGuides?show_all=1&resolution=640x320;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:15 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:2747
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = virtualinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:2748
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:1
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/Auth.Api.Credentials(  837): [CredentialsApiOperation] Error when executing the operation.
D/dalvikvm(21125): GC_FOR_ALLOC freed 506K, 21% free 9144K/11460K, paused 125ms, total 127ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 9.046MB for 30732-byte allocation
D/dalvikvm(21125): GC_FOR_ALLOC freed 14K, 21% free 9160K/11492K, paused 121ms, total 121ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 9.093MB for 63500-byte allocation
D/dalvikvm(21125): GC_FOR_ALLOC freed 30K, 21% free 9192K/11556K, paused 436ms, total 436ms
D/dalvikvm(21125): GC_FOR_ALLOC freed 1K, 21% free 9192K/11556K, paused 35ms, total 142ms
I/dalvikvm-heap(21125): Grow heap (frag case) to 9.186MB for 128064-byte allocation
D/CF      ( 2282): ALARM_SERVICE_START_TIME = 1521943758209
D/dalvikvm(21125): GC_FOR_ALLOC freed 62K, 21% free 9254K/11684K, paused 68ms, total 68ms
W/Settings(21369): Setting install_non_market_apps has moved from android.provider.Settings.Secure to android.provider.Settings.Global.
I/dalvikvm(21320): Could not find method android.content.Context.getNoBackupFilesDir, referenced from method sxy.<init>
W/dalvikvm(21320): VFY: unable to resolve virtual method 15699: Landroid/content/Context;.getNoBackupFilesDir ()Ljava/io/File;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x0028
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:144
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;80;%;<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:1701
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:$r10 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>	sig:$z0 = virtualinvoke $r6.<okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:7
I/System.out(21125): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = staticinvoke <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r8)	timediff:1
I/System.out(21125): body:<com.booking.common.http.SslPinningInterceptor: void doSslPinningReport(okhttp3.Request,okhttp3.Response)>	sig:virtualinvoke $r6.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r10, $r8)	timediff:8
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:1715
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:8
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:5
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:7
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:7
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;82;%;<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:8
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.GzipCompressionInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1754
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:1778
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:6
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:7
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:5
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:8
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:3
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:8
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:81
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:98
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:3
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;83;%;<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations&user_os=4.4.2&user_version=12.9-android&device_id=818c4503-494e-4555-a0f3-de4ad63b2fe9&network_type=wifi&display=large_undefined;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:6
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.CommonXmlArgumentsInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:1828
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2845
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:3
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:6
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:8
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:6
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;84;%;<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:7
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:2880
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:1
I/System.out(21125): body:<com.booking.common.http.XmlMobileTokenInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Response: java.lang.String header(java.lang.String)>("B-T-S")	timediff:1
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:2881
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:3
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:2
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;85;%;<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:5
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<com.booking.common.http.IdentificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:2898
I/System.out(21125): body:<com.booking.common.http.JoinChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r6.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:3331
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:3
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:2
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(21125): OkHttpP;%;86;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://iphone-xml.booking.com/json/mobile.getMyRecommendations?affiliate_id=337862&languagecode=en-us&algorithm=popular_destinations;%;GET;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(21125): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:4
I/System.out(21125): header:Server: nginx
I/System.out(21125): Date: Sun, 25 Mar 2018 02:09:17 GMT
I/System.out(21125): Content-Type: application/json; charset=utf-8
I/System.out(21125): Transfer-Encoding: chunked
I/System.out(21125): Vary: Accept-Encoding
I/System.out(21125): Server-Wallclock: 0
I/System.out(21125): X-XSS-Protection: 1; mode=block
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:3344
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = virtualinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:3368
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(21125): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:2
I/System.out(21125): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(21125): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
W/ConfigurationChimeraPro(  705): Got null configs for com.google.android.gms.common_auth
D/dalvikvm(21125): GC_FOR_ALLOC freed 829K, 17% free 9728K/11684K, paused 16ms, total 16ms
I/System.out(21125): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(21125): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(21125): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
W/dalvikvm(21320): VFY: unable to find class referenced in signature (Landroid/net/Network;)
I/dalvikvm(21320): Could not find method android.net.Network.openConnection, referenced from method rsp.a
W/dalvikvm(21320): VFY: unable to resolve virtual method 16338: Landroid/net/Network;.openConnection (Ljava/net/URL;)Ljava/net/URLConnection;
D/dalvikvm(21320): VFY: replacing opcode 0x6e at 0x00ab
I/AndroidRuntime(21097): VM exiting with result code 3.
I/UpdateService(21125): City guides list updated via XML call
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:8
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r3, $z0)	timediff:0
I/System.out(21125): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
