--------- beginning of /dev/log/main
I/Icing   (26586): Indexing F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0 from com.google.android.gms
I/Icing   (26586): Indexing done F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0
D/AndroidRuntime( 6640): 
D/AndroidRuntime( 6640): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime( 6640): CheckJNI is OFF
D/dalvikvm( 6640): Using executionMode 2
D/dalvikvm( 6640): Trying to load lib libjavacore.so 0x0
D/dalvikvm( 6640): Added shared lib libjavacore.so 0x0
D/dalvikvm( 6640): Trying to load lib libnativehelper.so 0x0
D/dalvikvm( 6640): Added shared lib libnativehelper.so 0x0
D/dalvikvm( 6640): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm( 6640): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack( 6640): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug( 6640): failed to load memtrack module: -2
D/AndroidRuntime( 6640): Calling main entry com.android.commands.monkey.Monkey
--------- beginning of /dev/log/system
W/BroadcastQueue(  346): Skipping deliver [background] BroadcastRecord{4b350f00 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4ab119e4 6640 (unknown name)/0/u-1 remote:4abaeb70}: process crashing
I/ActivityManager(  346): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.wonder/com.pegasus.ui.activities.LaunchActivity} from pid 6640
D/yeshen  (  670): launcher onpause
I/ActivityManager(  346): Start proc com.wonder for activity com.wonder/com.pegasus.ui.activities.LaunchActivity: pid=6650 uid=10107 gids={50107, 1028, 1015, 1023, 3003}
E/SurfaceFlinger(  172): glCheckFramebufferStatusOES error 36054
E/SurfaceFlinger(  172): got GL_FRAMEBUFFER_COMPLETE_OES error while taking screenshot
D/SurfaceFlinger(  172): setOrientation, mFbdev=0xb7d21d80, mFbDev->setOrientation=0xb69f9ce0, orientation=3
I/gralloc_nox(  172): setOrientation: orientation=3
I/InputReader(  346): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  346): Device reconfigured: id=1, name='seamless mouse', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  346): Device reconfigured: id=3, name='Android Input', size 1280x720, orientation 3, mode 1, display id 0
D/Tinker.DefaultAppLike(  670): onConfigurationChanged:{1.0 310mcc16mnc en_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.97}
I/InputReader(  346): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  346): Device reconfigured: id=8, name='VirtualBox USB Tablet', size 1280x720, orientation 3, mode 1, display id 0
D/PhoneStatusBar(  531): mSettingsPanelGravity = 55
I/ActivityManager(  346): Config changes=480 {1.0 310mcc16mnc en_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.97}
D/Sensors (  346): Client connection accepted (192)
W/NetworkManagementSocketTagger(  346): setKernelCountSet(10107, 1) failed with errno -13
D/dalvikvm(  531): GC_FOR_ALLOC freed 157K, 56% free 14529K/32344K, paused 3ms, total 3ms
I/dalvikvm-heap(  531): Grow heap (frag case) to 20.498MB for 6553612-byte allocation
I/dalvikvm( 6650): ignoring registerObject request in thread=1
I/dalvikvm( 6650): ignoring registerObject request in thread=1
D/dalvikvm(  531): GC_FOR_ALLOC freed 2K, 36% free 20926K/32344K, paused 4ms, total 4ms
V/LibraryLoader( 6650): Loading native libraries.
D/dalvikvm( 6650): Trying to load lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd3558
D/dalvikvm(  531): GC_CONCURRENT freed 0K, 36% free 20926K/32344K, paused 2ms+0ms, total 6ms
D/dalvikvm( 6650): Added shared lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd3558
D/dalvikvm( 6650): Trying to load lib /data/app-lib/com.wonder-1/libCoreMS.so 0x94fd3558
D/dalvikvm( 6650): Trying to load lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd3558
D/dalvikvm( 6650): Shared lib '/data/app-lib/com.wonder-1/libmoai.so' already loaded in same CL 0x94fd3558
D/dalvikvm( 6650): Added shared lib /data/app-lib/com.wonder-1/libCoreMS.so 0x94fd3558
W/EGL_emulation(  531): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm( 6650): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 6650): GC_CONCURRENT freed 298K, 11% free 2945K/3304K, paused 0ms+0ms, total 3ms
D/dalvikvm( 6650): GC_CONCURRENT freed 432K, 15% free 2971K/3464K, paused 0ms+1ms, total 4ms
D/dalvikvm( 6650): GC_FOR_ALLOC freed 259K, 15% free 3033K/3528K, paused 2ms, total 2ms
D/dalvikvm( 6650): GC_FOR_ALLOC freed 148K, 15% free 3070K/3584K, paused 1ms, total 1ms
I/dalvikvm-heap( 6650): Grow heap (frag case) to 3.133MB for 82420-byte allocation
D/dalvikvm( 6650): GC_FOR_ALLOC freed 53K, 16% free 3097K/3668K, paused 1ms, total 1ms
I/System.out( 6650): body:<com.pegasus.AppConfig: void <init>(android.content.Context,com.pegasus.utils.BuildConfigManager)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>("http://zinc2.mindsnacks.com")	timediff:0
I/System.out( 6650): <com.pegasus.AppConfig: void <init>(android.content.Context,com.pegasus.utils.BuildConfigManager)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>("http://zinc2.mindsnacks.com")###http://zinc2.mindsnacks.com
I/AppConfig( 6650): Using production accounts API.
I/FileHelper( 6650): Copying asset file: subjects/sat/subject.json
D/dalvikvm( 6650): GC_CONCURRENT freed 314K, 14% free 3168K/3668K, paused 2ms+0ms, total 3ms
I/FileHelper( 6650): Copying asset file: subjects/sat/content.db
I/FileHelper( 6650): Copying asset file: subjects/all-games.json
I/FileHelper( 6650): Copying asset file: subjects/sat/games.json
I/FileHelper( 6650): Copying asset file: subjects/sat/first_play_percentiles.json
I/FileHelper( 6650): Copying asset file: subjects/sat/bonus_names.json
I/FileHelper( 6650): Copying asset file: subjects/sat/game_durations.json
I/System.out( 6650): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out( 6650): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out( 6650): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out( 6650): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 368K, 12% free 3239K/3668K, paused 0ms+0ms, total 2ms
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:1
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out( 6650): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out( 6650): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out( 6650): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>($r2, null, null)	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:1
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 388K, 12% free 3322K/3768K, paused 0ms+2ms, total 3ms
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:13
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r8)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:15
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient: void <init>()>()	timediff:16
I/System.out( 6650): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6650): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out( 6650): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 236K, 10% free 3521K/3888K, paused 1ms+1ms, total 4ms
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:1
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:9
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:9
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient: void <init>()>()	timediff:10
I/System.out( 6650): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:1
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out( 6650): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:2
I/System.out( 6650): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 253K, 8% free 3652K/3968K, paused 1ms+0ms, total 3ms
I/PegasusApplication( 6650): Global object graph creation took 550ms
I/Fabric  ( 6650): Initializing Crashlytics 2.3.3.61
D/dalvikvm( 6650): GC_CONCURRENT freed 225K, 7% free 3919K/4204K, paused 3ms+1ms, total 5ms
I/PegasusApplication( 6650): Starting with build type: release
D/dalvikvm( 6650): GC_CONCURRENT freed 169K, 6% free 4256K/4492K, paused 2ms+0ms, total 5ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
W/DebugConnManager( 6650): getNetworkInfo() on networkType 1
W/DebugConnManager( 6650): getNetworkInfo() on networkType 7
W/DebugConnManager( 6650): getNetworkInfo() on networkType 0
I/AnalyticsIntegration( 6650): Update user agnostic traits: {analytics_version=71, zing_tag=481a604e1451d27cf683b5e1bbf9e0c924fcb369, account_age_in_days=0, account_creation=Fri Apr 13 15:56:55 MST 2018, device_is_tablet=false, createdAt=Fri Apr 13 15:56:55 MST 2018, last_login_client_os=Android, in_tests=false, debug=false}
I/System.out( 6650): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:3
I/System.out( 6650): <com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://cdn.segment.com/v1/projects/XhURX12e9v5Ve5AeO0lJbBvZAoWBqu9l/settings
D/dalvikvm( 6650): GC_CONCURRENT freed 243K, 6% free 4539K/4800K, paused 2ms+2ms, total 7ms
I/dalvikvm( 6650): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.zze.zzs
W/dalvikvm( 6650): VFY: unable to resolve virtual method 584: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 6650): VFY: replacing opcode 0x6e at 0x001a
I/AnalyticsIntegration( 6650): Initializing appsflyer: No user logged in
D/AppsFlyer_4.5.1( 6650): Build Number: 242
D/dalvikvm( 6650): GC_CONCURRENT freed 201K, 6% free 4797K/5068K, paused 1ms+0ms, total 4ms
I/dalvikvm( 6650): Could not find method com.google.android.gms.iid.InstanceID.getInstance, referenced from method com.appsflyer.AppsFlyerLib$2.run
W/dalvikvm( 6650): VFY: unable to resolve static method 25615: Lcom/google/android/gms/iid/InstanceID;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/iid/InstanceID;
D/dalvikvm( 6650): VFY: replacing opcode 0x71 at 0x0007
I/AppsFlyer_4.5.1( 6650): Please integrate Google Play Services in order to support uninstall feature
I/dalvikvm( 6650): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.WindowCallbackWrapper.onProvideKeyboardShortcuts
W/dalvikvm( 6650): VFY: unable to resolve interface method 14246: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm( 6650): VFY: replacing opcode 0x72 at 0x0002
W/dalvikvm( 6650): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm( 6650): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.WindowCallbackWrapper.onSearchRequested
W/dalvikvm( 6650): VFY: unable to resolve interface method 14248: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm( 6650): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm( 6650): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.WindowCallbackWrapper.onWindowStartingActionMode
W/dalvikvm( 6650): VFY: unable to resolve interface method 14252: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm( 6650): VFY: replacing opcode 0x72 at 0x0002
I/LaunchActivity( 6650): onCreate
D/dalvikvm( 6650): GC_FOR_ALLOC freed 425K, 9% free 5045K/5532K, paused 4ms, total 5ms
D/dalvikvm( 6650): GC_CONCURRENT freed 1041K, 28% free 4004K/5532K, paused 2ms+0ms, total 5ms
I/TweaksHelper( 6650): Checking experiments for identifier:c35091d9-688c-48bc-08e6-b51fb0fd95e0
D/dalvikvm( 6650): GC_CONCURRENT freed 397K, 26% free 4119K/5532K, paused 2ms+0ms, total 4ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/LaunchActivity( 6650): Start OnboardingActivity
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:1
I/System.out( 6650): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r3)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r7, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r6 = interfaceinvoke $r5.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Client-OS", "Android")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Build-Number", $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Marketing-Version", "3.14")	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/AdvertisingInformationUpdaterFactory( 6650): Got advertising ID: 3ae8f2f4-1b58-4ed6-816b-3ee6c7e3745e
I/OnboardingActivity( 6650): onCreate
D/dalvikvm( 6650): GC_CONCURRENT freed 368K, 24% free 4208K/5532K, paused 2ms+1ms, total 8ms
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:9
I/ActivityManager(  346): START u0 {flg=0x14000000 cmp=com.wonder/com.pegasus.ui.activities.OnboardingActivity} from pid 6650
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:9
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:9
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:9
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:9
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r10)	timediff:9
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r9, $r11)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r8, 0)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r7)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = interfaceinvoke $r9.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r8)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Version: java.lang.String userAgent()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r7)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:3
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:3
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:3
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:3
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:3
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r5, null, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>(2147483647, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6650): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:73
I/System.out( 6650): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(15000)	timediff:0
I/System.out( 6650): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(20000)	timediff:0
I/System.out( 6650): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 6650): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r2 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r6.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/PegasusZincRepoFactory( 6650): Clearing catalogs
I/WindowManager(  346): Screen frozen for +833ms due to Window{4b7a59f4 u0 Starting com.wonder}
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL: void <init>(java.net.URL,java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r1, $r5)	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 398K, 23% free 4310K/5532K, paused 0ms+2ms, total 5ms
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL$Serializer: com.google.gson.JsonElement serialize(com.mindsnacks.zinc.classes.data.SourceURL,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL: void <init>(java.net.URL,java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r1, $r5)	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL$Serializer: com.google.gson.JsonElement serialize(com.mindsnacks.zinc.classes.data.SourceURL,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<com.mindsnacks.zinc.classes.data.SourceURL$Serializer: com.google.gson.JsonElement serialize(com.mindsnacks.zinc.classes.data.SourceURL,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>	sig:$r6 = virtualinvoke $r5.<java.net.URL: java.lang.String toString()>()	timediff:0
I/PegasusZincRepoFactory( 6650): Initialized ZincRepo with root: /data/data/com.wonder/files/zinc
I/System.out( 6650): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:24
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r14 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r2)	timediff:24
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:25
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:25
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r4.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:25
I/System.out( 6650): body:<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.framed.FramedConnection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = virtualinvoke $r2.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 407K, 23% free 4287K/5532K, paused 2ms+0ms, total 5ms
I/System.out( 6650): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:5
I/System.out( 6650): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:5
I/BaseGameModule( 6650): Created game integration com.pegasus.data.games.GameIntegration@4a8bc6a8
I/System.out( 6650): body:<com.segment.analytics.Client: com.segment.analytics.Client$Connection fetchSettings()>	sig:$i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:85
I/System.out( 6650): body:<com.segment.analytics.Client: com.segment.analytics.Client$Connection createGetConnection(java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;0;%;<com.segment.analytics.Client: com.segment.analytics.Client$Connection createGetConnection(java.net.HttpURLConnection)>;%;$r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://cdn.segment.com/v1/projects/XhURX12e9v5Ve5AeO0lJbBvZAoWBqu9l/settings;%;false;%;318;%;public, max-age=3600;%;Not found;%;1016;%;Not found
I/System.out( 6650): body:<com.segment.analytics.Client$Connection: void close()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/GameView( 6650): Create GameView
I/AnalyticsIntegration( 6650): Received event: PretestScreen.
I/OnboardingActivity( 6650): onStart
I/OnboardingActivity( 6650): onPostCreate
I/AppsFlyer_4.5.1( 6650): onBecameForeground
I/OnboardingActivity( 6650): onResume
D/Facebook-publish( 6650): FacebookException: No attribution id returned from the Facebook application
I/AppsFlyer_4.5.1( 6650): AsendTrackingWithEvent from activity: com.pegasus.ui.activities.OnboardingActivity
I/AppsFlyer_4.5.1( 6650): ******* sendTrackingWithEvent: Launch
W/AppsFlyer_4.5.1( 6650): Permission android.permission.ACCESS_WIFI_STATE is missing in the AndroidManifest.xml
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:71
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r9.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r8, $r10, $i0)	timediff:71
I/System.out( 6650): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:73
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
E/ActivityThread( 6650): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
E/ActivityThread( 6650): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 369K, 16% free 4658K/5532K, paused 1ms+2ms, total 13ms
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:2
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6650): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)###https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/AppsFlyer_4.5.1( 6650): IMEI was not collected.
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:5
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r6.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:6
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/AppsFlyer_4.5.1( 6650): Android ID was not collected.
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6650): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)###https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:4
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:4
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:4
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r10.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r2, $r1, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r10)	timediff:10
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r6.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
E/ActivityThread( 6650): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/dalvikvm( 6650): GC_FOR_ALLOC freed 791K, 19% free 4492K/5532K, paused 6ms, total 6ms
I/System.out( 6650): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:6
I/System.out( 6650): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:6
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.wonder/settings?instance=40684c53d66f06f824f36d2305153b81b6e95647&source=1&build_version=1599&icon_hash=3496a7321b28bf9e072bb95d8bbba07a48a063ae&display_version=3.14
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6650): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.wonder/settings?instance=40684c53d66f06f824f36d2305153b81b6e95647&source=1&build_version=1599&icon_hash=3496a7321b28bf9e072bb95d8bbba07a48a063ae&display_version=3.14
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 447K, 18% free 4565K/5532K, paused 0ms+1ms, total 3ms
D/dalvikvm( 6650): GC_CONCURRENT freed 500K, 18% free 4586K/5532K, paused 0ms+1ms, total 6ms
D/dalvikvm(26586): GC_CONCURRENT freed 1669K, 44% free 8007K/14060K, paused 1ms+12ms, total 25ms
W/dalvikvm( 6650): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6650): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
E/dalvikvm( 6650): Could not find class 'com.appboy.services.AppboyWearableListenerService', referenced from method bo.app.cf.c
W/dalvikvm( 6650): VFY: unable to resolve const-class 2435 (Lcom/appboy/services/AppboyWearableListenerService;) in Lbo/app/cf;
D/dalvikvm( 6650): VFY: replacing opcode 0x1c at 0x003b
W/dalvikvm( 6650): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6650): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
E/dalvikvm( 6650): Could not find class 'com.appboy.services.AppboyWearableListenerService', referenced from method bo.app.cf.b
W/dalvikvm( 6650): VFY: unable to resolve const-class 2435 (Lcom/appboy/services/AppboyWearableListenerService;) in Lbo/app/cf;
D/dalvikvm( 6650): VFY: replacing opcode 0x1c at 0x001a
W/dalvikvm( 6650): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6650): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
D/dalvikvm( 6650): GC_CONCURRENT freed 395K, 16% free 4666K/5532K, paused 0ms+1ms, total 4ms
I/System.out( 6650): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:97
I/System.out( 6650): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;1;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android;%;false;%;89;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 6650): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6650): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6650): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)###https://graph.facebook.com/527727420675692/activities?access_token=&format=json&migration_bundle=fbsdk%3A20131203&sdk=android
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6650): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:105
I/System.out( 6650): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;2;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android;%;false;%;89;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 6650): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6650): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r12 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
I/System.out( 6650): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r10.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 495K, 16% free 4672K/5532K, paused 3ms+0ms, total 5ms
D/libEGL  ( 6650): loaded /system/lib/egl/libEGL_adreno.so
D/        ( 6650): HostConnection::get() New Host Connection established 0xb7b1ccc0, tid 6650
D/libEGL  ( 6650): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 6650): loaded /system/lib/egl/libGLESv2_adreno.so
W/EGL_emulation( 6650): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer( 6650): Enabling debug mode 0
D/        ( 6650): HostConnection::get() New Host Connection established 0xb7b267d0, tid 6695
I/System.out( 6650): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:55
I/System.out( 6650): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;3;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/527727420675692/activities?access_token=&format=json&migration_bundle=fbsdk%3A20131203&sdk=android;%;true;%;16;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 6650): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6650): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/ViewRootImpl( 6650): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13436347, downTime=13436347, deviceId=-1, source=0x101 }
I/AnalyticsIntegration( 6650): Appboy integration ready
I/System.out( 6650): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r8 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r9.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r8, $r7, $r4, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r14)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r6)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r6.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r15.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r3, $r13)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r12.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out( 6650): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:206
D/dalvikvm( 6650): GC_CONCURRENT freed 582K, 15% free 4720K/5532K, paused 1ms+1ms, total 24ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 10ms
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:206
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:290
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:290
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:320
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:320
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:320
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 8ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 13ms
D/AppsFlyer_4.5.1( 6650): AppsFlyer: first launch detected
I/AppsFlyer_4.5.1( 6650): AppsFlyer: first launch date: 2018-04-13_1556-0700
I/AppsFlyer_4.5.1( 6650): AppsFlyerLib.sendTrackingWithEvent
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): <com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>###specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1)###https://t.appsflyer.com/api/v4/androidevent?buildnumber=5.1&app_id=com.wonder
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r9 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>()	timediff:0
I/AppsFlyer_4.5.1( 6650): url: https://t.appsflyer.com/api/v4/androidevent?buildnumber=5.1&app_id=com.wonder
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r9 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>()	timediff:0
I/AppsFlyer_4.5.1( 6650): data: {"uid":"1523660211367-5557250606801523489","model":"SM-G955N","app_version_code":"1599","af_v":"bfc31cff53050be9071d5f40bd0ef477bb71da55","isGaidWithGps":"true","af_preinstalled":"false","deviceFingerPrintId":"ffffffff-f5c2-5ad1-0000-00005009f5e9","lang":"English","network":"WIFI","installDate":"2018-04-13_1556-0700","firstLaunchDate":"2018-04-13_1556-0700","deviceType":"user","carrier":"T-Mobile","date2":"2018-04-13_1556-0700","sdk":"19","advertiserIdEnabled":"true","iaecounter":"0","timepassedsincelastlaunch":"0","dkh":"keNR3rLm","date1":"2018-04-13_1556-0700","appsflyerKey":"ke****************SUDM","counter":"1","operator":"T-Mobile","af_events_api":"1","country":"US","product":"SM-G955N","isFirstCall":"true","af_sdks":"0000000000","af_timestamp":"1523660215236","device":"dream2lteks","brand":"samsung","lang_code":"en","app_version_name":"3.14","platformextension":"android_native","advertiserId":"3ae8f2f4-1b58-4ed6-816b-3ee6c7e3745e"}
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:11
I/System.out( 6650): body:<bo.app.fm: java.net.URI a(android.net.Uri)>	sig:specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r12 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:2
I/System.out( 6650): body:<bo.app.k: void b(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r5 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<bo.app.fm: java.net.URL a(java.net.URI)>	sig:$r2 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<bo.app.fm: java.net.URL a(java.net.URI)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): <bo.app.fm: java.net.URL a(java.net.URI)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://dev.appboy.com/api/v2/data
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0)	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r7)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
W/ViewRootImpl( 6650): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=3.0, y[0]=-1.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=29, eventTime=13437494, downTime=-1, deviceId=0, source=0x10004 }
I/System.out( 6650): body:<bo.app.fm: java.net.URI a(android.net.Uri)>	sig:specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<bo.app.k: void b(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r5 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<bo.app.fm: java.net.URL a(java.net.URI)>	sig:$r2 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<bo.app.fm: java.net.URL a(java.net.URI)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): <bo.app.fm: java.net.URL a(java.net.URI)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://dev.appboy.com/api/v2/data
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0)	timediff:0
I/System.out( 6650): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r7)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")	timediff:1
D/dalvikvm( 6650): GC_FOR_ALLOC freed 429K, 14% free 4784K/5532K, paused 6ms, total 6ms
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r15)	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/GameView( 6650): Surface Create
I/GameView( 6650): Surface Changed w: 720 h: 1242
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:33
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void connect()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 652K, 14% free 4800K/5532K, paused 1ms+2ms, total 8ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 6650): body:<bo.app.h: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:43
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void connect()>()	timediff:0
W/ViewRootImpl( 6650): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13437494, downTime=13437494, deviceId=-1, source=0x101 }
W/ContextImpl(  346): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/IInputConnectionWrapper(  670): showStatusIcon on inactive InputConnection
I/ActivityManager(  346): Displayed com.wonder/com.pegasus.ui.activities.OnboardingActivity: +405ms (total +1s254ms)
D/yeshen  (  670): launcher onstop
D/FirebaseApp(  670): Notifying background state change listeners.
D/Tinker.DefaultAppLike(  670): onTrimMemory level:20
W/DebugConnManager(  670): getNetworkInfo() on networkType 1
I/LaunchActivity( 6650): onDestroy
D/dalvikvm( 6650): GC_FOR_ALLOC freed 176K, 14% free 4782K/5532K, paused 5ms, total 5ms
I/dalvikvm-heap( 6650): Grow heap (frag case) to 4.780MB for 56388-byte allocation
D/dalvikvm( 6650): GC_FOR_ALLOC freed <1K, 14% free 4837K/5588K, paused 4ms, total 4ms
D/dalvikvm( 6650): GC_FOR_ALLOC freed 2K, 14% free 4835K/5588K, paused 3ms, total 3ms
I/dalvikvm-heap( 6650): Grow heap (frag case) to 5.384MB for 635808-byte allocation
D/dalvikvm( 6650): GC_FOR_ALLOC freed <1K, 13% free 5456K/6212K, paused 10ms, total 10ms
I/System.out( 6650): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/dalvikvm( 6650): Could not find method android.content.Context.getColorStateList, referenced from method android.support.v7.content.res.AppCompatResources.getColorStateList
W/dalvikvm( 6650): VFY: unable to resolve virtual method 418: Landroid/content/Context;.getColorStateList (I)Landroid/content/res/ColorStateList;
D/dalvikvm( 6650): VFY: replacing opcode 0x6e at 0x0006
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:109
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:109
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.HttpUrl)>	sig:specialinvoke $r5.<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl)>($r0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.HttpUrl)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r15)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:123
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:123
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:443
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:443
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 1K, 7% free 5800K/6212K, paused 1ms+3ms, total 12ms
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:3
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:3
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;4;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 218cd1a1-b9f0-4fa6-bd67-94411c026475
I/System.out( 6650): X-Runtime: 0.023871
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:450
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
V/PanelView(  531): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:8
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r3, $r4, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:460
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:460
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;5;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r11);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 218cd1a1-b9f0-4fa6-bd67-94411c026475
I/System.out( 6650): X-Runtime: 0.023871
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r11)	timediff:462
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r9, $r8, $r13)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r12.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r14.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r12.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:467
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r13.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r6, null, null)	timediff:467
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r2 = interfaceinvoke $r5.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:478
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:478
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;6;%;<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 218cd1a1-b9f0-4fa6-bd67-94411c026475
I/System.out( 6650): X-Runtime: 0.023871
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:480
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:480
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:480
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:4
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:5
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;7;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
W/EGL_emulation( 6650): eglSurfaceAttrib not implemented 3093 12436
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 218cd1a1-b9f0-4fa6-bd67-94411c026475
I/System.out( 6650): X-Runtime: 0.023871
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:488
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:489
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:353
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:2
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpE;%;8;%;<retrofit2.OkHttpCall: retrofit2.Response execute()>;%;$r8 = interfaceinvoke $r1.<okhttp3.Call: okhttp3.Response execute()>();%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 218cd1a1-b9f0-4fa6-bd67-94411c026475
I/System.out( 6650): X-Runtime: 0.023871
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response execute()>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Call: okhttp3.Response execute()>()	timediff:492
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r7 = virtualinvoke $r5.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 1283K, 20% free 5521K/6868K, paused 1ms+0ms, total 8ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>	sig:$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;9;%;<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>;%;$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.wonder/settings?instance=40684c53d66f06f824f36d2305153b81b6e95647&source=1&build_version=1599&icon_hash=3496a7321b28bf9e072bb95d8bbba07a48a063ae&display_version=3.14;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:7
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:7
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$l0 = virtualinvoke $r5.<okhttp3.ResponseBody: long contentLength()>()	timediff:7
I/System.out( 6650): body:<retrofit2.OkHttpCall$NoContentResponseBody: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:3
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r1 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:3
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okio.BufferedSource source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: java.io.InputStream byteStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6650): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r1.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.OkHttpClient access$900(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r10 = virtualinvoke $r4.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r9, $r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void endOfInput(boolean)>(1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)>($r0, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void close()>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>($r0, 100, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out( 6650): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out( 6650): body:<retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out( 6650): body:<retrofit2.Response: boolean isSuccessful()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/TweaksHelper( 6650): Experiments received: {purchase_overlay=no, hidden_listening=no, animated_pro_ios=yes, custom_training_session=yes, mandatory_trial=yes, activities_tab=no, achievements=no, training_reminder_copy=yes3, animated_pro_screen=yes, hidden_upsell_screen=no, swiper_pro=no, mandatory_trial_2=yes_mandatory, ios103_review_system=new_system_multiple, tiered_difficulty=no}
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.connection.StreamAllocation: void cancel()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: void cancel()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
W/InputMethodManagerService(  346): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4b12b558 attribute=null, token = android.os.BinderProxy@4a98e73c
I/OnboardingActivity( 6650): onPause
I/LaunchActivity( 6650): onCreate
I/ActivityManager(  346): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.wonder/com.pegasus.ui.activities.LaunchActivity} from pid 6640
I/ActivityManager(  346): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_MUSIC]}} from pid 346
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:146
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:1
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;10;%;<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>;%;$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://dev.appboy.com/api/v2/data;%;true;%;984;%;max-age=0, private, must-revalidate;%;Not found;%;Not found;%;Not found
I/System.out( 6650): body:<bo.app.h: org.json.JSONObject a(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6650): body:<bo.app.l: org.json.JSONObject a(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r9 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 726K, 17% free 5718K/6868K, paused 3ms+6ms, total 14ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/TweaksHelper( 6650): Checking experiments for identifier:c35091d9-688c-48bc-08e6-b51fb0fd95e0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:1
I/System.out( 6650): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r3)	timediff:1
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r7, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r6 = interfaceinvoke $r5.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Client-OS", "Android")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Build-Number", $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Marketing-Version", "3.14")	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r9, $r11)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r8, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r7)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = interfaceinvoke $r9.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r8)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Version: java.lang.String userAgent()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r7)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r5, null, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6650): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out( 6650): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:1
I/System.out( 6650): body:<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r7)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isClosed()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isOutputShutdown()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$z2 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)>($z1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out( 6650): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:1
D/dalvikvm( 6650): GC_CONCURRENT freed 1057K, 18% free 5639K/6868K, paused 1ms+1ms, total 5ms
I/LaunchActivity( 6650): Start OnboardingActivity
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:177
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out( 6650): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6650): URLConn;%;11;%;<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>;%;$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://dev.appboy.com/api/v2/data;%;true;%;49;%;max-age=0, private, must-revalidate;%;Not found;%;Not found;%;Not found
I/System.out( 6650): body:<bo.app.h: org.json.JSONObject a(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6650): body:<bo.app.l: org.json.JSONObject a(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r9 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/OnboardingActivity( 6650): onCreate
I/ActivityManager(  346): START u0 {flg=0x14000000 cmp=com.wonder/com.pegasus.ui.activities.OnboardingActivity} from pid 6650
W/ActivityManager(  346): Duplicate finish request for ActivityRecord{4ad14904 u0 com.wonder/com.pegasus.ui.activities.LaunchActivity t234 f}
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 12ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 16ms
I/BaseGameModule( 6650): Created game integration com.pegasus.data.games.GameIntegration@4a8eb3e8
I/GameView( 6650): Create GameView
I/AnalyticsIntegration( 6650): Received event: PretestScreen.
I/OnboardingActivity( 6650): onStart
I/OnboardingActivity( 6650): onPostCreate
I/OnboardingActivity( 6650): onResume
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
D/Facebook-publish( 6650): FacebookException: No attribution id returned from the Facebook application
I/System.out( 6650): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
E/ActivityThread( 6650): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/System.out( 6650): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
W/EGL_emulation( 6650): eglSurfaceAttrib not implemented 3093 12436
D/        ( 6650): HostConnection::get() New Host Connection established 0xb7e2b930, tid 6755
I/System.out( 6650): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:102
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:102
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.HttpUrl)>	sig:specialinvoke $r5.<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl)>($r0, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.HttpUrl)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r15)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
D/dalvikvm( 6650): GC_FOR_ALLOC freed 863K, 17% free 5730K/6868K, paused 9ms, total 9ms
D/dalvikvm( 6650): GC_CONCURRENT freed <1K, 17% free 5729K/6868K, paused 1ms+0ms, total 4ms
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:19
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:20
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:20
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:124
I/System.out( 6650): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:124
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:125
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:125
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
W/ViewRootImpl( 6650): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13437834, downTime=13437834, deviceId=-1, source=0x101 }
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:2
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:2
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:1
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;12;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:3
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 3a9b000b-5ed9-4f27-b4e9-9ed8394fb00d
I/System.out( 6650): X-Runtime: 0.025996
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:132
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:1
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r3, $r4, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r3)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:136
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:136
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;13;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r11);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 3a9b000b-5ed9-4f27-b4e9-9ed8394fb00d
I/System.out( 6650): X-Runtime: 0.025996
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r11)	timediff:140
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r9, $r8, $r13)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r12.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r14.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r12.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out( 6650): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:143
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r13.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r6, null, null)	timediff:143
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r2 = interfaceinvoke $r5.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:144
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:144
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;14;%;<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/GameView( 6650): Surface Create
I/GameView( 6650): Surface Changed w: 720 h: 1242
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:5
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 3a9b000b-5ed9-4f27-b4e9-9ed8394fb00d
I/System.out( 6650): X-Runtime: 0.025996
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:152
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:153
I/System.out( 6650): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:153
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpP;%;15;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:6
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 3a9b000b-5ed9-4f27-b4e9-9ed8394fb00d
I/System.out( 6650): X-Runtime: 0.025996
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:160
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:160
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm( 6650): GC_CONCURRENT freed 1035K, 18% free 5676K/6868K, paused 4ms+0ms, total 16ms
D/dalvikvm( 6650): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:7
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6650): OkHttpE;%;16;%;<retrofit2.OkHttpCall: retrofit2.Response execute()>;%;$r8 = interfaceinvoke $r1.<okhttp3.Call: okhttp3.Response execute()>();%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=c35091d9-688c-48bc-08e6-b51fb0fd95e0;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6650): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out( 6650): header:Server: Cowboy
I/System.out( 6650): Date: Fri, 13 Apr 2018 22:56:55 GMT
I/System.out( 6650): Connection: keep-alive
I/System.out( 6650): X-Frame-Options: SAMEORIGIN
I/System.out( 6650): X-Xss-Protection: 1; mode=block
I/System.out( 6650): X-Content-Type-Options: nosniff
I/System.out( 6650): Content-Type: application/json; charset=utf-8
I/System.out( 6650): Etag: W/"3f835e08243b39944794532427975780"
I/System.out( 6650): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6650): X-Request-Id: 3a9b000b-5ed9-4f27-b4e9-9ed8394fb00d
I/System.out( 6650): X-Runtime: 0.025996
I/System.out( 6650): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6650): Vary: Origin
I/System.out( 6650): Transfer-Encoding: chunked
I/System.out( 6650): Via: 1.1 vegur
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response execute()>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Call: okhttp3.Response execute()>()	timediff:171
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r7 = virtualinvoke $r5.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$l0 = virtualinvoke $r5.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$NoContentResponseBody: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r1 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okio.BufferedSource source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: java.io.InputStream byteStream()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:1
I/System.out( 6650): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r1.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:1
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out( 6650): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.OkHttpClient access$900(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r10 = virtualinvoke $r4.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r9, $r10)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out( 6650): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:3
I/System.out( 6650): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out( 6650): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out( 6650): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void endOfInput(boolean)>(1)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:3
I/System.out( 6650): body:<okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)>($r0, $i0, $r1)	timediff:3
I/System.out( 6650): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void close()>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>($r0, 100, $r1)	timediff:3
I/System.out( 6650): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:3
I/System.out( 6650): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:3
I/System.out( 6650): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:3
I/System.out( 6650): body:<retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out( 6650): body:<retrofit2.Response: boolean isSuccessful()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r16 = virtualinvoke $r13.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:423
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:235
W/ViewRootImpl( 6650): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13437878, downTime=13437878, deviceId=-1, source=0x101 }
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$i0 = virtualinvoke $r13.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:135
D/AppsFlyer_4.5.1( 6650): response code: 200
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/ActivityManager(  346): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.wonder/com.pegasus.ui.activities.LaunchActivity} from pid 6640
D/CoreMS  ( 6650): jni/../src/main/cpp/JNIMOAIIntegrationDelegate.h:127 [in virtual void CoreMS::JNIMOAIIntegrationDelegate::moaiIntegrationPrintedMessage(const std::string &, const std::string &, const std::string &, int)]: Loading properties file with name: 'properties' 	 
I/AppsFlyer_4.5.1( 6650): Calling server for attribution url: https://api.appsflyer.com/install_data/v3/com.wonder?devkey=ke****************SUDM&device_id=1523660211367-5557250606801523489
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r17)	timediff:0
I/System.out( 6650): <com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>###specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r17)###https://api.appsflyer.com/install_data/v3/com.wonder?devkey=keNR3rLmSJUhwBNfzcSUDM&device_id=1523660211367-5557250606801523489
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:$r20 = virtualinvoke $r19.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "close")	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:71
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6650): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:1
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6650): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
W/ContextImpl(  346): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out( 6650): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:71
I/TweaksHelper( 6650): Experiments received: {purchase_overlay=no, hidden_listening=no, animated_pro_ios=yes, custom_training_session=yes, mandatory_trial=yes, activities_tab=no, achievements=no, training_reminder_copy=yes3, animated_pro_screen=yes, hidden_upsell_screen=no, swiper_pro=no, mandatory_trial_2=yes_mandatory, ios103_review_system=new_system_multiple, tiered_difficulty=no}
I/System.out( 6650): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.connection.StreamAllocation: void cancel()>()	timediff:0
I/System.out( 6650): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>()	timediff:0
I/System.out( 6650): body:<retrofit2.OkHttpCall: void cancel()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
I/OnboardingActivity( 6650): onPause
D/dalvikvm( 6650): GC_CONCURRENT freed 896K, 18% free 5669K/6868K, paused 2ms+0ms, total 6ms
F/libc    ( 6650): Fatal signal 11 (SIGSEGV) at 0x0001020d (code=1), thread 6695 (Thread-981)
I/System.out( 6650): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void connect()>()	timediff:447
D/CoreMS  ( 6650): jni/../src/main/cpp/JNIMOAIIntegrationDelegate.h:127 [in virtual void CoreMS::JNIMOAIIntegrationDelegate::moaiIntegrationPrintedMessage(const std::string &, const std::string &, const std::string &, int)]: Loading properties file with name: 'properties' 	 
I/DEBUG   (11833): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
I/DEBUG   (11833): Build fingerprint: 'samsung/SM-G955N/dream2lteks:4.4.2/NRD90M/381180401:user/release-keys'
I/DEBUG   (11833): Revision: '0'
I/DEBUG   (11833): pid: 6650, tid: 6695, name: Thread-981  >>> com.wonder <<<
I/DEBUG   (11833): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0001020d
I/DEBUG   (11833):     eax 00001200  ebx b7c574a8  ecx 00001200  edx b7f57fb0
I/DEBUG   (11833):     esi 00010206  edi ffffffff
I/DEBUG   (11833):     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000043  xss 0000007b
I/DEBUG   (11833):     eip 181732d4  ebp 1a215000  esp 7c4836ec  flags 00210296
I/DEBUG   (11833): 
I/DEBUG   (11833): backtrace:
I/DEBUG   (11833):     #00  pc 001432d4  <unknown>
I/DEBUG   (11833): 
I/DEBUG   (11833): memory map around fault addr 0001020d:
I/DEBUG   (11833):     00008000-0000a000 rw- 
I/DEBUG   (11833):     (no map for address)
I/DEBUG   (11833):     04000000-14000000 --- 
I/BootReceiver(  346): Copying /data/tombstones/tombstone_07 to DropBox (SYSTEM_TOMBSTONE)
I/Process (  346): Sending signal. PID: 6650 SIG: 9
W/NetworkManagementSocketTagger(  346): setKernelCountSet(10107, 0) failed with errno -13
W/ActivityManager(  346): Force-killing crashed app com.wonder at watcher's request
W/ContextImpl(  346): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.am.ActivityManagerService.handleApplicationCrashInner:9670 com.android.server.am.NativeCrashListener$NativeCrashReporter.run:86 <bottom of call stack> <bottom of call stack> 
I/ActivityManager(  346): Process com.wonder (pid 6650) has died.
I/WindowState(  346): WIN DEATH: Window{4aee1d68 u0 com.wonder/com.pegasus.ui.activities.OnboardingActivity}
W/WindowManager(  346): Force-removing child win Window{4acd9c10 u0 SurfaceView} from container Window{4aee1d68 u0 com.wonder/com.pegasus.ui.activities.OnboardingActivity}
W/ActivityManager(  346): Force removing ActivityRecord{4ac79f80 u0 com.wonder/com.pegasus.ui.activities.OnboardingActivity t234}: app died, no saved state
W/InputDispatcher(  346): channel '4b4a9714 com.wonder/com.pegasus.ui.activities.OnboardingActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9
E/InputDispatcher(  346): channel '4b4a9714 com.wonder/com.pegasus.ui.activities.OnboardingActivity (server)' ~ Channel is unrecoverably broken and will be disposed!
W/InputDispatcher(  346): Attempted to unregister already unregistered input channel '4b4a9714 com.wonder/com.pegasus.ui.activities.OnboardingActivity (server)'
D/Zygote  (  173): Process 6650 terminated by signal (11)
W/WindowManager(  346): Failed looking up window
W/WindowManager(  346): java.lang.IllegalArgumentException: Requested window android.os.BinderProxy@4abb6130 does not exist
W/WindowManager(  346): 	at com.android.server.wm.WindowManagerService.windowForClientLocked(WindowManagerService.java:8096)
W/WindowManager(  346): 	at com.android.server.wm.WindowManagerService.windowForClientLocked(WindowManagerService.java:8087)
W/WindowManager(  346): 	at com.android.server.wm.WindowState$DeathRecipient.binderDied(WindowState.java:1051)
W/WindowManager(  346): 	at android.os.BinderProxy.sendDeathNotice(Binder.java:493)
W/WindowManager(  346): 	at dalvik.system.NativeStart.run(Native Method)
I/WindowState(  346): WIN DEATH: null
I/WindowState(  346): WIN DEATH: Window{4ae8aaa4 u0 SurfaceView}
I/WindowState(  346): WIN DEATH: Window{4b4a9714 u0 com.wonder/com.pegasus.ui.activities.OnboardingActivity}
I/ActivityManager(  346): Start proc com.wonder for activity com.wonder/com.pegasus.ui.activities.LaunchActivity: pid=6764 uid=10107 gids={50107, 1028, 1015, 1023, 3003}
W/NetworkManagementSocketTagger(  346): setKernelCountSet(10107, 1) failed with errno -13
I/dalvikvm( 6764): ignoring registerObject request in thread=1
I/dalvikvm( 6764): ignoring registerObject request in thread=1
V/LibraryLoader( 6764): Loading native libraries.
D/dalvikvm( 6764): Trying to load lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd40f8
D/dalvikvm( 6764): Added shared lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd40f8
D/dalvikvm( 6764): Trying to load lib /data/app-lib/com.wonder-1/libCoreMS.so 0x94fd40f8
D/dalvikvm( 6764): Trying to load lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd40f8
D/dalvikvm( 6764): Shared lib '/data/app-lib/com.wonder-1/libmoai.so' already loaded in same CL 0x94fd40f8
D/dalvikvm( 6764): Added shared lib /data/app-lib/com.wonder-1/libCoreMS.so 0x94fd40f8
D/dalvikvm( 6764): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 6764): GC_CONCURRENT freed 258K, 10% free 2915K/3236K, paused 2ms+0ms, total 4ms
D/dalvikvm( 6764): GC_CONCURRENT freed 304K, 11% free 3026K/3392K, paused 0ms+1ms, total 4ms
D/dalvikvm( 6764): GC_CONCURRENT freed 414K, 15% free 3002K/3504K, paused 2ms+0ms, total 3ms
D/dalvikvm( 6764): GC_FOR_ALLOC freed 211K, 13% free 3071K/3504K, paused 1ms, total 1ms
D/dalvikvm( 6764): GC_FOR_ALLOC freed 99K, 14% free 3098K/3588K, paused 2ms, total 2ms
I/System.out( 6764): body:<com.pegasus.AppConfig: void <init>(android.content.Context,com.pegasus.utils.BuildConfigManager)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>("http://zinc2.mindsnacks.com")	timediff:0
I/System.out( 6764): <com.pegasus.AppConfig: void <init>(android.content.Context,com.pegasus.utils.BuildConfigManager)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>("http://zinc2.mindsnacks.com")###http://zinc2.mindsnacks.com
I/AppConfig( 6764): Using production accounts API.
D/dalvikvm( 6764): GC_CONCURRENT freed 277K, 11% free 3221K/3588K, paused 2ms+1ms, total 4ms
I/System.out( 6764): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out( 6764): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out( 6764): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out( 6764): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 377K, 13% free 3250K/3704K, paused 2ms+1ms, total 4ms
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out( 6764): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out( 6764): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out( 6764): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:1
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>($r2, null, null)	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:2
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 285K, 10% free 3385K/3744K, paused 2ms+1ms, total 4ms
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:16
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r8)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:17
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient: void <init>()>()	timediff:19
I/System.out( 6764): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:1
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6764): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out( 6764): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 233K, 8% free 3535K/3832K, paused 2ms+1ms, total 4ms
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:9
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:9
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient: void <init>()>()	timediff:9
I/System.out( 6764): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6764): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out( 6764): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/PegasusApplication( 6764): Global object graph creation took 266ms
D/dalvikvm( 6764): GC_CONCURRENT freed 284K, 9% free 3732K/4076K, paused 1ms+1ms, total 4ms
I/Fabric  ( 6764): Initializing Crashlytics 2.3.3.61
I/PegasusApplication( 6764): Starting with build type: release
D/dalvikvm( 6764): GC_CONCURRENT freed 232K, 7% free 3895K/4188K, paused 1ms+1ms, total 4ms
W/DebugConnManager( 6764): getNetworkInfo() on networkType 1
W/DebugConnManager( 6764): getNetworkInfo() on networkType 7
W/DebugConnManager( 6764): getNetworkInfo() on networkType 0
I/dalvikvm( 6764): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.zze.zzs
W/dalvikvm( 6764): VFY: unable to resolve virtual method 584: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 6764): VFY: replacing opcode 0x6e at 0x001a
D/dalvikvm( 6764): GC_CONCURRENT freed 251K, 7% free 4081K/4388K, paused 1ms+2ms, total 5ms
I/AnalyticsIntegration( 6764): Update user agnostic traits: {analytics_version=71, zing_tag=481a604e1451d27cf683b5e1bbf9e0c924fcb369, account_age_in_days=0, account_creation=Fri Apr 13 15:56:56 MST 2018, device_is_tablet=false, createdAt=Fri Apr 13 15:56:56 MST 2018, last_login_client_os=Android, in_tests=false, debug=false}
I/System.out( 6764): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:5
I/System.out( 6764): <com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://cdn.segment.com/v1/projects/XhURX12e9v5Ve5AeO0lJbBvZAoWBqu9l/settings
D/dalvikvm( 6764): GC_CONCURRENT freed 159K, 4% free 4461K/4644K, paused 1ms+2ms, total 6ms
I/AnalyticsIntegration( 6764): Initializing appsflyer: No user logged in
D/dalvikvm( 6764): GC_CONCURRENT freed 474K, 10% free 4602K/5076K, paused 2ms+2ms, total 7ms
D/AppsFlyer_4.5.1( 6764): Build Number: 242
I/dalvikvm( 6764): Could not find method com.google.android.gms.iid.InstanceID.getInstance, referenced from method com.appsflyer.AppsFlyerLib$2.run
W/dalvikvm( 6764): VFY: unable to resolve static method 25615: Lcom/google/android/gms/iid/InstanceID;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/iid/InstanceID;
D/dalvikvm( 6764): VFY: replacing opcode 0x71 at 0x0007
I/AppsFlyer_4.5.1( 6764): Please integrate Google Play Services in order to support uninstall feature
I/dalvikvm( 6764): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.WindowCallbackWrapper.onProvideKeyboardShortcuts
W/dalvikvm( 6764): VFY: unable to resolve interface method 14246: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm( 6764): VFY: replacing opcode 0x72 at 0x0002
W/dalvikvm( 6764): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm( 6764): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.WindowCallbackWrapper.onSearchRequested
W/dalvikvm( 6764): VFY: unable to resolve interface method 14248: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm( 6764): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm( 6764): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.WindowCallbackWrapper.onWindowStartingActionMode
W/dalvikvm( 6764): VFY: unable to resolve interface method 14252: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm( 6764): VFY: replacing opcode 0x72 at 0x0002
D/dalvikvm( 6764): GC_CONCURRENT freed 296K, 7% free 4911K/5272K, paused 2ms+0ms, total 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/LaunchActivity( 6764): onCreate
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm( 6764): GC_CONCURRENT freed 506K, 11% free 5109K/5680K, paused 1ms+1ms, total 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 3ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/TweaksHelper( 6764): Checking experiments for identifier:e5cfb334-1e38-45b1-59e6-ba243304d6ff
I/LaunchActivity( 6764): Start OnboardingActivity
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/ActivityManager(  346): START u0 {flg=0x14000000 cmp=com.wonder/com.pegasus.ui.activities.OnboardingActivity} from pid 6764
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:1
I/System.out( 6764): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r3)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r7, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:1
I/System.out( 6764): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r6 = interfaceinvoke $r5.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r4)	timediff:3
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Client-OS", "Android")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Build-Number", $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Marketing-Version", "3.14")	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 632K, 12% free 5252K/5948K, paused 1ms+1ms, total 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/OnboardingActivity( 6764): onCreate
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:1
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:6
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r10)	timediff:6
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6764): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r9, $r11)	timediff:2
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r8, 0)	timediff:1
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r7)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = interfaceinvoke $r9.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r8)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Version: java.lang.String userAgent()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r7)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r5, null, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>(2147483647, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r2 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r6.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)	timediff:0
I/System.out( 6764): <com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)###http://zinc2.mindsnacks.com/com.wonder.moai_games/
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: java.lang.String extractCatalogID(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)	timediff:0
I/System.out( 6764): <com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)###http://zinc2.mindsnacks.com/com.wonder.content3/
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: java.lang.String extractCatalogID(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:2
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r14 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r2)	timediff:2
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:2
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:2
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r4.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:2
I/System.out( 6764): body:<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.framed.FramedConnection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: void <init>(java.net.URL,java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r1, $r5)	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<java.net.URL: boolean equals(java.lang.Object)>($r5)	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: void <init>(java.net.URL,java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r1, $r5)	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6764): body:<com.mindsnacks.zinc.classes.data.SourceURL: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<java.net.URL: boolean equals(java.lang.Object)>($r5)	timediff:1
I/PegasusZincRepoFactory( 6764): Initialized ZincRepo with root: /data/data/com.wonder/files/zinc
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:2
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:2
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = virtualinvoke $r2.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 1673K, 29% free 4322K/6060K, paused 2ms+3ms, total 12ms
I/System.out( 6764): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:106
I/System.out( 6764): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(15000)	timediff:0
I/System.out( 6764): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(20000)	timediff:0
I/System.out( 6764): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:1
I/System.out( 6764): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:40
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/BaseGameModule( 6764): Created game integration com.pegasus.data.games.GameIntegration@4a971864
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:70
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r9.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r8, $r10, $i0)	timediff:70
I/System.out( 6764): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6764): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:73
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/WearableService(  643): Wearable Services stopping
D/dalvikvm( 6764): GC_CONCURRENT freed 345K, 25% free 4549K/6060K, paused 2ms+2ms, total 9ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r6.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r5)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:1
I/System.out( 6764): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/GameView( 6764): Create GameView
I/System.out( 6764): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:1
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r10.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r2, $r1, $z0)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r10)	timediff:7
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r6.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:1
I/AnalyticsIntegration( 6764): Received event: PretestScreen.
I/OnboardingActivity( 6764): onStart
I/OnboardingActivity( 6764): onPostCreate
I/AppsFlyer_4.5.1( 6764): onBecameForeground
I/OnboardingActivity( 6764): onResume
I/AppsFlyer_4.5.1( 6764): AsendTrackingWithEvent from activity: com.pegasus.ui.activities.OnboardingActivity
I/AppsFlyer_4.5.1( 6764): ******* sendTrackingWithEvent: Launch
D/dalvikvm( 6764): GC_CONCURRENT freed 610K, 27% free 4436K/6060K, paused 1ms+2ms, total 7ms
W/AppsFlyer_4.5.1( 6764): Permission android.permission.ACCESS_WIFI_STATE is missing in the AndroidManifest.xml
I/AppsFlyer_4.5.1( 6764): IMEI was not collected.
I/AppsFlyer_4.5.1( 6764): Android ID was not collected.
D/Facebook-publish( 6764): FacebookException: No attribution id returned from the Facebook application
E/ActivityThread( 6764): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
E/ActivityThread( 6764): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/System.out( 6764): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6764): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)###https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android
I/System.out( 6764): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6764): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 6764): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 6764): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 6764): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/AppsFlyer_4.5.1( 6764): AppsFlyer: first launch date: 2018-04-13_1556-0700
I/AppsFlyer_4.5.1( 6764): AppsFlyerLib.sendTrackingWithEvent
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): <com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>###specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1)###https://t.appsflyer.com/api/v4/androidevent?buildnumber=5.1&app_id=com.wonder
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r9 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>()	timediff:0
I/AppsFlyer_4.5.1( 6764): url: https://t.appsflyer.com/api/v4/androidevent?buildnumber=5.1&app_id=com.wonder
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r9 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>()	timediff:0
I/AppsFlyer_4.5.1( 6764): data: {"uid":"1523660211367-5557250606801523489","model":"SM-G955N","app_version_code":"1599","af_v":"622f583f233e0890ad2afe17e6c999825ff8141b","isGaidWithGps":"true","af_preinstalled":"false","deviceFingerPrintId":"ffffffff-f5c2-5ad1-0000-00005009f5e9","lang":"English","network":"WIFI","installDate":"2018-04-13_1556-0700","firstLaunchDate":"2018-04-13_1556-0700","deviceType":"user","carrier":"T-Mobile","date2":"2018-04-13_1556-0700","sdk":"19","advertiserIdEnabled":"true","iaecounter":"0","timepassedsincelastlaunch":"1","dkh":"keNR3rLm","date1":"2018-04-13_1556-0700","appsflyerKey":"ke****************SUDM","counter":"2","operator":"T-Mobile","af_events_api":"1","country":"US","product":"SM-G955N","isFirstCall":"false","af_timestamp":"1523660217155","device":"dream2lteks","brand":"samsung","lang_code":"en","app_version_name":"3.14","platformextension":"android_native","advertiserId":"3ae8f2f4-1b58-4ed6-816b-3ee6c7e3745e"}
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r12 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")	timediff:0
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r15)	timediff:0
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out( 6764): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/AdvertisingInformationUpdaterFactory( 6764): Got advertising ID: 3ae8f2f4-1b58-4ed6-816b-3ee6c7e3745e
E/ActivityThread( 6764): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/System.out( 6764): body:<com.segment.analytics.Client: com.segment.analytics.Client$Connection fetchSettings()>	sig:$i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:84
I/System.out( 6764): body:<com.segment.analytics.Client: com.segment.analytics.Client$Connection createGetConnection(java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): URLConn;%;0;%;<com.segment.analytics.Client: com.segment.analytics.Client$Connection createGetConnection(java.net.HttpURLConnection)>;%;$r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://cdn.segment.com/v1/projects/XhURX12e9v5Ve5AeO0lJbBvZAoWBqu9l/settings;%;false;%;318;%;public, max-age=3600;%;Not found;%;1018;%;Not found
I/System.out( 6764): body:<com.segment.analytics.Client$Connection: void close()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 397K, 25% free 4550K/6060K, paused 2ms+1ms, total 5ms
D/libEGL  ( 6764): loaded /system/lib/egl/libEGL_adreno.so
D/dalvikvm( 6764): GC_CONCURRENT freed 470K, 26% free 4543K/6060K, paused 1ms+0ms, total 5ms
D/        ( 6764): HostConnection::get() New Host Connection established 0xb7f03600, tid 6764
D/libEGL  ( 6764): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 6764): loaded /system/lib/egl/libGLESv2_adreno.so
I/System.out( 6764): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:77
I/System.out( 6764): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6764): URLConn;%;1;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android;%;false;%;89;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 6764): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6764): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 524K, 25% free 4558K/6060K, paused 0ms+1ms, total 5ms
W/EGL_emulation( 6764): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer( 6764): Enabling debug mode 0
D/        ( 6764): HostConnection::get() New Host Connection established 0xb7b20760, tid 6817
W/ViewRootImpl( 6764): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13438151, downTime=13438151, deviceId=-1, source=0x101 }
I/GameView( 6764): Surface Create
I/GameView( 6764): Surface Changed w: 720 h: 1242
I/System.out( 6764): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r8 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:1
I/System.out( 6764): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r9.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r8, $r7, $r4, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r14)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r6)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r6.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r15.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r5 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r3, $r13)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r12.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out( 6764): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6764): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:173
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:173
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:246
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:249
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:254
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i1, $i2, $i3, $z1, $z0)	timediff:254
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r8, $r11)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:254
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:239
I/ActivityManager(  346): Displayed com.wonder/com.pegasus.ui.activities.OnboardingActivity: +306ms (total +1s700ms)
W/ViewRootImpl( 6764): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13439348, downTime=13439348, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6764): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13439415, downTime=13439415, deviceId=-1, source=0x101 }
D/dalvikvm( 6764): GC_CONCURRENT freed 464K, 24% free 4654K/6060K, paused 2ms+1ms, total 10ms
I/ActivityManager(  346): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.wonder/com.pegasus.ui.activities.LaunchActivity} from pid 6640
D/dalvikvm( 6764): GC_FOR_ALLOC freed 154K, 23% free 4667K/6060K, paused 5ms, total 5ms
W/dalvikvm( 6764): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6764): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
E/dalvikvm( 6764): Could not find class 'com.appboy.services.AppboyWearableListenerService', referenced from method bo.app.cf.c
W/dalvikvm( 6764): VFY: unable to resolve const-class 2435 (Lcom/appboy/services/AppboyWearableListenerService;) in Lbo/app/cf;
D/dalvikvm( 6764): VFY: replacing opcode 0x1c at 0x003b
W/dalvikvm( 6764): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6764): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
E/dalvikvm( 6764): Could not find class 'com.appboy.services.AppboyWearableListenerService', referenced from method bo.app.cf.b
W/dalvikvm( 6764): VFY: unable to resolve const-class 2435 (Lcom/appboy/services/AppboyWearableListenerService;) in Lbo/app/cf;
D/dalvikvm( 6764): VFY: replacing opcode 0x1c at 0x001a
W/dalvikvm( 6764): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6764): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
D/dalvikvm( 6764): GC_FOR_ALLOC freed 169K, 23% free 4702K/6060K, paused 3ms, total 3ms
D/dalvikvm( 6764): GC_FOR_ALLOC freed 2K, 21% free 4789K/6060K, paused 3ms, total 3ms
I/dalvikvm-heap( 6764): Grow heap (frag case) to 4.749MB for 16396-byte allocation
D/dalvikvm( 6764): GC_FOR_ALLOC freed <1K, 21% free 4804K/6080K, paused 4ms, total 4ms
D/dalvikvm( 6764): GC_FOR_ALLOC freed 44K, 22% free 4762K/6080K, paused 4ms, total 4ms
D/dalvikvm( 6764): GC_FOR_ALLOC freed 105K, 23% free 4728K/6080K, paused 3ms, total 3ms
D/dalvikvm( 6764): GC_FOR_ALLOC freed 114K, 22% free 4744K/6080K, paused 4ms, total 4ms
I/System.out( 6764): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
D/dalvikvm( 6764): GC_FOR_ALLOC freed 115K, 22% free 4748K/6080K, paused 2ms, total 2ms
I/AnalyticsIntegration( 6764): Appboy integration ready
W/Binder  (  631): Caught a RuntimeException from the binder stub implementation.
W/Binder  (  631): java.lang.NullPointerException
W/Binder  (  631): 	at android.inputmethodservice.IInputMethodWrapper.setSessionEnabled(IInputMethodWrapper.java:280)
W/Binder  (  631): 	at com.android.internal.view.IInputMethod$Stub.onTransact(IInputMethod.java:129)
W/Binder  (  631): 	at android.os.Binder.execTransact(Binder.java:404)
W/Binder  (  631): 	at dalvik.system.NativeStart.run(Native Method)
W/ContextImpl(  346): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/InputMethodManagerService(  346): Got RemoteException sending setActive(false) notification to pid 6650 uid 10107
I/OnboardingActivity( 6764): onPause
W/InputManager(  346): Input event injection from pid 6640 failed.
W/InputManager(  346): Input event injection from pid 6640 failed.
W/ViewRootImpl( 6764): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-4.0, y[0]=4.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=13439422, downTime=-1, deviceId=0, source=0x10004 }
I/System.out( 6764): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:131
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:131
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.HttpUrl)>	sig:specialinvoke $r5.<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl)>($r0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.HttpUrl)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r15)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:9
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:142
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:142
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:396
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:396
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 579K, 21% free 4825K/6080K, paused 2ms+2ms, total 14ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:5
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/LaunchActivity( 6764): onCreate
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): OkHttpP;%;2;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=e5cfb334-1e38-45b1-59e6-ba243304d6ff;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out( 6764): header:Server: Cowboy
I/System.out( 6764): Date: Fri, 13 Apr 2018 22:56:56 GMT
I/System.out( 6764): Connection: keep-alive
I/System.out( 6764): X-Frame-Options: SAMEORIGIN
I/System.out( 6764): X-Xss-Protection: 1; mode=block
I/System.out( 6764): X-Content-Type-Options: nosniff
I/System.out( 6764): Content-Type: application/json; charset=utf-8
I/System.out( 6764): Etag: W/"8711ede9820afb0d6bac0f141a50868c"
I/System.out( 6764): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6764): X-Request-Id: 866d6c48-c790-444d-90a8-c884ce4540a7
I/System.out( 6764): X-Runtime: 0.044441
I/System.out( 6764): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6764): Vary: Origin
I/System.out( 6764): Transfer-Encoding: chunked
I/System.out( 6764): Via: 1.1 vegur
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:405
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:1
I/System.out( 6764): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:6
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:6
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:6
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r3, $r4, $r5)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:412
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:412
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): OkHttpP;%;3;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r11);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=e5cfb334-1e38-45b1-59e6-ba243304d6ff;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:5
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:6
I/System.out( 6764): header:Server: Cowboy
I/System.out( 6764): Date: Fri, 13 Apr 2018 22:56:56 GMT
I/System.out( 6764): Connection: keep-alive
I/System.out( 6764): X-Frame-Options: SAMEORIGIN
I/System.out( 6764): X-Xss-Protection: 1; mode=block
I/System.out( 6764): X-Content-Type-Options: nosniff
I/System.out( 6764): Content-Type: application/json; charset=utf-8
I/System.out( 6764): Etag: W/"8711ede9820afb0d6bac0f141a50868c"
I/System.out( 6764): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6764): X-Request-Id: 866d6c48-c790-444d-90a8-c884ce4540a7
I/System.out( 6764): X-Runtime: 0.044441
I/System.out( 6764): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6764): Vary: Origin
I/System.out( 6764): Transfer-Encoding: chunked
I/System.out( 6764): Via: 1.1 vegur
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r11)	timediff:419
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r9, $r8, $r13)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 671K, 21% free 4836K/6080K, paused 5ms+0ms, total 12ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:6
I/System.out( 6764): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:7
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r12.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:7
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r14.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r12.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:429
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r13.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r6, null, null)	timediff:429
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r2 = interfaceinvoke $r5.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r5)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:437
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:437
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:2
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): OkHttpP;%;4;%;<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=e5cfb334-1e38-45b1-59e6-ba243304d6ff;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out( 6764): header:Server: Cowboy
I/System.out( 6764): Date: Fri, 13 Apr 2018 22:56:56 GMT
I/System.out( 6764): Connection: keep-alive
I/System.out( 6764): X-Frame-Options: SAMEORIGIN
I/System.out( 6764): X-Xss-Protection: 1; mode=block
I/System.out( 6764): X-Content-Type-Options: nosniff
I/System.out( 6764): Content-Type: application/json; charset=utf-8
I/System.out( 6764): Etag: W/"8711ede9820afb0d6bac0f141a50868c"
I/System.out( 6764): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6764): X-Request-Id: 866d6c48-c790-444d-90a8-c884ce4540a7
I/System.out( 6764): X-Runtime: 0.044441
I/System.out( 6764): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6764): Vary: Origin
I/System.out( 6764): Transfer-Encoding: chunked
I/System.out( 6764): Via: 1.1 vegur
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:444
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r5)	timediff:445
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:445
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): OkHttpP;%;5;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=e5cfb334-1e38-45b1-59e6-ba243304d6ff;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out( 6764): header:Server: Cowboy
I/System.out( 6764): Date: Fri, 13 Apr 2018 22:56:56 GMT
I/System.out( 6764): Connection: keep-alive
I/System.out( 6764): X-Frame-Options: SAMEORIGIN
I/System.out( 6764): X-Xss-Protection: 1; mode=block
I/System.out( 6764): X-Content-Type-Options: nosniff
I/System.out( 6764): Content-Type: application/json; charset=utf-8
I/System.out( 6764): Etag: W/"8711ede9820afb0d6bac0f141a50868c"
I/System.out( 6764): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6764): X-Request-Id: 866d6c48-c790-444d-90a8-c884ce4540a7
I/System.out( 6764): X-Runtime: 0.044441
I/System.out( 6764): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6764): Vary: Origin
I/System.out( 6764): Transfer-Encoding: chunked
I/System.out( 6764): Via: 1.1 vegur
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:447
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:447
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm( 6764): GC_CONCURRENT freed 630K, 20% free 4891K/6080K, paused 2ms+0ms, total 8ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:9
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): OkHttpE;%;6;%;<retrofit2.OkHttpCall: retrofit2.Response execute()>;%;$r8 = interfaceinvoke $r1.<okhttp3.Call: okhttp3.Response execute()>();%;https://accounts.elevateapp.net/api/experiments?experiments_identifier=e5cfb334-1e38-45b1-59e6-ba243304d6ff;%;GET;%;[];%;[max-age=0, private, must-revalidate];%;[];%;[];%;[];%;
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/TweaksHelper( 6764): Checking experiments for identifier:e5cfb334-1e38-45b1-59e6-ba243304d6ff
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out( 6764): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out( 6764): header:Server: Cowboy
I/System.out( 6764): Date: Fri, 13 Apr 2018 22:56:56 GMT
I/System.out( 6764): Connection: keep-alive
I/System.out( 6764): X-Frame-Options: SAMEORIGIN
I/System.out( 6764): X-Xss-Protection: 1; mode=block
I/System.out( 6764): X-Content-Type-Options: nosniff
I/System.out( 6764): Content-Type: application/json; charset=utf-8
I/System.out( 6764): Etag: W/"8711ede9820afb0d6bac0f141a50868c"
I/System.out( 6764): Cache-Control: max-age=0, private, must-revalidate
I/System.out( 6764): X-Request-Id: 866d6c48-c790-444d-90a8-c884ce4540a7
I/System.out( 6764): X-Runtime: 0.044441
I/System.out( 6764): Strict-Transport-Security: max-age=15552000; includeSubDomains
I/System.out( 6764): Vary: Origin
I/System.out( 6764): Transfer-Encoding: chunked
I/System.out( 6764): Via: 1.1 vegur
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response execute()>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Call: okhttp3.Response execute()>()	timediff:459
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/LaunchActivity( 6764): Start OnboardingActivity
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r9 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r7, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r9.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r6 = interfaceinvoke $r5.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r8 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r7.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r8)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r10 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r9.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r10)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out( 6764): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r1.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Client-OS", "Android")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Build-Number", $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Marketing-Version", "3.14")	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/LaunchActivity( 6764): onDestroy
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<com.pegasus.modules.base.AndroidModule$12: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out( 6764): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r10)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6764): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r9, $r11)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:3
I/System.out( 6764): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r8, 0)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r7)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:1
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = interfaceinvoke $r9.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r8)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.Version: java.lang.String userAgent()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r7)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r5, null, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out( 6764): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r5.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r6, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:3
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i3 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r2 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r6.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r14 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:1
I/ActivityManager(  346): START u0 {flg=0x14000000 cmp=com.wonder/com.pegasus.ui.activities.OnboardingActivity} from pid 6764
W/ActivityManager(  346): Duplicate finish request for ActivityRecord{4b1745d8 u0 com.wonder/com.pegasus.ui.activities.LaunchActivity t234 f}
D/dalvikvm( 6764): GC_CONCURRENT freed 738K, 21% free 4857K/6080K, paused 2ms+2ms, total 8ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:6
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:6
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r4.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2)	timediff:0
I/System.out( 6764): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:6
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r8.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r10 = virtualinvoke $r2.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 5ms
D/dalvikvm( 6764): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/OnboardingActivity( 6764): onCreate
I/System.out( 6764): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:6
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r7 = virtualinvoke $r5.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:7
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$l0 = virtualinvoke $r5.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall$NoContentResponseBody: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:2
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:2
I/System.out( 6764): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:2
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r1 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:2
I/System.out( 6764): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okio.BufferedSource source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: java.io.InputStream byteStream()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6764): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out( 6764): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r1.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.OkHttpClient access$900(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r8 = virtualinvoke $r7.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r10 = virtualinvoke $r4.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r9, $r10)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out( 6764): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void endOfInput(boolean)>(1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out( 6764): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)>($r0, $i0, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void close()>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>($r0, 100, $r1)	timediff:0
I/System.out( 6764): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out( 6764): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out( 6764): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out( 6764): body:<retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out( 6764): body:<retrofit2.Response: boolean isSuccessful()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/MoaiLog ( 6764): stack traceback:
I/MoaiLog ( 6764): PANIC: unprotected error in call to Lua API (attempt to index a nil value)
I/ActivityManager(  346): Process com.wonder (pid 6764) has died.
W/NetworkManagementSocketTagger(  346): setKernelCountSet(10107, 0) failed with errno -13
W/InputDispatcher(  346): channel '4ac04160 com.wonder/com.pegasus.ui.activities.OnboardingActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9
E/InputDispatcher(  346): channel '4ac04160 com.wonder/com.pegasus.ui.activities.OnboardingActivity (server)' ~ Channel is unrecoverably broken and will be disposed!
W/InputDispatcher(  346): Attempted to unregister already unregistered input channel '4ac04160 com.wonder/com.pegasus.ui.activities.OnboardingActivity (server)'
D/Zygote  (  173): Process 6764 exited cleanly (1)
I/WindowState(  346): WIN DEATH: Window{4ac04160 u0 com.wonder/com.pegasus.ui.activities.OnboardingActivity}
I/WindowState(  346): WIN DEATH: Window{4ae501cc u0 SurfaceView}
W/NetworkManagementSocketTagger(  346): setKernelCountSet(10107, 1) failed with errno -13
I/dalvikvm( 6854): ignoring registerObject request in thread=1
I/dalvikvm( 6854): ignoring registerObject request in thread=1
I/ActivityManager(  346): Start proc com.wonder for activity com.wonder/com.pegasus.ui.activities.OnboardingActivity: pid=6854 uid=10107 gids={50107, 1028, 1015, 1023, 3003}
V/LibraryLoader( 6854): Loading native libraries.
D/dalvikvm( 6854): Trying to load lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd4e20
D/dalvikvm( 6854): Added shared lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd4e20
D/dalvikvm( 6854): Trying to load lib /data/app-lib/com.wonder-1/libCoreMS.so 0x94fd4e20
D/dalvikvm( 6854): Trying to load lib /data/app-lib/com.wonder-1/libmoai.so 0x94fd4e20
D/dalvikvm( 6854): Shared lib '/data/app-lib/com.wonder-1/libmoai.so' already loaded in same CL 0x94fd4e20
D/dalvikvm( 6854): Added shared lib /data/app-lib/com.wonder-1/libCoreMS.so 0x94fd4e20
D/dalvikvm( 6854): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm( 6854): GC_CONCURRENT freed 305K, 12% free 2940K/3304K, paused 2ms+2ms, total 5ms
D/dalvikvm( 6854): GC_CONCURRENT freed 379K, 13% free 3022K/3464K, paused 2ms+2ms, total 5ms
D/dalvikvm( 6854): GC_FOR_ALLOC freed 324K, 16% free 3025K/3592K, paused 2ms, total 2ms
D/dalvikvm( 6854): GC_FOR_ALLOC freed 183K, 15% free 3071K/3592K, paused 1ms, total 1ms
I/dalvikvm-heap( 6854): Grow heap (frag case) to 3.134MB for 82420-byte allocation
D/dalvikvm( 6854): GC_FOR_ALLOC freed <1K, 15% free 3151K/3676K, paused 4ms, total 4ms
D/dalvikvm( 6854): GC_FOR_ALLOC freed 99K, 16% free 3097K/3676K, paused 2ms, total 2ms
I/System.out( 6854): body:<com.pegasus.AppConfig: void <init>(android.content.Context,com.pegasus.utils.BuildConfigManager)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>("http://zinc2.mindsnacks.com")	timediff:0
I/System.out( 6854): <com.pegasus.AppConfig: void <init>(android.content.Context,com.pegasus.utils.BuildConfigManager)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>("http://zinc2.mindsnacks.com")###http://zinc2.mindsnacks.com
I/AppConfig( 6854): Using production accounts API.
D/dalvikvm( 6854): GC_CONCURRENT freed 277K, 13% free 3205K/3676K, paused 2ms+0ms, total 4ms
I/System.out( 6854): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out( 6854): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out( 6854): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out( 6854): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:2
D/dalvikvm( 6854): GC_CONCURRENT freed 451K, 14% free 3258K/3780K, paused 0ms+1ms, total 4ms
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:2
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:1
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out( 6854): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out( 6854): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out( 6854): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6854): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>($r2, null, null)	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out( 6854): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:1
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:1
I/System.out( 6854): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:2
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm( 6854): GC_FOR_ALLOC freed 211K, 12% free 3385K/3820K, paused 4ms, total 4ms
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:14
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r8)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r2.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r8)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r2, $r3, $r4)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:15
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient: void <init>()>()	timediff:17
I/System.out( 6854): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r6)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6854): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
D/dalvikvm( 6854): GC_CONCURRENT freed 234K, 10% free 3538K/3900K, paused 2ms+1ms, total 6ms
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:8
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r9.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r7, $r8)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out( 6854): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:8
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient: void <init>()>()	timediff:8
I/System.out( 6854): body:<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>(okhttp3.OkHttpClient)>($r0)	timediff:0
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>()	timediff:0
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r6)	timediff:1
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<com.pegasus.modules.base.AndroidModule: java.lang.Object createRestService(java.lang.String,java.lang.Class,java.lang.String)>	sig:$r4 = virtualinvoke $r5.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out( 6854): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out( 6854): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/PegasusApplication( 6854): Global object graph creation took 276ms
D/dalvikvm( 6854): GC_CONCURRENT freed 287K, 9% free 3744K/4092K, paused 2ms+2ms, total 5ms
D/dalvikvm( 6854): GC_CONCURRENT freed 184K, 6% free 4064K/4316K, paused 1ms+1ms, total 6ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/Fabric  ( 6854): Initializing Crashlytics 2.3.3.61
D/dalvikvm( 6854): GC_CONCURRENT freed 202K, 6% free 4361K/4636K, paused 1ms+0ms, total 4ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/PegasusApplication( 6854): Starting with build type: release
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 6854): GC_CONCURRENT freed 202K, 6% free 4559K/4832K, paused 1ms+0ms, total 3ms
W/DebugConnManager( 6854): getNetworkInfo() on networkType 1
W/DebugConnManager( 6854): getNetworkInfo() on networkType 7
W/DebugConnManager( 6854): getNetworkInfo() on networkType 0
I/dalvikvm( 6854): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.zze.zzs
W/dalvikvm( 6854): VFY: unable to resolve virtual method 584: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm( 6854): VFY: replacing opcode 0x6e at 0x001a
I/AnalyticsIntegration( 6854): Update user agnostic traits: {analytics_version=71, zing_tag=481a604e1451d27cf683b5e1bbf9e0c924fcb369, account_age_in_days=0, account_creation=Fri Apr 13 15:56:57 MST 2018, device_is_tablet=false, createdAt=Fri Apr 13 15:56:57 MST 2018, last_login_client_os=Android, in_tests=false, debug=false}
D/dalvikvm( 6854): GC_CONCURRENT freed 379K, 9% free 4769K/5212K, paused 1ms+1ms, total 4ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm( 6854): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out( 6854): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out( 6854): <com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://cdn.segment.com/v1/projects/XhURX12e9v5Ve5AeO0lJbBvZAoWBqu9l/settings
I/AnalyticsIntegration( 6854): Initializing appsflyer: No user logged in
D/AppsFlyer_4.5.1( 6854): Build Number: 242
I/dalvikvm( 6854): Could not find method com.google.android.gms.iid.InstanceID.getInstance, referenced from method com.appsflyer.AppsFlyerLib$2.run
W/dalvikvm( 6854): VFY: unable to resolve static method 25615: Lcom/google/android/gms/iid/InstanceID;.getInstance (Landroid/content/Context;)Lcom/google/android/gms/iid/InstanceID;
D/dalvikvm( 6854): VFY: replacing opcode 0x71 at 0x0007
I/AppsFlyer_4.5.1( 6854): Please integrate Google Play Services in order to support uninstall feature
D/dalvikvm( 6854): GC_CONCURRENT freed 334K, 7% free 5103K/5432K, paused 0ms+2ms, total 6ms
I/dalvikvm( 6854): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.WindowCallbackWrapper.onProvideKeyboardShortcuts
W/dalvikvm( 6854): VFY: unable to resolve interface method 14246: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm( 6854): VFY: replacing opcode 0x72 at 0x0002
W/dalvikvm( 6854): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm( 6854): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.WindowCallbackWrapper.onSearchRequested
W/dalvikvm( 6854): VFY: unable to resolve interface method 14248: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm( 6854): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm( 6854): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.WindowCallbackWrapper.onWindowStartingActionMode
W/dalvikvm( 6854): VFY: unable to resolve interface method 14252: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm( 6854): VFY: replacing opcode 0x72 at 0x0002
I/OnboardingActivity( 6854): onCreate
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out( 6854): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
D/dalvikvm( 6854): GC_CONCURRENT freed 1688K, 30% free 4170K/5884K, paused 2ms+2ms, total 7ms
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)	timediff:0
I/System.out( 6854): <com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)###http://zinc2.mindsnacks.com/com.wonder.moai_games/
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: java.lang.String extractCatalogID(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)	timediff:0
I/System.out( 6854): <com.mindsnacks.zinc.classes.data.SourceURL$Deserializer: com.mindsnacks.zinc.classes.data.SourceURL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7)###http://zinc2.mindsnacks.com/com.wonder.content3/
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: java.lang.String extractCatalogID(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: void <init>(java.net.URL,java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r1, $r5)	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<java.net.URL: boolean equals(java.lang.Object)>($r5)	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: void <init>(java.net.URL,java.lang.String)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r1, $r5)	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: int hashCode()>	sig:$i0 = virtualinvoke $r1.<java.net.URL: int hashCode()>()	timediff:0
I/System.out( 6854): body:<com.mindsnacks.zinc.classes.data.SourceURL: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<java.net.URL: boolean equals(java.lang.Object)>($r5)	timediff:0
I/PegasusZincRepoFactory( 6854): Initialized ZincRepo with root: /data/data/com.wonder/files/zinc
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:15
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6854): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:56
I/System.out( 6854): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(15000)	timediff:0
I/System.out( 6854): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(20000)	timediff:0
I/System.out( 6854): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:0
I/System.out( 6854): body:<com.segment.analytics.ConnectionFactory: java.net.HttpURLConnection openConnection(java.lang.String)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1)	timediff:0
D/dalvikvm( 6854): GC_CONCURRENT freed 373K, 29% free 4181K/5884K, paused 1ms+2ms, total 4ms
I/BaseGameModule( 6854): Created game integration com.pegasus.data.games.GameIntegration@4a8de2ac
I/GameView( 6854): Create GameView
I/AnalyticsIntegration( 6854): Received event: PretestScreen.
I/OnboardingActivity( 6854): onStart
I/OnboardingActivity( 6854): onPostCreate
I/AppsFlyer_4.5.1( 6854): onBecameForeground
I/OnboardingActivity( 6854): onResume
D/dalvikvm( 6854): GC_CONCURRENT freed 360K, 28% free 4237K/5884K, paused 2ms+0ms, total 5ms
I/System.out( 6854): body:<com.segment.analytics.Client: com.segment.analytics.Client$Connection fetchSettings()>	sig:$i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:53
I/System.out( 6854): body:<com.segment.analytics.Client: com.segment.analytics.Client$Connection createGetConnection(java.net.HttpURLConnection)>	sig:$r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): URLConn;%;0;%;<com.segment.analytics.Client: com.segment.analytics.Client$Connection createGetConnection(java.net.HttpURLConnection)>;%;$r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://cdn.segment.com/v1/projects/XhURX12e9v5Ve5AeO0lJbBvZAoWBqu9l/settings;%;false;%;318;%;public, max-age=3600;%;Not found;%;1019;%;Not found
I/System.out( 6854): body:<com.segment.analytics.Client$Connection: void close()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/AppsFlyer_4.5.1( 6854): AsendTrackingWithEvent from activity: com.pegasus.ui.activities.OnboardingActivity
I/AppsFlyer_4.5.1( 6854): ******* sendTrackingWithEvent: Launch
W/AppsFlyer_4.5.1( 6854): Permission android.permission.ACCESS_WIFI_STATE is missing in the AndroidManifest.xml
D/Facebook-publish( 6854): FacebookException: No attribution id returned from the Facebook application
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6854): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)###https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/AdvertisingInformationUpdaterFactory( 6854): Got advertising ID: 3ae8f2f4-1b58-4ed6-816b-3ee6c7e3745e
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
E/ActivityThread( 6854): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
E/ActivityThread( 6854): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
I/AppsFlyer_4.5.1( 6854): IMEI was not collected.
I/AppsFlyer_4.5.1( 6854): Android ID was not collected.
E/ActivityThread( 6854): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/dalvikvm( 6854): GC_CONCURRENT freed 340K, 26% free 4404K/5884K, paused 1ms+0ms, total 6ms
D/dalvikvm( 6854): GC_CONCURRENT freed 453K, 25% free 4453K/5884K, paused 0ms+0ms, total 3ms
W/dalvikvm( 6854): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6854): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
E/dalvikvm( 6854): Could not find class 'com.appboy.services.AppboyWearableListenerService', referenced from method bo.app.cf.c
W/dalvikvm( 6854): VFY: unable to resolve const-class 2435 (Lcom/appboy/services/AppboyWearableListenerService;) in Lbo/app/cf;
D/dalvikvm( 6854): VFY: replacing opcode 0x1c at 0x003b
W/dalvikvm( 6854): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6854): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
E/dalvikvm( 6854): Could not find class 'com.appboy.services.AppboyWearableListenerService', referenced from method bo.app.cf.b
W/dalvikvm( 6854): VFY: unable to resolve const-class 2435 (Lcom/appboy/services/AppboyWearableListenerService;) in Lbo/app/cf;
D/dalvikvm( 6854): VFY: replacing opcode 0x1c at 0x001a
W/dalvikvm( 6854): Unable to resolve superclass of Lcom/appboy/services/AppboyWearableListenerService; (4214)
W/dalvikvm( 6854): Link of class 'Lcom/appboy/services/AppboyWearableListenerService;' failed
D/dalvikvm( 6854): GC_FOR_ALLOC freed 372K, 24% free 4516K/5884K, paused 3ms, total 3ms
D/dalvikvm( 6854): GC_CONCURRENT freed 45K, 24% free 4506K/5884K, paused 1ms+0ms, total 3ms
I/System.out( 6854): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out( 6854): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): URLConn;%;1;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/527727420675692?fields=supports_attribution%2Csupports_implicit_sdk_logging&format=json&sdk=android;%;false;%;89;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 6854): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6854): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)	timediff:0
I/System.out( 6854): <com.facebook.Request: java.net.HttpURLConnection toHttpConnection(com.facebook.RequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r6)###https://graph.facebook.com/527727420675692/activities?access_token=&format=json&migration_bundle=fbsdk%3A20131203&sdk=android
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r12 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:10
I/System.out( 6854): body:<com.facebook.Request: void serializeToUrlConnection(com.facebook.RequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r10.<java.net.URL: java.lang.String getPath()>()	timediff:0
D/libEGL  ( 6854): loaded /system/lib/egl/libEGL_adreno.so
D/dalvikvm( 6854): GC_CONCURRENT freed 424K, 24% free 4529K/5884K, paused 1ms+0ms, total 4ms
D/        ( 6854): HostConnection::get() New Host Connection established 0xb7b6a770, tid 6854
D/libEGL  ( 6854): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  ( 6854): loaded /system/lib/egl/libGLESv2_adreno.so
W/EGL_emulation( 6854): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer( 6854): Enabling debug mode 0
D/        ( 6854): HostConnection::get() New Host Connection established 0xb7b25450, tid 6903
I/System.out( 6854): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:49
I/System.out( 6854): body:<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>	sig:$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): URLConn;%;2;%;<com.facebook.Response: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.RequestBatch)>;%;$r11 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/527727420675692/activities?access_token=&format=json&migration_bundle=fbsdk%3A20131203&sdk=android;%;true;%;16;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out( 6854): body:<com.facebook.Response: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out( 6854): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/AppsFlyer_4.5.1( 6854): AppsFlyer: first launch date: 2018-04-13_1556-0700
I/AppsFlyer_4.5.1( 6854): AppsFlyerLib.sendTrackingWithEvent
W/ViewRootImpl( 6854): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13439503, downTime=13439503, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6854): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13440293, downTime=13440293, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6854): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13440295, downTime=13440295, deviceId=-1, source=0x101 }
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out( 6854): <com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>###specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1)###https://t.appsflyer.com/api/v4/androidevent?buildnumber=5.1&app_id=com.wonder
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r9 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>()	timediff:0
I/AppsFlyer_4.5.1( 6854): url: https://t.appsflyer.com/api/v4/androidevent?buildnumber=5.1&app_id=com.wonder
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void sendRequestToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r9 = virtualinvoke $r7.<java.net.URL: java.lang.String toString()>()	timediff:0
I/AppsFlyer_4.5.1( 6854): data: {"uid":"1523660211367-5557250606801523489","model":"SM-G955N","app_version_code":"1599","af_v":"e6a6770cca01bdf10a559070ca92c8ff09988d06","isGaidWithGps":"true","af_preinstalled":"false","deviceFingerPrintId":"ffffffff-f5c2-5ad1-0000-00005009f5e9","lang":"English","network":"WIFI","installDate":"2018-04-13_1556-0700","firstLaunchDate":"2018-04-13_1556-0700","deviceType":"user","carrier":"T-Mobile","date2":"2018-04-13_1556-0700","sdk":"19","advertiserIdEnabled":"true","iaecounter":"0","timepassedsincelastlaunch":"1","dkh":"keNR3rLm","date1":"2018-04-13_1556-0700","appsflyerKey":"ke****************SUDM","counter":"3","operator":"T-Mobile","af_events_api":"1","country":"US","product":"SM-G955N","isFirstCall":"false","af_timestamp":"1523660218087","device":"dream2lteks","brand":"samsung","lang_code":"en","app_version_name":"3.14","platformextension":"android_native","advertiserId":"3ae8f2f4-1b58-4ed6-816b-3ee6c7e3745e"}
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r12 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST")	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r15)	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json")	timediff:1
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
W/ViewRootImpl( 6854): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13440297, downTime=13440297, deviceId=-1, source=0x101 }
I/GameView( 6854): Surface Create
I/GameView( 6854): Surface Changed w: 720 h: 1242
D/dalvikvm( 6854): GC_CONCURRENT freed 436K, 23% free 4548K/5884K, paused 2ms+0ms, total 5ms
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:254
W/ViewRootImpl( 6854): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_B, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13440302, downTime=13440302, deviceId=-1, source=0x101 }
W/ViewRootImpl( 6854): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BACK, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=13440302, downTime=13440302, deviceId=-1, source=0x101 }
W/ContextImpl(  346): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/Binder  (  631): Caught a RuntimeException from the binder stub implementation.
W/Binder  (  631): java.lang.NullPointerException
W/Binder  (  631): 	at android.inputmethodservice.IInputMethodWrapper.setSessionEnabled(IInputMethodWrapper.java:280)
W/Binder  (  631): 	at com.android.internal.view.IInputMethod$Stub.onTransact(IInputMethod.java:129)
W/Binder  (  631): 	at android.os.Binder.execTransact(Binder.java:404)
W/Binder  (  631): 	at dalvik.system.NativeStart.run(Native Method)
W/InputMethodManagerService(  346): Got RemoteException sending setActive(false) notification to pid 6764 uid 10107
I/AnalyticsIntegration( 6854): Appboy integration ready
I/ActivityManager(  346): Displayed com.wonder/com.pegasus.ui.activities.OnboardingActivity: +807ms (total +882ms)
W/ViewRootImpl( 6854): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=0.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=13440383, downTime=-1, deviceId=0, source=0x10004 }
I/System.out( 6854): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:72
D/CoreMS  ( 6854): jni/../src/main/cpp/JNIMOAIIntegrationDelegate.h:127 [in virtual void CoreMS::JNIMOAIIntegrationDelegate::moaiIntegrationPrintedMessage(const std::string &, const std::string &, const std::string &, int)]: Loading properties file with name: 'properties' 	 
D/dalvikvm( 6854): GC_CONCURRENT freed 455K, 23% free 4558K/5884K, paused 0ms+1ms, total 5ms
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$r16 = virtualinvoke $r13.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:411
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:$i0 = virtualinvoke $r13.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:133
D/AppsFlyer_4.5.1( 6854): response code: 200
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib: void callServer(java.net.URL,java.lang.String,java.lang.String,java.lang.ref.WeakReference,java.lang.String,boolean)>	sig:virtualinvoke $r13.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/AppsFlyer_4.5.1( 6854): Calling server for attribution url: https://api.appsflyer.com/install_data/v3/com.wonder?devkey=ke****************SUDM&device_id=1523660211367-5557250606801523489
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r17)	timediff:0
I/System.out( 6854): <com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>###specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r17)###https://api.appsflyer.com/install_data/v3/com.wonder?devkey=keNR3rLmSJUhwBNfzcSUDM&device_id=1523660211367-5557250606801523489
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:$r20 = virtualinvoke $r19.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET")	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000)	timediff:0
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "close")	timediff:0
I/GameIntegration( 6854): Game event produced: MOAIGameEvent{type = 'class com.pegasus.corems.moai_events.MOAIGameStartEvent', value=''}
D/dalvikvm(  346): GC_EXPLICIT freed 6469K, 60% free 16714K/41212K, paused 0ms+2ms, total 17ms
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void connect()>()	timediff:424
I/AnalyticsIntegration( 6854): Received game event: OnboardingPitchCard1Screen.
I/InputDispatcher(  346): Application is not responding: AppWindowToken{4aa59908 token=Token{4a9d5138 ActivityRecord{4a95285c u0 com.vphone.launcher/.Launcher t1}}}.  It has been 5008.0ms since event, 5006.4ms since wait started.  Reason: Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.
I/Process (  346): Sending signal. PID: 670 SIG: 3
I/dalvikvm(  670): threadid=3: reacting to signal 3
I/WindowManager(  346): Input event dispatching timed out sending to application AppWindowToken{4aa59908 token=Token{4a9d5138 ActivityRecord{4a95285c u0 com.vphone.launcher/.Launcher t1}}}.  Reason: Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.
W/InputManager(  346): Input event injection from pid 6640 timed out.
I/dalvikvm(  670): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  346): Sending signal. PID: 346 SIG: 3
I/dalvikvm(  346): threadid=3: reacting to signal 3
I/dalvikvm(  346): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  346): Sending signal. PID: 657 SIG: 3
I/dalvikvm(  657): threadid=3: reacting to signal 3
I/dalvikvm(  657): Wrote stack traces to '/data/anr/traces.txt'
I/Process (  346): Sending signal. PID: 531 SIG: 3
I/dalvikvm(  531): threadid=3: reacting to signal 3
I/dalvikvm(  531): Wrote stack traces to '/data/anr/traces.txt'
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:$i1 = virtualinvoke $r21.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:5152
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:$r22 = virtualinvoke $r21.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): URLConn;%;3;%;<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>;%;$r22 = virtualinvoke $r21.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://api.appsflyer.com/install_data/v3/com.wonder?devkey=keNR3rLmSJUhwBNfzcSUDM&device_id=1523660211367-5557250606801523489;%;false;%;57;%;Not found;%;Not found;%;Not found;%;Not found
D/AppsFlyer_4.5.1( 6854): iscache=null caching conversion data
I/AnalyticsIntegration( 6854): Received event: ReceivedConversionDataAction.
I/System.out( 6854): body:<com.appsflyer.AppsFlyerLib$AttributionIdFetcher: void run()>	sig:virtualinvoke $r21.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm( 6854): GC_CONCURRENT freed 482K, 23% free 4566K/5884K, paused 2ms+1ms, total 13ms
D/dalvikvm(  346): GC_EXPLICIT freed 1148K, 60% free 16710K/41212K, paused 1ms+1ms, total 19ms
I/Process (  346): Sending signal. PID: 6854 SIG: 3
I/dalvikvm( 6854): threadid=3: reacting to signal 3
I/dalvikvm( 6854): Wrote stack traces to '/data/anr/traces.txt'
E/ActivityManager(  346): ANR in com.vphone.launcher (com.vphone.launcher/.Launcher)
E/ActivityManager(  346): PID: 670
E/ActivityManager(  346): Reason: Input dispatching timed out (Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.)
E/ActivityManager(  346): Load: 2.18 / 1.45 / 0.67
E/ActivityManager(  346): CPU usage from 6142ms to 0ms ago:
E/ActivityManager(  346):   3.5% 172/surfaceflinger: 0.3% user + 3.2% kernel
E/ActivityManager(  346):   2.1% 346/system_server: 1.3% user + 0.8% kernel / faults: 1166 minor
E/ActivityManager(  346):   1.3% 6638/logcat: 0% user + 1.3% kernel
E/ActivityManager(  346):   0.4% 74/adbd: 0.1% user + 0.3% kernel
E/ActivityManager(  346):   0.4% 175/mediaserver: 0.1% user + 0.3% kernel
E/ActivityManager(  346):   0.3% 531/com.android.systemui: 0% user + 0.3% kernel
E/ActivityManager(  346):   0% 173/zygote: 0% user + 0% kernel / faults: 183 minor
E/ActivityManager(  346):   0.1% 26586/com.google.android.gms: 0% user + 0.1% kernel
E/ActivityManager(  346):  +0% 6854/com.wonder: 0% user + 0% kernel
E/ActivityManager(  346): 35% TOTAL: 23% user + 10% kernel + 0% iowait + 0.4% softirq
E/ActivityManager(  346): CPU usage from 1081ms to 1584ms later:
E/ActivityManager(  346):   28% 6854/com.wonder: 24% user + 4% kernel / faults: 8 minor
E/ActivityManager(  346):     28% 6903/Thread-992: 24% user + 4% kernel
E/ActivityManager(  346):   3.5% 172/surfaceflinger: 0% user + 3.5% kernel
E/ActivityManager(  346):     1.7% 172/surfaceflinger: 0% user + 1.7% kernel
E/ActivityManager(  346): 22% TOTAL: 15% user + 6.4% kernel
D/dalvikvm( 6854): GC_CONCURRENT freed 23K, 23% free 4544K/5884K, paused 2ms+1ms, total 8ms
W/ActivityManager(  346): Launch timeout has expired, giving up wake lock!
D/AndroidRuntime( 6942): 
D/AndroidRuntime( 6942): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime( 6942): CheckJNI is OFF
D/dalvikvm( 6942): Using executionMode 2
D/dalvikvm( 6942): Trying to load lib libjavacore.so 0x0
D/dalvikvm( 6942): Added shared lib libjavacore.so 0x0
D/dalvikvm( 6942): Trying to load lib libnativehelper.so 0x0
D/dalvikvm( 6942): Added shared lib libnativehelper.so 0x0
D/dalvikvm( 6942): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm( 6942): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack( 6942): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug( 6942): failed to load memtrack module: -2
D/AndroidRuntime( 6942): Calling main entry com.android.commands.am.Am
D/AndroidRuntime( 6942): Shutting down VM
E/cutils-trace( 6942): Error opening trace file: No such file or directory (2)
D/dalvikvm( 6942): GC_CONCURRENT freed 96K, 15% free 588K/688K, paused 0ms+0ms, total 1ms
W/ActivityManager(  346): Unable to start service Intent { flg=0x20 cmp=com.gau.go.launcherex.gowidget.weatherwidget/com.gau.go.launcherex.gowidget.weather.service.NotifyService (has extras) } U=0: not found
I/System.out( 6854): body:<bo.app.fm: java.net.URI a(android.net.Uri)>	sig:specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6854): body:<bo.app.k: void b(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r5 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<bo.app.fm: java.net.URL a(java.net.URI)>	sig:$r2 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<bo.app.fm: java.net.URL a(java.net.URI)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out( 6854): <bo.app.fm: java.net.URL a(java.net.URI)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://dev.appboy.com/api/v2/data
I/System.out( 6854): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out( 6854): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out( 6854): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out( 6854): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0)	timediff:0
I/System.out( 6854): body:<bo.app.h: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r7)	timediff:0
I/System.out( 6854): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6854): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6854): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6854): body:<bo.app.h: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out( 6854): body:<bo.app.h: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/InputDispatcher(  346): Application is not responding: AppWindowToken{4aa59908 token=Token{4a9d5138 ActivityRecord{4a95285c u0 com.vphone.launcher/.Launcher t1}}}.  It has been 5011.4ms since event, 5006.0ms since wait started.  Reason: Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.
I/WindowManager(  346): Input event dispatching timed out sending to application AppWindowToken{4aa59908 token=Token{4a9d5138 ActivityRecord{4a95285c u0 com.vphone.launcher/.Launcher t1}}}.  Reason: Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.
W/InputManager(  346): Input event injection from pid 6640 timed out.
I/ActivityManager(  346): Skipping duplicate ANR: ProcessRecord{4aa726a8 670:com.vphone.launcher/1000} Input dispatching timed out (Waiting because no window has focus but there is a focused application that may eventually add a window when it finishes starting up.)
I/System.out( 6854): body:<bo.app.h: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:27
I/System.out( 6854): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void connect()>()	timediff:0
I/System.out( 6854): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:102
I/System.out( 6854): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out( 6854): body:<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:1
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out( 6854): URLConn;%;4;%;<bo.app.h: java.io.InputStream a(java.net.HttpURLConnection)>;%;$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://dev.appboy.com/api/v2/data;%;true;%;49;%;max-age=0, private, must-revalidate;%;Not found;%;Not found;%;Not found
I/System.out( 6854): body:<bo.app.h: org.json.JSONObject a(java.net.URL,org.json.JSONObject,java.util.Map,bo.app.ah)>	sig:virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out( 6854): body:<bo.app.l: org.json.JSONObject a(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r9 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
D/dalvikvm( 6854): GC_CONCURRENT freed 510K, 23% free 4584K/5884K, paused 1ms+1ms, total 12ms
I/AndroidRuntime( 6640): VM exiting with result code 196.
