--------- beginning of /dev/log/system
I/ActivityManager(  479): Resuming delayed broadcast
I/ActivityManager(  479): Delay finish: com.google.android.partnersetup/.RlzPingBroadcastReceiver
I/ActivityManager(  479): Resuming delayed broadcast
I/ActivityManager(  479): Delay finish: com.google.android.partnersetup/.AppInstalledReceiver
--------- beginning of /dev/log/main
I/Finsky  (  940): [1] com.google.android.finsky.wear.WearSupportService.onStartCommand(21): Starting WearSupportService for auto_install
I/Finsky  (  940): [1] com.google.android.finsky.wear.ar.a(80): Connecting to wearable; initiated by: com.google.android.finsky.wear.WearSupportService
I/Finsky  (  940): [1] com.google.android.finsky.wear.WearSupportService.onStartCommand(21): Starting WearSupportService for send_installed_apps
I/ActivityManager(  479): Resuming delayed broadcast
I/Finsky  (  940): [1] com.google.android.finsky.externalreferrer.c.run(11): Package state data is missing for com.lezhin.comics
D/WearableService(  654): onGetService - Wear is not available on this device.
E/Finsky  (  940): [1] com.google.android.finsky.wear.au.a(3): onConnectionFailed: ConnectionResult{statusCode=API_UNAVAILABLE, resolution=null, message=null}
W/Finsky  (  940): [1] com.google.android.finsky.wear.cd.run(12): Dropping command=auto_install due to Gms not connected
I/Finsky  (  940): [1] com.google.android.finsky.wear.WearSupportService.b(67): Stopping WearSupportService
W/Finsky  (  940): [1] com.google.android.finsky.wear.cd.run(12): Dropping command=send_installed_apps due to Gms not connected
I/Finsky  (  940): [1] com.google.android.finsky.wear.WearSupportService.b(67): Stopping WearSupportService
I/WearableService(  654): Wearable Services stopping
I/Icing   (  720): Indexing 9EBFE84EABD9270B25A97439CA522B4FC49A4875 from com.google.android.gms
I/Icing   (  720): Indexing done 9EBFE84EABD9270B25A97439CA522B4FC49A4875
D/AndroidRuntime(13904): 
D/AndroidRuntime(13904): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/AndroidRuntime(13904): CheckJNI is OFF
D/dalvikvm(13904): Using executionMode 2
D/dalvikvm(13904): Trying to load lib libjavacore.so 0x0
D/dalvikvm(13904): Added shared lib libjavacore.so 0x0
D/dalvikvm(13904): Trying to load lib libnativehelper.so 0x0
D/dalvikvm(13904): Added shared lib libnativehelper.so 0x0
D/dalvikvm(13904): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm(13904): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack(13904): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug(13904): failed to load memtrack module: -2
D/AndroidRuntime(13904): Calling main entry com.android.commands.monkey.Monkey
W/BroadcastQueue(  479): Skipping deliver [background] BroadcastRecord{4ab00bf0 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4ab118cc 13904 (unknown name)/0/u-1 remote:4af03e1c}: process crashing
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): Start proc com.lezhin.comics for activity com.lezhin.comics/.activity.HomeActivity: pid=13914 uid=10070 gids={50070, 3003, 1028}
E/SurfaceFlinger(  166): glCheckFramebufferStatusOES error 36054
E/SurfaceFlinger(  166): got GL_FRAMEBUFFER_COMPLETE_OES error while taking screenshot
D/SurfaceFlinger(  166): setOrientation, mFbdev=0xb7aec050, mFbDev->setOrientation=0xb6a0ace0, orientation=3
I/gralloc_nox(  166): setOrientation: orientation=3
I/ActivityManager(  479): Config changes=480 {1.0 310mcc16mnc ja_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.29}
D/Tinker.DefaultAppLike(  681): onConfigurationChanged:{1.0 310mcc16mnc ja_US ldltr sw480dp w480dp h828dp 240dpi lrg long port finger qwerty/v/v dpad/v s.29}
D/Sensors (  479): Client connection accepted (187)
W/NetworkManagementSocketTagger(  479): setKernelCountSet(10070, 1) failed with errno -13
W/NetworkManagementSocketTagger(  479): setKernelCountSet(10021, 0) failed with errno -13
I/dalvikvm(13914): ignoring registerObject request in thread=1
I/dalvikvm(13914): ignoring registerObject request in thread=1
I/MultiDex(13914): VM with version 1.6.0 does not have multidex support
I/MultiDex(13914): install
I/MultiDex(13914): MultiDexExtractor.load(/data/app/com.lezhin.comics-1.apk, false)
I/MultiDex(13914): Detected that extraction must be performed.
D/dalvikvm(13914): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(13914): GC_CONCURRENT freed 151K, 7% free 3080K/3296K, paused 1ms+0ms, total 3ms
I/MultiDex(13914): load found 0 secondary dex files
I/MultiDex(13914): install done
D/dalvikvm(13914): GC_CONCURRENT freed 164K, 7% free 3302K/3532K, paused 4ms+0ms, total 6ms
D/dalvikvm(13914): GC_FOR_ALLOC freed 562K, 17% free 3250K/3876K, paused 4ms, total 5ms
D/dalvikvm(13914): GC_CONCURRENT freed 66K, 16% free 3286K/3876K, paused 1ms+0ms, total 8ms
D/dalvikvm(13914): GC_FOR_ALLOC freed 55K, 12% free 3419K/3876K, paused 3ms, total 3ms
I/dalvikvm(13914): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(13914): VFY: unable to resolve virtual method 279: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(13914): VFY: replacing opcode 0x6e at 0x00fb
D/dalvikvm(13914): GC_FOR_ALLOC freed 167K, 14% free 3434K/3988K, paused 3ms, total 4ms
I/CrashlyticsCore(13914): Initializing Crashlytics 2.3.10.127
I/dalvikvm(13914): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.k.zzl
E/Beta    (13914): Failed to find this app in the PackageManager
E/Beta    (13914): android.content.pm.PackageManager$NameNotFoundException: io.crash.air
E/Beta    (13914): 	at android.app.ApplicationPackageManager.getApplicationInfo(ApplicationPackageManager.java:227)
E/Beta    (13914): 	at com.a.a.b.h.a(DeviceTokenLoader.java:63)
E/Beta    (13914): 	at com.a.a.b.h.a(DeviceTokenLoader.java:35)
E/Beta    (13914): 	at com.a.a.b.h.b(DeviceTokenLoader.java:21)
E/Beta    (13914): 	at io.a.a.a.a.a.a.a(AbstractValueCache.java:39)
E/Beta    (13914): 	at com.a.a.b.c.a(Beta.java:146)
E/Beta    (13914): 	at com.a.a.b.c.e(Beta.java:114)
E/Beta    (13914): 	at io.a.a.a.a.b.o.i(IdManager.java:281)
E/Beta    (13914): 	at com.a.a.a.v.a(SessionMetadataCollector.java:34)
E/Beta    (13914): 	at com.a.a.a.b$4.run(AnswersEventsHandler.java:119)
E/Beta    (13914): 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)
E/Beta    (13914): 	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/Beta    (13914): 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:152)
E/Beta    (13914): 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:265)
E/Beta    (13914): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
E/Beta    (13914): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
E/Beta    (13914): 	at io.a.a.a.a.b.n$1$1.a(ExecutorUtils.java:75)
E/Beta    (13914): 	at io.a.a.a.a.b.h.run(BackgroundPriorityRunnable.java:30)
E/Beta    (13914): 	at java.lang.Thread.run(Thread.java:841)
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<com.snowplowanalytics.snowplow.tracker.Emitter: void <init>(com.snowplowanalytics.snowplow.tracker.Emitter$EmitterBuilder)>	sig:$r5 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/json; charset=utf-8")	timediff:0
W/dalvikvm(13914): VFY: unable to resolve virtual method 554: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(13914): VFY: replacing opcode 0x6e at 0x001a
D/dalvikvm(13914): GC_CONCURRENT freed 297K, 12% free 3522K/3988K, paused 1ms+0ms, total 3ms
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out(13914): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out(13914): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out(13914): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:2
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:1
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 714K, 20% free 3192K/3988K, paused 2ms+0ms, total 5ms
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:4
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:2
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.CipherSuite: void <init>(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.CipherSuite: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite of(java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out(13914): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out(13914): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out(13914): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:17
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(13914): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1)>($r2, null, null)	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:1
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:1
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:1
I/System.out(13914): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out(13914): body:<com.snowplowanalytics.snowplow.tracker.Emitter: void <init>(com.snowplowanalytics.snowplow.tracker.Emitter$EmitterBuilder)>	sig:specialinvoke $r13.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:18
I/System.out(13914): body:<com.snowplowanalytics.snowplow.tracker.Emitter: void <init>(com.snowplowanalytics.snowplow.tracker.Emitter$EmitterBuilder)>	sig:$r13 = virtualinvoke $r13.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(15L, $r11)	timediff:0
I/System.out(13914): body:<com.snowplowanalytics.snowplow.tracker.Emitter: void <init>(com.snowplowanalytics.snowplow.tracker.Emitter$EmitterBuilder)>	sig:$r13 = virtualinvoke $r13.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(15L, $r11)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(13914): GC_FOR_ALLOC freed 159K, 20% free 3218K/3988K, paused 4ms, total 4ms
I/dalvikvm-heap(13914): Grow heap (frag case) to 3.240MB for 39950-byte allocation
D/dalvikvm(13914): GC_FOR_ALLOC freed <1K, 20% free 3257K/4028K, paused 4ms, total 4ms
D/dalvikvm(13914): GC_FOR_ALLOC freed <1K, 20% free 3257K/4028K, paused 5ms, total 5ms
I/dalvikvm-heap(13914): Grow heap (frag case) to 3.316MB for 79888-byte allocation
D/dalvikvm(13914): GC_FOR_ALLOC freed 39K, 20% free 3296K/4108K, paused 3ms, total 3ms
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:28
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r1.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r4.<okhttp3.internal.platform.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.platform.Platform: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>	sig:specialinvoke $r7.<okhttp3.internal.platform.AndroidPlatform: void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)>($r0, $r1, $r4, $r5, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.platform.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(13914): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:31
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:31
I/System.out(13914): body:<com.snowplowanalytics.snowplow.tracker.Emitter: void <init>(com.snowplowanalytics.snowplow.tracker.Emitter$EmitterBuilder)>	sig:$r14 = virtualinvoke $r13.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:31
E/SnowplowTracker->Emitter(13914): pool-7-thread-1|Emitter loop stopping: empty limit reached.
I/Appboy v1.15.3 .com.appboy.a(13914): Google Cloud Messaging found. Setting up Google Cloud Messaging
I/Appboy v1.15.3 .com.appboy.a(13914): Automatic ADM registration not enabled in appboy.xml. Appboy will not register for ADM.
D/dalvikvm(13914): GC_CONCURRENT freed 212K, 16% free 3472K/4108K, paused 1ms+1ms, total 6ms
W/dalvikvm(13914): Unable to resolve superclass of Lcom/appboy/services/b; (4213)
W/dalvikvm(13914): Link of class 'Lcom/appboy/services/b;' failed
E/dalvikvm(13914): Could not find class 'com.appboy.services.b', referenced from method b.a.be.c
W/dalvikvm(13914): VFY: unable to resolve const-class 2323 (Lcom/appboy/services/b;) in Lb/a/be;
D/dalvikvm(13914): VFY: replacing opcode 0x1c at 0x003b
W/dalvikvm(13914): Unable to resolve superclass of Lcom/appboy/services/b; (4213)
W/dalvikvm(13914): Link of class 'Lcom/appboy/services/b;' failed
E/dalvikvm(13914): Could not find class 'com.appboy.services.b', referenced from method b.a.be.b
W/dalvikvm(13914): VFY: unable to resolve const-class 2323 (Lcom/appboy/services/b;) in Lb/a/be;
D/dalvikvm(13914): VFY: replacing opcode 0x1c at 0x001a
I/Appboy v1.15.3 .b.a.be(13914): AppboyWearableListenerService not found on path. Service not available.
I/Appboy v1.15.3 .b.a.be(13914): Appboy Wearable service is not available. Declare <service android:name="com.appboy.services.AppboyWearableListenerService"/> in your appboy.xml to enable Appboy wearable service. See the Droidboy manifest for an example
D/dalvikvm(13914): GC_FOR_ALLOC freed 114K, 16% free 3468K/4108K, paused 7ms, total 7ms
I/Appboy v1.15.3 .b.a.aw(13914): Location collection enabled via appboy.xml configuration.
I/Appboy v1.15.3 .b.a.aw(13914): Background location collection disabled via appboy.xml configuration.
D/dalvikvm(  736): GC_CONCURRENT freed 414K, 28% free 4180K/5804K, paused 4ms+1ms, total 7ms
I/Appboy v1.15.3 .b.a.aw(13914): Appboy location service is not available. Declare <service android:name="com.appboy.services.AppboyLocationService"/> in your AndroidManifest.xml to enable Appboy location service.
I/Appboy v1.15.3 .b.a.aw(13914): Time interval override set to default for background location collection: 3600s.
I/Appboy v1.15.3 .b.a.aw(13914): Distance threshold override set to default for background location collection: 50.0m.
I/Appboy v1.15.3 .b.a.aw(13914): Did not attempt to stop service. Appboy Location service is not available.
I/Appboy v1.15.3 .b.a.ct(13914): No piq requests queued.
D/dalvikvm(13914): GC_FOR_ALLOC freed 85K, 15% free 3513K/4108K, paused 9ms, total 9ms
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(13914): body:<com.lezhin.grimm.Grimm: okhttp3.OkHttpClient provideOkHttpClient(com.lezhin.grimm.integration.GrimmOkHttpInterceptor,okhttp3.CookieJar)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:1
I/System.out(13914): body:<com.lezhin.grimm.Grimm: okhttp3.OkHttpClient provideOkHttpClient(com.lezhin.grimm.integration.GrimmOkHttpInterceptor,okhttp3.CookieJar)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(13914): body:<com.lezhin.grimm.Grimm: okhttp3.OkHttpClient provideOkHttpClient(com.lezhin.grimm.integration.GrimmOkHttpInterceptor,okhttp3.CookieJar)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r0)	timediff:0
I/System.out(13914): body:<com.lezhin.grimm.Grimm: okhttp3.OkHttpClient provideOkHttpClient(com.lezhin.grimm.integration.GrimmOkHttpInterceptor,okhttp3.CookieJar)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(13914): GC_FOR_ALLOC freed 114K, 14% free 3557K/4108K, paused 5ms, total 6ms
I/dalvikvm-heap(13914): Grow heap (frag case) to 3.571MB for 39950-byte allocation
D/dalvikvm(13914): GC_FOR_ALLOC freed <1K, 14% free 3596K/4148K, paused 4ms, total 4ms
D/dalvikvm(13914): GC_FOR_ALLOC freed <1K, 14% free 3596K/4148K, paused 3ms, total 3ms
I/dalvikvm-heap(13914): Grow heap (frag case) to 3.646MB for 79888-byte allocation
D/dalvikvm(13914): GC_FOR_ALLOC freed 0K, 14% free 3674K/4228K, paused 8ms, total 8ms
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:38
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:40
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:40
I/System.out(13914): body:<com.lezhin.grimm.Grimm: okhttp3.OkHttpClient provideOkHttpClient(com.lezhin.grimm.integration.GrimmOkHttpInterceptor,okhttp3.CookieJar)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:40
I/System.out(13914): body:<com.facebook.imagepipeline.a.a.b: void <init>(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>	sig:$r5 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp Dispatcher", 0)	timediff:0
I/System.out(13914): body:<com.facebook.imagepipeline.a.a.b: void <init>(okhttp3.OkHttpClient)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/dalvikvm(13914): Could not find method android.widget.ImageView.<init>, referenced from method com.facebook.drawee.view.c.<init>
W/dalvikvm(13914): VFY: unable to resolve direct method 13494: Landroid/widget/ImageView;.<init> (Landroid/content/Context;Landroid/util/AttributeSet;II)V
D/dalvikvm(13914): VFY: replacing opcode 0x70 at 0x0000
I/dalvikvm(13914): Could not find method android.view.Window$Callback.onProvideKeyboardShortcuts, referenced from method android.support.v7.view.i.onProvideKeyboardShortcuts
W/dalvikvm(13914): VFY: unable to resolve interface method 13012: Landroid/view/Window$Callback;.onProvideKeyboardShortcuts (Ljava/util/List;Landroid/view/Menu;I)V
D/dalvikvm(13914): VFY: replacing opcode 0x72 at 0x0002
W/dalvikvm(13914): VFY: unable to find class referenced in signature (Landroid/view/SearchEvent;)
I/dalvikvm(13914): Could not find method android.view.Window$Callback.onSearchRequested, referenced from method android.support.v7.view.i.onSearchRequested
W/dalvikvm(13914): VFY: unable to resolve interface method 13014: Landroid/view/Window$Callback;.onSearchRequested (Landroid/view/SearchEvent;)Z
D/dalvikvm(13914): VFY: replacing opcode 0x72 at 0x0002
I/dalvikvm(13914): Could not find method android.view.Window$Callback.onWindowStartingActionMode, referenced from method android.support.v7.view.i.onWindowStartingActionMode
W/dalvikvm(13914): VFY: unable to resolve interface method 13018: Landroid/view/Window$Callback;.onWindowStartingActionMode (Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;
D/dalvikvm(13914): VFY: replacing opcode 0x72 at 0x0002
D/dalvikvm(  736): GC_CONCURRENT freed 255K, 26% free 4315K/5804K, paused 2ms+1ms, total 6ms
D/dalvikvm(13914): GC_CONCURRENT freed 270K, 11% free 3790K/4228K, paused 1ms+0ms, total 6ms
I/Appboy v1.15.3 .b.a.dr(13914): Creating ab_sessions table
I/Appboy v1.15.3 .b.a.dr(13914): Creating ab_events table
I/dalvikvm(13914): Could not find method android.content.Context.getColorStateList, referenced from method android.support.v7.b.a.b.a
W/dalvikvm(13914): VFY: unable to resolve virtual method 401: Landroid/content/Context;.getColorStateList (I)Landroid/content/res/ColorStateList;
I/Appboy v1.15.3 .b.a.ee(13914): Found 0 sealed session rows.
D/dalvikvm(13914): VFY: replacing opcode 0x6e at 0x0006
I/dalvikvm(13914): Could not find method android.content.res.Resources.getDrawable, referenced from method android.support.v7.widget.aw.getDrawable
W/dalvikvm(13914): VFY: unable to resolve virtual method 605: Landroid/content/res/Resources;.getDrawable (ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(13914): VFY: replacing opcode 0x6e at 0x0002
I/dalvikvm(13914): Could not find method android.content.res.Resources.getDrawableForDensity, referenced from method android.support.v7.widget.aw.getDrawableForDensity
W/dalvikvm(13914): VFY: unable to resolve virtual method 607: Landroid/content/res/Resources;.getDrawableForDensity (IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;
D/dalvikvm(13914): VFY: replacing opcode 0x6e at 0x0002
E/dalvikvm(13914): Could not find class 'android.graphics.drawable.RippleDrawable', referenced from method android.support.v7.widget.m.a
W/dalvikvm(13914): VFY: unable to resolve instanceof 185 (Landroid/graphics/drawable/RippleDrawable;) in Landroid/support/v7/widget/m;
D/dalvikvm(13914): VFY: replacing opcode 0x20 at 0x000c
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor$Logger: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.logging.HttpLoggingInterceptor$Logger$1: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.logging.HttpLoggingInterceptor$Level: void <init>(java.lang.String,int)>("NONE", 0)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.logging.HttpLoggingInterceptor$Level: void <init>(java.lang.String,int)>("BASIC", 1)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.logging.HttpLoggingInterceptor$Level: void <init>(java.lang.String,int)>("HEADERS", 2)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor$Level: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.logging.HttpLoggingInterceptor$Level: void <init>(java.lang.String,int)>("BODY", 3)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor: void <init>()>	sig:specialinvoke $r0.<okhttp3.logging.HttpLoggingInterceptor: void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger)>($r1)	timediff:1
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.logging.HttpLoggingInterceptor a(boolean)>	sig:specialinvoke $r1.<okhttp3.logging.HttpLoggingInterceptor: void <init>()>()	timediff:1
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.logging.HttpLoggingInterceptor a(boolean)>	sig:virtualinvoke $r3.<okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor setLevel(okhttp3.logging.HttpLoggingInterceptor$Level)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.OkHttpClient a(okhttp3.Interceptor,okhttp3.logging.HttpLoggingInterceptor)>	sig:specialinvoke $r4.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:1
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.OkHttpClient a(okhttp3.Interceptor,okhttp3.logging.HttpLoggingInterceptor)>	sig:$r4 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.OkHttpClient a(okhttp3.Interceptor,okhttp3.logging.HttpLoggingInterceptor)>	sig:$r4 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r1)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.OkHttpClient a(okhttp3.Interceptor,okhttp3.logging.HttpLoggingInterceptor)>	sig:$r4 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 208K, 7% free 3967K/4252K, paused 2ms+0ms, total 6ms
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:16
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(13914): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:18
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:18
I/System.out(13914): body:<com.lezhin.c.b.f: okhttp3.OkHttpClient a(okhttp3.Interceptor,okhttp3.logging.HttpLoggingInterceptor)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:18
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:5
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:5
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:5
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:5
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 247K, 7% free 4134K/4444K, paused 2ms+1ms, total 7ms
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:3
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:3
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:2
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:5
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/ActivityManager(  479): START u0 {cmp=com.lezhin.comics/com.lezhin.ui.pushagree.PushAgreeActivity} from pid 13914
D/dalvikvm(13914): GC_CONCURRENT freed 388K, 10% free 4238K/4692K, paused 0ms+0ms, total 4ms
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:2
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r1)	timediff:2
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>	sig:$r0 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r11 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)>($r9)	timediff:3
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r9, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(13914): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:1
I/System.out(13914): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r5 = interfaceinvoke $r4.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:1
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r7 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r6.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor$1: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r9 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r8.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r10.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, "Android")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:5
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:5
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:5
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:6
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r6)	timediff:8
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r7, 0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r6)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r3, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>(2147483647, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 325K, 9% free 4422K/4812K, paused 2ms+6ms, total 11ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:3
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:3
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:3
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i0 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:2
I/System.out(13914): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r3)	timediff:2
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:2
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:2
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r5 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:2
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r9, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r5 = interfaceinvoke $r4.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 460K, 11% free 4363K/4888K, paused 1ms+1ms, total 4ms
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r7 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r6.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r9 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r8.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r10.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, "Android")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r5, $r7)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r7, 0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r6)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r3, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)>	sig:specialinvoke $r6.<okhttp3.Request$Builder: void <init>()>()	timediff:3
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$100(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String access$200(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int access$300(okhttp3.HttpUrl)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>	sig:$r4 = virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:$r4 = virtualinvoke $r5.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\'<>#&=", 0, 0, 1, 1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)>	sig:virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r5 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r9, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.RequestBuilder: okhttp3.Request build()>	sig:$r10 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: okhttp3.Call createRawCall()>	sig:$r5 = interfaceinvoke $r4.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r7 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r6.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r9 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r8.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r10.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 466K, 12% free 4394K/4940K, paused 2ms+2ms, total 9ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:5
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, $r2)	timediff:5
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r3, "Android")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r5 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r6)	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/Appboy v1.15.3 .b.a.bc(13914): New session created with ID: 83da4f5c-cd9b-44c8-8e41-377a04b5dd1f
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/Appboy v1.15.3 .b.a.aw(13914): Did not request single location update. Fine grained location permissions not found.
I/Appboy v1.15.3 .b.a.aw(13914): Did not request background location updates. Background location collection is disabled.
I/Appboy v1.15.3 .b.a.la(13914): Adding request to dispatcher with parameters: {"only_respond_with":["triggers"]}
I/Appboy v1.15.3 .b.a.az(13914): Completed the openSession call. Starting or continuing session 83da4f5c-cd9b-44c8-8e41-377a04b5dd1f
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
D/dalvikvm(13914): GC_FOR_ALLOC freed 235K, 11% free 4438K/4960K, paused 14ms, total 14ms
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:27
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:27
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:27
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r7, 0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r6)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r3, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i0 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:40
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:40
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:40
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i0 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:85
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:85
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:86
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:86
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:86
I/System.out(13914): body:<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.framed.FramedConnection$Listener: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener$1: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<b.a.en: java.net.URI a(android.net.Uri)>	sig:specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<b.a.jd: void b(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r5 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<b.a.en: java.net.URL a(java.net.URI)>	sig:$r2 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<b.a.en: java.net.URL a(java.net.URI)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:1
I/System.out(13914): <b.a.en: java.net.URL a(java.net.URI)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://dev.appboy.com/api/v2/data
D/dalvikvm(13914): GC_FOR_ALLOC freed 223K, 10% free 4535K/5000K, paused 12ms, total 12ms
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:14
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r1, $r3)	timediff:17
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r6.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:3
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:5
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r7, $r9, $i0)	timediff:5
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:6
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 330K, 9% free 4645K/5080K, paused 5ms+0ms, total 12ms
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:13
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/dalvikvm(13914): Could not find method android.support.v7.widget.am.drawableHotspotChanged, referenced from method android.support.design.internal.a.drawableHotspotChanged
W/dalvikvm(13914): VFY: unable to resolve virtual method 11251: Landroid/support/v7/widget/am;.drawableHotspotChanged (FF)V
D/dalvikvm(13914): VFY: replacing opcode 0x6f at 0x0000
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:10
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:24
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:24
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:24
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:25
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:72
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r7)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 467K, 10% free 4779K/5308K, paused 2ms+3ms, total 18ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 1ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 2ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out(13914): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:93
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:93
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:93
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:93
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:93
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r6.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:94
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:94
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:94
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:94
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:95
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r6.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(13914): body:<retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl: java.util.List pathSegments()>()	timediff:0
I/LZ-PurchaseCheckerSvc(13914): Checking pending purchases...
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:36
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r7, $r9, $i0)	timediff:36
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:36
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 515K, 11% free 4910K/5488K, paused 2ms+14ms, total 20ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 8ms
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:9
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:10
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:10
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:1
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:47
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r7, $r9, $i0)	timediff:47
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:47
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 6ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:3
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:4
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:4
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:1
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
D/dalvikvm(13914): GC_FOR_ALLOC freed 791K, 16% free 4793K/5664K, paused 9ms, total 9ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 18ms
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:16
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:26
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:16
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:17
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:17
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:17
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r2, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r4, $r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r10 = virtualinvoke $r1.<okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r9)	timediff:21
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r5.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r4.<okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r9, $r8, $r12)	timediff:0
W/Finsky  (  940): [45] com.google.android.finsky.billing.iab.ab.b(48): com.lezhin.comics: No account found.
E/LZ-RxBillGates(13914): [GetsPurchases] Failed to get purchases.
D/dalvikvm(13914): GC_CONCURRENT freed 564K, 14% free 4881K/5664K, paused 2ms+2ms, total 14ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 7ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 12ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 15ms
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r5 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r1.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r5, $r4, $r7, $r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r14 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r13)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r5.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r6 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r8, $r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r11.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:132
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:132
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r3)	timediff:179
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r14, $z0)	timediff:179
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r15.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:274
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:274
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r6 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r7, $r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:274
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i2, 35)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:195
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void connect()>()	timediff:0
D/dalvikvm(13914): GC_FOR_ALLOC freed 396K, 14% free 4877K/5664K, paused 7ms, total 7ms
I/dalvikvm-heap(13914): Grow heap (frag case) to 5.483MB for 693372-byte allocation
D/dalvikvm(13914): GC_FOR_ALLOC freed 11K, 13% free 5543K/6344K, paused 5ms, total 5ms
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r5 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r1.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r5, $r4, $r7, $r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r14 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r13)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r5.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r6 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r8, $r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r11.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:270
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:271
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r3)	timediff:277
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r14, $z0)	timediff:277
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r15.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:380
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:380
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r6 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r7, $r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:380
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r5 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r1.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r5, $r4, $r7, $r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r14 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r13)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r15 = virtualinvoke $r5.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r5)	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r5.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r5.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r14.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r6 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r8, $r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r10.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r11.<okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r11 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:virtualinvoke $r11.<okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $r1)	timediff:167
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:167
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r3)	timediff:203
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r14, $z0)	timediff:203
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r15.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:297
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:297
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r6 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r7, $r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:297
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i2, 35)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 264K, 13% free 5551K/6344K, paused 4ms+0ms, total 9ms
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:8
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:10
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:13
I/dalvikvm(13914): Could not find method android.widget.CompoundButton.drawableHotspotChanged, referenced from method android.support.v7.widget.SwitchCompat.drawableHotspotChanged
W/dalvikvm(13914): VFY: unable to resolve virtual method 13320: Landroid/widget/CompoundButton;.drawableHotspotChanged (FF)V
D/dalvikvm(13914): VFY: replacing opcode 0x6f at 0x0006
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out(13914): <io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.lezhin.comics/settings?instance=6d0d88ad469b50ca864a9eea0db095546db2fd86&source=1&build_version=276582&icon_hash=bd77be10631e716bff43399536459e0ff2f87511&display_version=2.7.6
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(13914): <io.a.a.a.a.e.d: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.lezhin.comics/settings?instance=6d0d88ad469b50ca864a9eea0db095546db2fd86&source=1&build_version=276582&icon_hash=bd77be10631e716bff43399536459e0ff2f87511&display_version=2.7.6
I/System.out(13914): body:<io.a.a.a.a.e.d$c$1: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.net.HttpURLConnection r()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:223
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): URLConn;%;0;%;<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>;%;$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://dev.appboy.com/api/v2/data;%;true;%;155;%;max-age=0, private, must-revalidate;%;Not found;%;Not found;%;Not found
I/System.out(13914): body:<b.a.ga: org.json.JSONObject a(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(13914): body:<b.a.ke: org.json.JSONObject a(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r9 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
I/Appboy v1.15.3 .b.a.gn(13914): 1523644760 seconds have passed since the last trigger action (minimum interval: 30).
D/dalvikvm(13914): GC_CONCURRENT freed 582K, 11% free 5748K/6396K, paused 2ms+1ms, total 6ms
I/System.out(13914): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r5 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r6.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:283
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:283
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r16)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r15.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r15.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r15.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:317
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:317
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:591
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:591
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;1;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://api.lezhin.com/v2/inventory_groups/comic_drawer?store=play&platform=android;%;GET;%;[628];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Content-Length: 628
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): Content-Encoding: gzip
I/System.out(13914): X-Cloud-Trace-Context: b3b5b699b1bd0306bafc7a56cfb84c16
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:592
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:1
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r7, $r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:593
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:593
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:9
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;2;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10);%;https://api.lezhin.com/v2/inventory_groups/comic_drawer?store=play&platform=android;%;GET;%;[628];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Content-Length: 628
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): Content-Encoding: gzip
I/System.out(13914): X-Cloud-Trace-Context: b3b5b699b1bd0306bafc7a56cfb84c16
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10)	timediff:603
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 952K, 15% free 5765K/6780K, paused 2ms+1ms, total 12ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r7, $r12)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z1 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r11)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r16.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r12.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r19.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r12, $r17)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r19)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:634
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r10.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r2, null, null)	timediff:634
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:635
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:635
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;3;%;<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r6);%;https://api.lezhin.com/v2/inventory_groups/comic_drawer?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: b3b5b699b1bd0306bafc7a56cfb84c16
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r6)	timediff:637
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:637
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:637
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;4;%;<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://api.lezhin.com/v2/inventory_groups/comic_drawer?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: b3b5b699b1bd0306bafc7a56cfb84c16
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:638
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:643
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:644
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;5;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://api.lezhin.com/v2/inventory_groups/comic_drawer?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: b3b5b699b1bd0306bafc7a56cfb84c16
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:646
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:650
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpE;%;6;%;<retrofit2.OkHttpCall: retrofit2.Response execute()>;%;$r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>();%;https://api.lezhin.com/v2/inventory_groups/comic_drawer?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: b3b5b699b1bd0306bafc7a56cfb84c16
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response execute()>	sig:$r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>()	timediff:651
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r5 = virtualinvoke $r3.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$l0 = virtualinvoke $r3.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$NoContentResponseBody: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okio.BufferedSource source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: java.io.InputStream byteStream()>()	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(13914): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r1.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 819K, 15% free 5795K/6780K, paused 2ms+0ms, total 6ms
I/System.out(13914): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(13914): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(13914): body:<retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(13914): body:<retrofit2.Response: boolean isSuccessful()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r5 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r3)	timediff:1
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r6.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:445
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:445
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r14.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r16)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r15.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r6.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r15.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r15.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:456
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:456
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:836
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:836
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;7;%;<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://dondog.lezhin.com/applications/1/versions;%;GET;%;[280];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/, x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r4)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r5 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r6.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r6 = virtualinvoke $r6.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:456
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:456
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r5.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r12.<okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r13)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)>($l1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:4
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:4
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:4
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:866
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r10.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r2, null, null)	timediff:866
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:874
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:874
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$i2 = virtualinvoke $r15.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:473
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r2, $r4, $r7, $r8)	timediff:473
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:770
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:770
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;11;%;<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://dondog.lezhin.com/applications/1/versions;%;GET;%;[280];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/, x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Server: nginx/1.13.1
I/System.out(13914): Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Content-Length: 280
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): X-Cloud-Trace-Context: d1067150e4a113831acadfc932a3d160
I/System.out(13914): Cache-Control: private
I/System.out(13914): Via: 1.1 google
I/System.out(13914): Alt-Svc: clear
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:883
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:884
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:884
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;12;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://dondog.lezhin.com/applications/1/versions;%;GET;%;[280];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/, x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Server: nginx/1.13.1
I/System.out(13914): Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Content-Length: 280
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): X-Cloud-Trace-Context: d1067150e4a113831acadfc932a3d160
I/System.out(13914): Cache-Control: private
I/System.out(13914): Via: 1.1 google
I/System.out(13914): Alt-Svc: clear
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:886
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:888
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 874K, 16% free 5753K/6844K, paused 3ms+1ms, total 10ms
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:10
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:15
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:15
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:16
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = staticinvoke <okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)>($r11)	timediff:16
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r9.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)>($r7, $r3, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = specialinvoke $r0.<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)>($r15, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:830
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:830
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpE;%;14;%;<retrofit2.OkHttpCall: retrofit2.Response execute()>;%;$r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>();%;https://dondog.lezhin.com/applications/1/versions;%;GET;%;[280];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/, x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Server: nginx/1.13.1
I/System.out(13914): Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Content-Length: 280
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: JSESSIONID=ft5tfTr12O9xBaGlHUXYDw;Path=/
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): X-Cloud-Trace-Context: d1067150e4a113831acadfc932a3d160
I/System.out(13914): Cache-Control: private
I/System.out(13914): Via: 1.1 google
I/System.out(13914): Alt-Svc: clear
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response execute()>	sig:$r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>()	timediff:902
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r5 = virtualinvoke $r3.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$l0 = virtualinvoke $r3.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$NoContentResponseBody: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okio.BufferedSource source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: java.io.InputStream byteStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(13914): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r1.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:1
I/System.out(13914): body:<io.a.a.a.a.e.d: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:452
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String b(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: int a(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.io.InputStream g()>	sig:$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): URLConn;%;15;%;<io.a.a.a.a.e.d: java.io.InputStream g()>;%;$r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.lezhin.comics/settings?instance=6d0d88ad469b50ca864a9eea0db095546db2fd86&source=1&build_version=276582&icon_hash=bd77be10631e716bff43399536459e0ff2f87511&display_version=2.7.6;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;13;%;<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10);%;https://api.lezhin.com/v2/inventory_groups/comic_home_v2_k?store=play&platform=android;%;GET;%;[13000];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Content-Length: 13000
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): Content-Encoding: gzip
I/System.out(13914): X-Cloud-Trace-Context: 7cc5d22ade2a3a1ec2696edb4ab598c7
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r10)	timediff:838
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:staticinvoke <okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)>($r8, $r7, $r12)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r13 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r14 = virtualinvoke $r11.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z1 = staticinvoke <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>($r11)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r16 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r17 = virtualinvoke $r16.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r12.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r18 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r12 = virtualinvoke $r18.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r19.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r12, $r17)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r19)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r13.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:840
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r11 = virtualinvoke $r10.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r4, $r2, null, null)	timediff:840
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r5 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:5
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:5
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:7
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:7
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:7
I/System.out(13914): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(13914): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(13914): body:<retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(13914): body:<retrofit2.Response: boolean isSuccessful()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:2
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:2
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:843
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:843
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:2
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;16;%;<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r6);%;https://api.lezhin.com/v2/inventory_groups/comic_home_v2_k?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: 7cc5d22ade2a3a1ec2696edb4ab598c7
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r6)	timediff:847
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:847
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:847
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.connection.StreamAllocation: void cancel()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>()	timediff:2
I/System.out(13914): body:<retrofit2.OkHttpCall: void cancel()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:2
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:7
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;17;%;<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4);%;https://api.lezhin.com/v2/inventory_groups/comic_home_v2_k?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: 7cc5d22ade2a3a1ec2696edb4ab598c7
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<com.lezhin.c.b.f$a: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r4)	timediff:855
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r14)	timediff:856
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r0.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>($r1, $r2, $r3, $r4)	timediff:856
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 839K, 14% free 5886K/6844K, paused 1ms+3ms, total 7ms
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpP;%;18;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>;%;$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3);%;https://api.lezhin.com/v2/inventory_groups/comic_home_v2_k?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 2ms
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String b(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:3
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: 7cc5d22ade2a3a1ec2696edb4ab598c7
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r13 = interfaceinvoke $r12.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r3)	timediff:860
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r5 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>()	timediff:867
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:req = interfaceinvoke c.<okhttp3.Call: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i1)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): OkHttpE;%;19;%;<retrofit2.OkHttpCall: retrofit2.Response execute()>;%;$r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>();%;https://api.lezhin.com/v2/inventory_groups/comic_home_v2_k?store=play&platform=android;%;GET;%;[];%;[private];%;[Thu, 01 Jan 1970 00:00:00 GMT];%;[];%;[x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT];%;
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printOkHttpInfoFromCall(java.lang.String,java.lang.String,okhttp3.Call,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(13914): header:Date: Fri, 13 Apr 2018 18:39:20 GMT
I/System.out(13914): Content-Type: application/json;charset=UTF-8
I/System.out(13914): Connection: keep-alive
I/System.out(13914): Access-Control-Allow-Credentials: true
I/System.out(13914): Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS
I/System.out(13914): Access-Control-Expose-Headers: Date
I/System.out(13914): Access-Control-Max-Age: 86400
I/System.out(13914): Expires: Thu, 01 Jan 1970 00:00:00 GMT
I/System.out(13914): Set-Cookie: x-lz-locale=ja_JP;Path=/;Domain=.lezhin.com;Expires=Sun, 13-May-18 18:39:20 GMT
I/System.out(13914): X-Cloud-Trace-Context: 7cc5d22ade2a3a1ec2696edb4ab598c7
I/System.out(13914): Vary: Accept-Encoding
I/System.out(13914): Server: Google Frontend
I/System.out(13914): Cache-Control: private
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response execute()>	sig:$r7 = interfaceinvoke $r6.<okhttp3.Call: okhttp3.Response execute()>()	timediff:868
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2100(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2200(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2300(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$l1 = staticinvoke <okhttp3.Response: long access$2400(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:1
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r5 = virtualinvoke $r3.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$l0 = virtualinvoke $r3.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$NoContentResponseBody: void <init>(okhttp3.MediaType,long)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$l1 = staticinvoke <okhttp3.Response$Builder: long access$1100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void <init>(okhttp3.ResponseBody)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okio.BufferedSource source()>	sig:$r3 = virtualinvoke $r2.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.InputStream byteStream()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: java.io.InputStream byteStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r5, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: java.io.Reader charStream()>	sig:$r4 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(13914): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:$r3 = virtualinvoke $r1.<okhttp3.ResponseBody: java.io.Reader charStream()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 965K, 15% free 5932K/6964K, paused 2ms+2ms, total 15ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 4ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(13914): body:<okhttp3.ResponseBody: void close()>	sig:$r1 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(13914): body:<okhttp3.ResponseBody: void close()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r1)	timediff:0
I/System.out(13914): body:<retrofit2.OkHttpCall$ExceptionCatchingRequestBody: void close()>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(13914): body:<retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)>	sig:virtualinvoke $r1.<okhttp3.ResponseBody: void close()>()	timediff:0
I/System.out(13914): body:<retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(13914): body:<retrofit2.Response: boolean isSuccessful()>	sig:$z0 = virtualinvoke $r1.<okhttp3.Response: boolean isSuccessful()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(13914): <io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(13914): <io.a.a.a.a.e.d: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://e.crashlytics.com/spi/v2/events
I/System.out(13914): body:<io.a.a.a.a.e.d$c$1: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(13914): body:<io.a.a.a.a.e.d: java.net.HttpURLConnection r()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d m()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d m()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 810K, 14% free 6043K/6964K, paused 3ms+3ms, total 15ms
D/dalvikvm(13914): GC_CONCURRENT freed 646K, 11% free 6396K/7108K, paused 2ms+2ms, total 13ms
D/dalvikvm(13914): GC_CONCURRENT freed 766K, 12% free 6689K/7520K, paused 3ms+0ms, total 8ms
D/dalvikvm(13914): GC_CONCURRENT freed 925K, 13% free 6922K/7912K, paused 1ms+1ms, total 7ms
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d m()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:305
I/System.out(13914): body:<io.a.a.a.a.e.d: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:82
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(13914): <io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r2.<java.net.URL: int getPort()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r1, $r6, $r7, null)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: java.lang.String a(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)	timediff:0
I/System.out(13914): <io.a.a.a.a.e.d: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3)###https://e.crashlytics.com/spi/v2/events
I/System.out(13914): body:<io.a.a.a.a.e.d$c$1: java.net.HttpURLConnection a(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(13914): body:<io.a.a.a.a.e.d: java.net.HttpURLConnection r()>	sig:virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d a(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d m()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d m()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(13914): body:<io.a.a.a.a.e.d: io.a.a.a.a.e.d m()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
I/System.out(13914): body:<io.a.a.a.a.e.d: int b()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:81
I/ContentMaintenance(  720): Pruning caches...
I/ContentMaintenance(  720): Internal cache bytes used: 0; limit: 100000000; download size: 0
I/ContentMaintenance(  720): Cache pruning complete.
I/ContentMaintenance(  720): Beginning garbage collection.
I/RealtimeCacheCleanup(  720): Beginning Realtime garbage collection.
I/RealtimeCacheCleanup(  720): Finished Realtime garbage collection.
I/ContentMaintenance(  720): Finished garbage collection.
I/Choreographer(  533): Skipped 309 frames!  The application may be doing too much work on its main thread.
I/InputReader(  479): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  479): Device reconfigured: id=1, name='seamless mouse', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  479): Device reconfigured: id=3, name='Android Input', size 1280x720, orientation 3, mode 1, display id 0
I/InputReader(  479): Reconfiguring input devices.  changes=0x00000004
I/InputReader(  479): Device reconfigured: id=8, name='VirtualBox USB Tablet', size 1280x720, orientation 3, mode 1, display id 0
W/WindowManager(  479): Window freeze timeout expired.
W/WindowManager(  479): Force clearing orientation change: Window{4b07e964 u0 com.lezhin.comics/com.lezhin.ui.pushagree.PushAgreeActivity}
W/WindowManager(  479): Force clearing orientation change: Window{4aaf431c u0 Starting com.lezhin.comics}
W/WindowManager(  479): Force clearing orientation change: Window{4b09a2e4 u0 com.android.gallery3d/com.android.gallery3d.app.GalleryActivity}
W/WindowManager(  479): Force clearing orientation change: Window{4aaef44c u0 SurfaceView}
W/WindowManager(  479): Force clearing orientation change: Window{4a991d1c u0 com.android.systemui.ImageWallpaper}
W/WindowManager(  479): App freeze timeout expired.
D/libEGL  (13914): loaded /system/lib/egl/libEGL_adreno.so
W/ActivityManager(  479): Launch timeout has expired, giving up wake lock!
W/SurfaceFlinger(  166): setTransactionState timed out!
E/WindowManager(  479): Starting window AppWindowToken{4b02c224 token=Token{4b0570a8 ActivityRecord{4af8c17c u0 com.lezhin.comics/.activity.HomeActivity t77}}} timed out
I/WindowManager(  479): Screen frozen for +10s189ms due to Window{4aaf431c u0 Starting com.lezhin.comics}
I/Choreographer( 1550): Skipped 601 frames!  The application may be doing too much work on its main thread.
D/        (13914): HostConnection::get() New Host Connection established 0xb8d00ff0, tid 13914
D/libEGL  (13914): loaded /system/lib/egl/libGLESv2_adreno.so
D/libEGL  (13914): loaded /system/lib/egl/libGLESv1_CM_adreno.so
I/InputDispatcher(  479): Dropped event because it is stale.
I/InputDispatcher(  479): Dropped event because it is stale.
I/InputDispatcher(  479): Dropped event because it is stale.
I/InputDispatcher(  479): Dropped event because it is stale.
I/Choreographer(  479): Skipped 607 frames!  The application may be doing too much work on its main thread.
W/InputManager(  479): Input event injection from pid 13904 failed.
D/PhoneStatusBar(  533): mSettingsPanelGravity = 55
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/Choreographer(  533): Skipped 910 frames!  The application may be doing too much work on its main thread.
W/EGL_emulation(13914): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer(13914): Enabling debug mode 0
W/EGL_emulation(  533): eglSurfaceAttrib not implemented 3093 12436
I/Appboy v1.15.3 .com.appboy.AppboyGcmReceiver(13914): Received broadcast message. Message: Intent { act=com.google.android.c2dm.intent.REGISTRATION flg=0x10 pkg=com.lezhin.comics cmp=com.lezhin.comics/com.appboy.AppboyGcmReceiver (has extras) }
I/LZ-PurchaseCheckerSvc(13914): Service destroyed
I/ActivityManager(  479): START u0 {flg=0x10008000 cmp=com.lezhin.comics/com.lezhin.ui.update.UpdateCheckerActivity (has extras)} from pid 13914
I/WindowManager(  479): Screenshot max retries 4 of Token{4af638dc ActivityRecord{4af10778 u0 com.lezhin.comics/com.lezhin.ui.pushagree.PushAgreeActivity t77 f}} appWin=Window{4b07e964 u0 com.lezhin.comics/com.lezhin.ui.pushagree.PushAgreeActivity} drawState=1
W/WindowManager(  479): Screenshot failure taking screenshot for (720x1280) to layer 21030
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(13914): body:<com.lezhin.grimm.integration.GrimmGlideModule: okhttp3.OkHttpClient provideOkHttpClient(okhttp3.CookieJar)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:1
I/System.out(13914): body:<com.lezhin.grimm.integration.GrimmGlideModule: okhttp3.OkHttpClient provideOkHttpClient(okhttp3.CookieJar)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r3)	timediff:0
I/System.out(13914): body:<com.lezhin.grimm.integration.GrimmGlideModule: okhttp3.OkHttpClient provideOkHttpClient(okhttp3.CookieJar)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
D/dalvikvm(13914): GC_CONCURRENT freed 1038K, 14% free 7213K/8320K, paused 2ms+4ms, total 16ms
D/dalvikvm(13914): WAIT_FOR_CONCURRENT_GC blocked 7ms
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:25
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:1
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:1
I/System.out(13914): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:26
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:27
I/System.out(13914): body:<com.lezhin.grimm.integration.GrimmGlideModule: okhttp3.OkHttpClient provideOkHttpClient(okhttp3.CookieJar)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:27
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.connection.RouteDatabase: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$z1 = virtualinvoke $r12.<okhttp3.ConnectionSpec: boolean isTls()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r20 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>()	timediff:17
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r13 = specialinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r1 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>	sig:specialinvoke $r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>	sig:specialinvoke $r8.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: void <init>(java.lang.Object,java.lang.reflect.Method)>($r6, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r14 = staticinvoke <okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)>($r20)	timediff:0
I/System.out(13914): body:<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>	sig:specialinvoke $r4.<okhttp3.CertificatePinner: void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner)>($r3, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r16 = virtualinvoke $r16.<okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)>($r14)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: void <init>()>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:19
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.b$a: okhttp3.Call$Factory b()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>()>()	timediff:20
W/InputMethodManagerService(  479): Focus gain on non-focused client com.android.internal.view.IInputMethodClient$Stub$Proxy@4a920af4 (uid=10070 pid=13914)
I/Appboy v1.15.3 .b.a.la(13914): Adding request to dispatcher with parameters: {"only_respond_with":[]}
I/System.out(13914): body:<b.a.en: java.net.URI a(android.net.Uri)>	sig:specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<b.a.jd: void b(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r5 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<b.a.en: java.net.URL a(java.net.URI)>	sig:$r2 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<b.a.en: java.net.URL a(java.net.URI)>	sig:specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:1
I/System.out(13914): <b.a.en: java.net.URL a(java.net.URI)>###specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2)###https://dev.appboy.com/api/v2/data
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:$r5 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0)	timediff:0
I/System.out(13914): body:<b.a.ga: java.net.HttpURLConnection b(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r7)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,java.util.Map)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(13914): body:<b.a.ga: void a(java.net.HttpURLConnection,org.json.JSONObject)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void connect()>()	timediff:0
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:93
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>()	timediff:0
I/System.out(13914): body:<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>	sig:$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(13914): URLConn;%;20;%;<b.a.ga: java.io.InputStream a(java.net.HttpURLConnection)>;%;$r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://dev.appboy.com/api/v2/data;%;true;%;49;%;max-age=0, private, must-revalidate;%;Not found;%;Not found;%;Not found
I/System.out(13914): body:<b.a.ga: org.json.JSONObject a(java.net.URL,org.json.JSONObject,java.util.Map,b.a.h)>	sig:virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(13914): body:<b.a.ke: org.json.JSONObject a(java.net.URI,java.util.Map,org.json.JSONObject)>	sig:$r9 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>()	timediff:0
D/dalvikvm(13914): GC_FOR_ALLOC freed 476K, 13% free 7511K/8576K, paused 8ms, total 8ms
I/dalvikvm-heap(13914): Grow heap (frag case) to 8.000MB for 635808-byte allocation
D/dalvikvm(13914): GC_FOR_ALLOC freed <1K, 12% free 8131K/9200K, paused 13ms, total 13ms
I/dalvikvm(13914): Could not find method android.widget.LinearLayout.<init>, referenced from method me.relex.circleindicator.CircleIndicator.<init>
W/dalvikvm(13914): VFY: unable to resolve direct method 13569: Landroid/widget/LinearLayout;.<init> (Landroid/content/Context;Landroid/util/AttributeSet;II)V
D/dalvikvm(13914): VFY: replacing opcode 0x70 at 0x0000
I/Appboy v1.15.3 .b.a.la(13914): Adding request to dispatcher with parameters: {"only_respond_with":[]}
I/Appboy v1.15.3 .b.a.dj(13914): Short circuiting execution of network request and immediately marking it as succeeded.
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: java.io.InputStream a(com.bumptech.glide.i)>	sig:specialinvoke $r2.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i4, $z0, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:9
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:10
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:3
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:2
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:10
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:11
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:11
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:21
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: java.io.InputStream a(com.bumptech.glide.i)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r4)	timediff:21
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:4
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: java.io.InputStream a(com.bumptech.glide.i)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r4, $r10)	timediff:5
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: java.io.InputStream a(com.bumptech.glide.i)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>($r4, $r10)	timediff:1
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: java.io.InputStream a(com.bumptech.glide.i)>	sig:$r11 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:2
I/System.out(13914): body:<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r3.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: java.io.InputStream a(com.bumptech.glide.i)>	sig:$r13 = interfaceinvoke $r12.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>($r11)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void executed(okhttp3.RealCall)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r7 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r6.<okhttp3.internal.http.BridgeInterceptor: void <init>(okhttp3.CookieJar)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r9 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r8.<okhttp3.internal.cache.CacheInterceptor: void <init>(okhttp3.internal.cache.InternalCache)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r10.<okhttp3.internal.connection.ConnectInterceptor: void <init>(okhttp3.OkHttpClient)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:$z0 = virtualinvoke $r5.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isForWebSocket()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r11.<okhttp3.internal.http.CallServerInterceptor: void <init>(boolean)>($z0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()>	sig:specialinvoke $r12.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r2, null, null, null, 0, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r3.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r8 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r9 = virtualinvoke $r2.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r10 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r11 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r12 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r13 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:$r14 = virtualinvoke $r2.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(13914): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>	sig:specialinvoke $r6.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14)	timediff:11
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)>($r6)	timediff:12
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r2.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i2, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i0, $i2, 47)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r2.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r1 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:1
W/EGL_emulation(13914): eglSurfaceAttrib not implemented 3093 12436
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r2 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:6
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:6
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase)>($r2, $r4)	timediff:6
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r5, $r7)	timediff:6
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)>($r7, 0)	timediff:1
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r6)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r2.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r9 = interfaceinvoke $r8.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r7)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r10 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:specialinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r3, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>	sig:specialinvoke $r3.<okhttp3.internal.cache.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1)>($r2, null, null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i5 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(13914): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z7, $z0, $i0, $i1, $z1, $z2, $z3, $i2, $i3, $z4, $z5, $r5)	timediff:0
I/System.out(13914): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:2
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:2
I/System.out(13914): body:<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = virtualinvoke $r4.<okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()>()	timediff:2
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i0 = virtualinvoke $r1.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i1 = virtualinvoke $r1.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$i2 = virtualinvoke $r1.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$z1 = virtualinvoke $r1.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r3 = virtualinvoke $r8.<okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)>($r9, $r2, $r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r9 = virtualinvoke $r8.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i0 = virtualinvoke $r8.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r7.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_EQUALS, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1285046, downTime=1285046, deviceId=-1, source=0x101 }
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1285766, downTime=1285766, deviceId=-1, source=0x101 }
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1285769, downTime=1285769, deviceId=-1, source=0x101 }
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1285771, downTime=1285771, deviceId=-1, source=0x101 }
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1285772, downTime=1285772, deviceId=-1, source=0x101 }
I/System.out(13914): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:96
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r16 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r9)	timediff:97
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r18, $i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:98
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()>()	timediff:98
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r5.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r1, $r2, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r5)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r11.<okhttp3.internal.connection.RouteSelector: okhttp3.Route next()>()	timediff:100
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>	sig:specialinvoke $r0.<okhttp3.internal.framed.FramedConnection$Listener: void <init>()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.RealConnection: void <init>(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r8.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r1, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r14 = virtualinvoke $r2.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r3.<okhttp3.internal.connection.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r7 = virtualinvoke $r4.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r4 = virtualinvoke $r6.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r13 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)>($r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r13.<okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)>($r12)	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$z1 = virtualinvoke $r6.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r5 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r6 = virtualinvoke $r4.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r8 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:$r9 = virtualinvoke $r1.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(13914): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:1
I/System.out(13914): body:<okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:14
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>	sig:virtualinvoke $r8.<okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r7, $r9, $i0)	timediff:14
I/System.out(13914): body:<okio.Okio: okio.Source b(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(13914): body:<okio.Okio: okio.Sink a(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void connectSocket(int,int)>($i0, $i1)	timediff:14
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r2.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.RealConnection: void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)>($i0, $i1, $i2, $r3)	timediff:15
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r14, $z0)	timediff:16
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:$r10 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r15.<okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)>($r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:118
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:118
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:$r6 = virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>	sig:specialinvoke r15.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r1, $r0, $r7, $r10)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean)>($r6, $z0)	timediff:119
I/System.out(13914): body:<okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection)>	sig:specialinvoke $r14.<okhttp3.internal.http.RealInterceptorChain: void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request)>($r5, $r2, $r3, $r4, $i0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpStream httpStream()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r6 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = virtualinvoke $r3.<okhttp3.internal.connection.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:1
I/System.out(13914): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i2, 35)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r6)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r7)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
W/ContextImpl(  479): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/IInputConnectionWrapper( 2025): showStatusIcon on inactive InputConnection
W/InputMethodManagerService(  479): Starting input on non-focused client com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9b6788 (uid=10007 pid=2025)
I/ActivityManager(  479): Displayed com.lezhin.comics/com.lezhin.ui.update.UpdateCheckerActivity: +360ms (total +21s348ms)
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void cancel()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.RealConnection: void cancel()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r1)	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.Http1xStream: void cancel()>	sig:virtualinvoke $r2.<okhttp3.internal.connection.RealConnection: void cancel()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void cancel()>	sig:interfaceinvoke $r3.<okhttp3.internal.http.HttpStream: void cancel()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.connection.StreamAllocation: void cancel()>()	timediff:1
I/System.out(13914): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>()	timediff:1
I/System.out(13914): body:<com.bumptech.glide.integration.okhttp3.a: void c()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:1
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.connection.RealConnection: boolean isMultiplexed()>()	timediff:0
W/NetworkManagementSocketTagger(  479): setKernelCountSet(10007, 0) failed with errno -13
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/Appboy v1.15.3 .com.appboy.a(13914): Closed session with ID: 83da4f5c-cd9b-44c8-8e41-377a04b5dd1f
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:$r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(13914): body:<okhttp3.Address: int hashCode()>	sig:$i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:2
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>	sig:virtualinvoke $r11.<okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)>($r1)	timediff:3
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)>	sig:virtualinvoke $r8.<okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)>($r7, $r1)	timediff:6
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)>($r3)	timediff:0
I/System.out(13914): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)>($r2)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)>($r7, $r3)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$r8 = virtualinvoke $r1.<okhttp3.internal.connection.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.Util: void closeQuietly(java.net.Socket)>	sig:virtualinvoke $r0.<java.net.Socket: void close()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.net.Socket)>($r8)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:2
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,boolean,okhttp3.Request)>	sig:virtualinvoke $r3.<okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)>($r1)	timediff:15
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,boolean,okhttp3.Request)>	sig:$z1 = virtualinvoke $r4.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,boolean,okhttp3.Request)>	sig:$r5 = virtualinvoke $r2.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,boolean,okhttp3.Request)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)>($r1, $z0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.RouteSelector: boolean hasNext()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.connection.RouteSelector: boolean hasNextPostponed()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()>	sig:$z0 = virtualinvoke $r2.<okhttp3.internal.connection.RouteSelector: boolean hasNext()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,boolean,okhttp3.Request)>	sig:$z1 = virtualinvoke $r3.<okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()>()	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,boolean,okhttp3.Request)>($r9, 0, $r4)	timediff:16
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)>(null)	timediff:0
I/System.out(13914): body:<okhttp3.internal.connection.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.connection.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:virtualinvoke $r2.<okhttp3.internal.connection.StreamAllocation: void release()>()	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:$r1 = virtualinvoke $r4.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Dispatcher: int runningCallsCount()>()	timediff:0
I/System.out(13914): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>($r2, $r1, 0)	timediff:0
I/System.out(13914): body:<okhttp3.RealCall: okhttp3.Response execute()>	sig:virtualinvoke $r1.<okhttp3.Dispatcher: void finished(okhttp3.RealCall)>($r0)	timediff:0
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1286148, downTime=1286148, deviceId=-1, source=0x101 }
W/ViewRootImpl(13914): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_COMMA, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1286154, downTime=1286154, deviceId=-1, source=0x101 }
W/EGL_emulation(13914): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  479): START u0 {act=android.intent.action.VIEW dat=market://details?id=com.lezhin.comics cmp=com.android.vending/com.google.android.finsky.activities.LaunchUrlHandlerActivity} from pid 13914
W/InputMethodManagerService(  479): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa44ff8 attribute=android.view.inputmethod.EditorInfo@4b13eaf4, token = android.os.BinderProxy@4a96f984
I/ActivityManager(  479): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 13914
W/PhoneFallbackEventHandler(13914): No activity found for android.intent.action.CALL_BUTTON.
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 479
I/ActivityManager(  479): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 13914
W/PhoneFallbackEventHandler(13914): No activity found for android.intent.action.CALL_BUTTON.
V/FlingTracker(  533): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  533): java.lang.Throwable
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  533): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  533): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  533): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  533): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  533): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  533): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  533): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
D/dalvikvm( 5925): GC_CONCURRENT freed 381K, 29% free 3208K/4480K, paused 0ms+0ms, total 3ms
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
D/dalvikvm(  479): GC_FOR_ALLOC freed 4577K, 53% free 14393K/30420K, paused 14ms, total 17ms
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 479
I/ActivityManager(  479): START u0 {act=com.android.systemui.recent.action.TOGGLE_RECENTS flg=0x10800000 cmp=com.android.systemui/.recent.RecentsActivity (has extras)} from pid 533
D/dalvikvm(  479): GC_CONCURRENT freed 392K, 53% free 14437K/30420K, paused 2ms+2ms, total 42ms
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.VIEW dat=market://details?id=com.lezhin.comics cmp=com.android.vending/com.google.android.finsky.activities.LaunchUrlHandlerActivity} from pid 13914
V/FlingTracker(  533): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  533): java.lang.Throwable
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  533): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  533): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  533): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  533): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  533): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  533): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  533): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  479): START u0 {act=com.android.systemui.recent.action.TOGGLE_RECENTS flg=0x10800000 cmp=com.android.systemui/.recent.RecentsActivity (has extras)} from pid 533
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 cmp=com.android.browser/.BrowserActivity sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_BROWSER]}} from pid 479
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 13914
W/PhoneFallbackEventHandler(13914): No activity found for android.intent.action.CALL_BUTTON.
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_CALCULATOR]}} from pid 479
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 479
I/ActivityManager(  479): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 13914
W/PhoneFallbackEventHandler(13914): No activity found for android.intent.action.CALL_BUTTON.
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_CALCULATOR]}} from pid 479
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.VIEW dat=market://details?id=com.lezhin.comics cmp=com.android.vending/com.google.android.finsky.activities.LaunchUrlHandlerActivity} from pid 13914
I/ActivityManager(  479): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 13914
W/PhoneFallbackEventHandler(13914): No activity found for android.intent.action.CALL_BUTTON.
I/InputDispatcher(  479): Dropped event because of pending overdue app switch.
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
W/InputManager(  479): Input event injection from pid 13904 failed.
D/dalvikvm(  479): GC_CONCURRENT freed 2859K, 53% free 14356K/30420K, paused 1ms+3ms, total 22ms
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 479
D/dalvikvm(  533): GC_FOR_ALLOC freed 3182K, 36% free 14652K/22640K, paused 9ms, total 9ms
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/InputDispatcher(  479): Dropped event because of pending overdue app switch.
W/InputManager(  479): Input event injection from pid 13904 failed.
I/ActivityManager(  479): START u0 {act=android.intent.action.VIEW dat=market://details?id=com.lezhin.comics cmp=com.android.vending/com.google.android.finsky.activities.LaunchUrlHandlerActivity} from pid 13914
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 479
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
V/FlingTracker(  533): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  533): java.lang.Throwable
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  533): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  533): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  533): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  533): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  533): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  533): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  533): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 sel={act=android.intent.action.MAIN cat=[android.intent.category.APP_MUSIC]}} from pid 479
I/ActivityManager(  479): START u0 {act=android.intent.action.VIEW dat=market://details?id=com.lezhin.comics cmp=com.android.vending/com.google.android.finsky.activities.LaunchUrlHandlerActivity} from pid 13914
I/ActivityManager(  479): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 13914
W/PhoneFallbackEventHandler(13914): No activity found for android.intent.action.CALL_BUTTON.
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/ActivityManager(  479): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.lezhin.comics/.activity.HomeActivity} from pid 13904
I/AndroidRuntime(13904): VM exiting with result code 0.
