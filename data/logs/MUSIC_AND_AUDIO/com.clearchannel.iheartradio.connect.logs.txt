--------- beginning of /dev/log/main
I/Icing   (  711): Indexing F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0 from com.google.android.gms
I/Icing   (  711): Indexing done F4FAA6262FE39DDD50BAE6B7AF5CDB8D73BA0DB0
D/AndroidRuntime(16808): 
D/AndroidRuntime(16808): >>>>>> AndroidRuntime START com.android.internal.os.RuntimeInit <<<<<<
D/dalvikvm(  670): GC_FOR_ALLOC freed 3664K, 5% free 120787K/126508K, paused 23ms, total 23ms
D/dalvikvm(  670): GC_FOR_ALLOC freed 632K, 5% free 122645K/128380K, paused 17ms, total 17ms
D/dalvikvm(  670): GC_FOR_ALLOC freed 110K, 5% free 124609K/130252K, paused 17ms, total 17ms
D/dalvikvm(  670): GC_FOR_ALLOC freed 254K, 5% free 126531K/132124K, paused 20ms, total 20ms
D/AndroidRuntime(16808): CheckJNI is OFF
D/dalvikvm(16808): Using executionMode 2
D/dalvikvm(16808): Trying to load lib libjavacore.so 0x0
D/dalvikvm(16808): Added shared lib libjavacore.so 0x0
D/dalvikvm(16808): Trying to load lib libnativehelper.so 0x0
D/dalvikvm(16808): Added shared lib libnativehelper.so 0x0
D/dalvikvm(16808): No JNI_OnLoad found in libnativehelper.so 0x0, skipping init
D/dalvikvm(16808): Note: class Landroid/app/ActivityManagerNative; has 179 unimplemented (abstract) methods
E/memtrack(16808): Couldn't load memtrack module (No such file or directory)
E/android.os.Debug(16808): failed to load memtrack module: -2
D/AndroidRuntime(16808): Calling main entry com.android.commands.monkey.Monkey
--------- beginning of /dev/log/system
W/BroadcastQueue(  481): Skipping deliver [background] BroadcastRecord{4aca7504 u-1 android.net.conn.CONNECTIVITY_CHANGE} to ReceiverList{4ac785c8 16808 (unknown name)/0/u-1 remote:4ac9a634}: process crashing
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
D/yeshen  (  670): launcher onpause
W/NetworkManagementSocketTagger(  481): setKernelCountSet(10188, 1) failed with errno -13
I/dalvikvm(16819): ignoring registerObject request in thread=1
I/dalvikvm(16819): ignoring registerObject request in thread=1
D/yeshen  (  670): launcher onstop
W/DebugConnManager(  670): getNetworkInfo() on networkType 1
I/ActivityManager(  481): Start proc com.clearchannel.iheartradio.connect for activity com.clearchannel.iheartradio.connect/.SplashActivity: pid=16819 uid=10188 gids={50188, 3002, 3001, 3003, 1028, 1015, 1023}
I/MultiDex(16819): VM with version 1.6.0 does not have multidex support
I/MultiDex(16819): install
I/MultiDex(16819): MultiDexExtractor.load(/data/app/com.clearchannel.iheartradio.connect-1.apk, false)
I/MultiDex(16819): Detected that extraction must be performed.
D/dalvikvm(16819): JIT code cache reset in 0 ms (0 bytes 1/0)
D/dalvikvm(16819): GC_CONCURRENT freed 161K, 7% free 3015K/3240K, paused 1ms+2ms, total 4ms
I/MultiDex(16819): Extraction is needed for file /data/data/com.clearchannel.iheartradio.connect/code_cache/secondary-dexes/com.clearchannel.iheartradio.connect-1.apk.classes2.zip
I/MultiDex(16819): Extracting /data/data/com.clearchannel.iheartradio.connect/code_cache/secondary-dexes/com.clearchannel.iheartradio.connect-1.apk.classes-1416622660.zip
I/MultiDex(16819): Renaming to /data/data/com.clearchannel.iheartradio.connect/code_cache/secondary-dexes/com.clearchannel.iheartradio.connect-1.apk.classes2.zip
I/MultiDex(16819): Extraction success - length /data/data/com.clearchannel.iheartradio.connect/code_cache/secondary-dexes/com.clearchannel.iheartradio.connect-1.apk.classes2.zip: 964003
I/MultiDex(16819): load found 1 secondary dex files
D/dalvikvm(16819): DexOpt: --- BEGIN 'com.clearchannel.iheartradio.connect-1.apk.classes2.zip' (bootstrap=0) ---
W/dalvikvm(16833): method Landroid/support/v7/internal/widget/ListViewCompat;.lookForSelectablePosition incorrectly overrides package-private method with same name in Landroid/widget/ListView;
D/dalvikvm(16833): DexOpt: load 23ms, verify+opt 49ms, 2328164 bytes
D/dalvikvm(16819): DexOpt: --- END 'com.clearchannel.iheartradio.connect-1.apk.classes2.zip' (success) ---
D/dalvikvm(16819): DEX prep '/data/data/com.clearchannel.iheartradio.connect/code_cache/secondary-dexes/com.clearchannel.iheartradio.connect-1.apk.classes2.zip': unzip in 18ms, rewrite 229ms
I/MultiDex(16819): install done
D/dalvikvm(16819): GC_CONCURRENT freed 243K, 8% free 3313K/3564K, paused 0ms+3ms, total 6ms
D/dalvikvm(16819): GC_CONCURRENT freed 542K, 16% free 3245K/3840K, paused 0ms+1ms, total 4ms
I/CrashlyticsCore(16819): Initializing Crashlytics 2.3.8.97
I/dalvikvm(16819): Could not find method android.app.Notification$Builder.setLocalOnly, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zza
W/dalvikvm(16819): VFY: unable to resolve virtual method 156: Landroid/app/Notification$Builder;.setLocalOnly (Z)Landroid/app/Notification$Builder;
D/dalvikvm(16819): VFY: replacing opcode 0x6e at 0x0100
I/dalvikvm(16819): Could not find method android.content.pm.PackageManager.getPackageInstaller, referenced from method com.google.android.gms.common.GooglePlayServicesUtil.zzj
W/dalvikvm(16819): VFY: unable to resolve virtual method 420: Landroid/content/pm/PackageManager;.getPackageInstaller ()Landroid/content/pm/PackageInstaller;
D/dalvikvm(16819): VFY: replacing opcode 0x6e at 0x000a
W/Fabric  (16819): Could not call getId on com.google.android.gms.ads.identifier.AdvertisingIdClient$Info
W/Fabric  (16819): Could not call isLimitAdTrackingEnabled on com.google.android.gms.ads.identifier.AdvertisingIdClient$Info
D/dalvikvm(16819): GC_CONCURRENT freed 330K, 13% free 3355K/3840K, paused 2ms+1ms, total 4ms
I/System.out(16819): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r3.<okhttp3.Dispatcher: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0")	timediff:0
I/System.out(16819): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1")	timediff:0
I/System.out(16819): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1")	timediff:0
I/System.out(16819): body:<okhttp3.Protocol: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2")	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_MD5", 0, "SSL_RSA_WITH_NULL_MD5", 1, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA", 1, "SSL_RSA_WITH_NULL_SHA", 2, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_EXPORT_WITH_RC4_40_MD5", 2, "SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3, 4346, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_RC4_128_MD5", 3, "SSL_RSA_WITH_RC4_128_MD5", 4, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_RC4_128_SHA", 4, "SSL_RSA_WITH_RC4_128_SHA", 5, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_EXPORT_WITH_DES40_CBC_SHA", 5, "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8, 4346, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_DES_CBC_SHA", 6, "SSL_RSA_WITH_DES_CBC_SHA", 9, 5469, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_3DES_EDE_CBC_SHA", 7, "SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 8, "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17, 4346, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_DES_CBC_SHA", 9, "SSL_DHE_DSS_WITH_DES_CBC_SHA", 18, 5469, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 10, "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 11, "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20, 4346, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_DES_CBC_SHA", 12, "SSL_DHE_RSA_WITH_DES_CBC_SHA", 21, 5469, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 13, "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_EXPORT_WITH_RC4_40_MD5", 14, "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23, 4346, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_RC4_128_MD5", 15, "SSL_DH_anon_WITH_RC4_128_MD5", 24, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 16, "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25, 4346, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_DES_CBC_SHA", 17, "SSL_DH_anon_WITH_DES_CBC_SHA", 26, 5469, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_3DES_EDE_CBC_SHA", 18, "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_SHA", 19, "TLS_KRB5_WITH_DES_CBC_SHA", 30, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 20, "TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_SHA", 21, "TLS_KRB5_WITH_RC4_128_SHA", 32, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_DES_CBC_MD5", 22, "TLS_KRB5_WITH_DES_CBC_MD5", 34, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 23, "TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_WITH_RC4_128_MD5", 24, "TLS_KRB5_WITH_RC4_128_MD5", 36, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 25, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 26, "TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 27, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 28, "TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43, 2712, 6, 2147483647)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA", 29, "TLS_RSA_WITH_AES_128_CBC_SHA", 47, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 30, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 31, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA", 32, "TLS_DH_anon_WITH_AES_128_CBC_SHA", 52, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA", 33, "TLS_RSA_WITH_AES_256_CBC_SHA", 53, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 34, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 35, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA", 36, "TLS_DH_anon_WITH_AES_256_CBC_SHA", 58, 5246, 6, 10)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_NULL_SHA256", 37, "TLS_RSA_WITH_NULL_SHA256", 59, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_CBC_SHA256", 38, "TLS_RSA_WITH_AES_128_CBC_SHA256", 60, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_CBC_SHA256", 39, "TLS_RSA_WITH_AES_256_CBC_SHA256", 61, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 40, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 41, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 42, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 43, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 44, "TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 45, "TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109, 5246, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_128_GCM_SHA256", 46, "TLS_RSA_WITH_AES_128_GCM_SHA256", 156, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_RSA_WITH_AES_256_GCM_SHA384", 47, "TLS_RSA_WITH_AES_256_GCM_SHA384", 157, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 48, "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 49, "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 50, "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 51, "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 52, "TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 53, "TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167, 5288, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 54, "TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255, 5746, 6, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_NULL_SHA", 55, "TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 56, "TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 57, "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 58, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 59, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 60, "TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 61, "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 62, "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 63, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 64, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_NULL_SHA", 65, "TLS_ECDH_RSA_WITH_NULL_SHA", 49163, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_RC4_128_SHA", 66, "TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 67, "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 68, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 69, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_NULL_SHA", 70, "TLS_ECDHE_RSA_WITH_NULL_SHA", 49168, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 71, "TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 72, "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 73, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 74, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_NULL_SHA", 75, "TLS_ECDH_anon_WITH_NULL_SHA", 49173, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_RC4_128_SHA", 76, "TLS_ECDH_anon_WITH_RC4_128_SHA", 49174, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 77, "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 78, "TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 79, "TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177, 4492, 7, 14)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 80, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 81, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 82, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 83, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 84, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 85, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 86, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 87, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194, 5289, 7, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 88, "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 89, "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196, 5289, 8, 21)	timediff:1
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 90, "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 91, "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 92, "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 93, "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 94, "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CipherSuite: void <init>(java.lang.String,int,java.lang.String,int,int,int,int)>("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 95, "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202, 5289, 8, 21)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_2", 0, "TLSv1.2")	timediff:0
I/System.out(16819): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_1", 1, "TLSv1.1")	timediff:0
I/System.out(16819): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("TLS_1_0", 2, "TLSv1")	timediff:0
I/System.out(16819): body:<okhttp3.TlsVersion: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.TlsVersion: void <init>(java.lang.String,int,java.lang.String)>("SSL_3_0", 3, "SSLv3")	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>	sig:$r0 = virtualinvoke $r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r1 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>(1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec$Builder: void <init>(boolean)>(0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <clinit>()>	sig:$r5 = virtualinvoke $r1.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.internal.Internal: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: void <clinit>()>	sig:specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$000()>()	timediff:2
I/System.out(16819): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r2 = staticinvoke <okhttp3.OkHttpClient: java.util.List access$100()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:$r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>()	timediff:0
I/System.out(16819): body:<okhttp3.CookieJar: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CookieJar$1: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CertificatePinner$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r2 = staticinvoke <okhttp3.CertificatePinner$Builder: java.util.Map access$000(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder,okhttp3.CertificatePinner$1)>	sig:specialinvoke $r0.<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>	sig:specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(okhttp3.CertificatePinner$Builder,okhttp3.CertificatePinner$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner: void <clinit>()>	sig:$r1 = virtualinvoke $r0.<okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Authenticator: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Authenticator$1: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: void <clinit>()>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp ConnectionPool", 1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r2.<okhttp3.ConnectionPool$1: void <init>(okhttp3.ConnectionPool)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>	sig:specialinvoke $r5.<okhttp3.internal.RouteDatabase: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: void <init>()>	sig:specialinvoke $r0.<okhttp3.ConnectionPool: void <init>(int,long,java.util.concurrent.TimeUnit)>(5, 5L, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$Builder: void <init>()>	sig:specialinvoke $r10.<okhttp3.ConnectionPool: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dns: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.Dns$1: void <init>()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttp: void <init>(com.annimon.stream.Optional)>	sig:specialinvoke $r2.<okhttp3.OkHttpClient$Builder: void <init>()>()	timediff:5
D/dalvikvm(16819): GC_CONCURRENT freed 658K, 19% free 3142K/3864K, paused 2ms+2ms, total 6ms
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttp: void <init>(com.annimon.stream.Optional)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)>($r3)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttp: void <init>(com.annimon.stream.Optional)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>(10L, $r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttp: void <init>(com.annimon.stream.Optional)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>(10L, $r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttp: void <init>(com.annimon.stream.Optional)>	sig:$r2 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>(30L, $r4)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r4)	timediff:0
D/dalvikvm(16819): GC_FOR_ALLOC freed 53K, 19% free 3147K/3864K, paused 2ms, total 2ms
I/dalvikvm-heap(16819): Grow heap (frag case) to 3.167MB for 39950-byte allocation
D/dalvikvm(16819): GC_FOR_ALLOC freed <1K, 19% free 3186K/3904K, paused 4ms, total 4ms
D/dalvikvm(16819): GC_FOR_ALLOC freed <1K, 19% free 3186K/3904K, paused 1ms, total 2ms
I/dalvikvm-heap(16819): Grow heap (frag case) to 3.244MB for 79888-byte allocation
D/dalvikvm(16819): GC_FOR_ALLOC freed <1K, 19% free 3264K/3984K, paused 2ms, total 2ms
I/System.out(16819): body:<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>	sig:specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1)	timediff:17
I/System.out(16819): body:<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>	sig:specialinvoke $r1.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)>($r0, null)	timediff:17
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttp: void <init>(com.annimon.stream.Optional)>	sig:$r6 = virtualinvoke $r2.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>()	timediff:17
D/dalvikvm(16819): GC_CONCURRENT freed 216K, 14% free 3431K/3984K, paused 1ms+0ms, total 3ms
D/dalvikvm(16819): GC_CONCURRENT freed 368K, 13% free 3480K/3984K, paused 1ms+1ms, total 6ms
E/ActivityThread(16819): Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider
D/dalvikvm(16819): GC_CONCURRENT freed 305K, 11% free 3560K/3984K, paused 1ms+1ms, total 3ms
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:1
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/applications/209bf21abe0ebbddb41c5aa-f2c2c8e4-2ee8-11e4-a36d-009c5fda0a25/amp
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:3
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/json; charset=utf-8")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 312K, 9% free 3685K/4040K, paused 2ms+2ms, total 7ms
E/TAG     (16819): Can not move to idle session state from state IdleSessionState
D/dalvikvm(16819): Trying to load lib /data/app-lib/com.clearchannel.iheartradio.connect-1/libmyspinnative.so 0x94f0ad18
D/dalvikvm(16819): Added shared lib /data/app-lib/com.clearchannel.iheartradio.connect-1/libmyspinnative.so 0x94f0ad18
D/dalvikvm(16819): No JNI_OnLoad found in /data/app-lib/com.clearchannel.iheartradio.connect-1/libmyspinnative.so 0x94f0ad18, skipping init
W/Config  (16819): Logger/readConfig: /storage/emulated/0/myspin/config.ini: open failed: ENOENT (No such file or directory)
I/Config  (16819): Logger/readConfig: use default configuration (INFO, 9223372036854775807, false)
I/[I/SDKMain](16819): MySpinServerSDK/MySpinServerSDK version [1.3.4.4]
I/[I/SDKMain](16819): MySpinServerSDK/registerApplication(com.clearchannel.iheartradio.connect)
E/[E/Config](16819): CloudServiceClient/Cant bind mySPIN service, make sure that a launcher app is installed.
E/[E/SDKMain](16819): MySpinServiceClient/Cant bind mySPIN service, make sure that a launcher app is installed.
W/[W/VoiceControl](16819): MySpinVoiceControlManager/Can't bind VoiceControl service, make sure that a LauncherApp supporting VoiceControl is installed!
W/[W/VoiceControl](16819): MySpinVoiceControlManager/[UNKNOWN CODE]
W/[W/NavigateTo](16819): MySpinNavigationManager/Cant bind mySPIN service, make sure that a launcher app is installed.
W/[W/NavigateTo](16819): com.bosch.myspin.serversdk.utils.e$a: No service found for com.bosch.myspin.ACTION_BIND_NAVIGATION_INTERFACE action.
W/[W/NavigateTo](16819): 	at com.bosch.myspin.serversdk.utils.e.a(SourceFile:63)
W/[W/NavigateTo](16819): 	at com.bosch.myspin.serversdk.navigation.b.c(SourceFile:98)
W/[W/NavigateTo](16819): 	at com.bosch.myspin.serversdk.navigation.b.a(SourceFile:86)
W/[W/NavigateTo](16819): 	at com.bosch.myspin.serversdk.service.client.j.b(SourceFile:634)
W/[W/NavigateTo](16819): 	at com.bosch.myspin.serversdk.service.client.j.<init>(SourceFile:223)
W/[W/NavigateTo](16819): 	at com.bosch.myspin.serversdk.MySpinServerSDK.registerApplication(SourceFile:370)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.connect.msapi.MSAPI.registerApplication(MSAPI.java:69)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.connect.connections.BoschConnection.connect(BoschConnection.java:45)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.connect.connectionengine.DefaultConnectionStrategy.initConnections(DefaultConnectionStrategy.java:529)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.connect.connectionengine.DefaultConnectionStrategy.init(DefaultConnectionStrategy.java:84)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.connect.utils.ConnectionManager.<init>(ConnectionManager.java:44)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.connect.utils.ConnectionManager.init(ConnectionManager.java:29)
W/[W/NavigateTo](16819): 	at com.clearchannel.iheartradio.ConnectApplication.onCreate(ConnectApplication.java:198)
W/[W/NavigateTo](16819): 	at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1024)
W/[W/NavigateTo](16819): 	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4346)
W/[W/NavigateTo](16819): 	at android.app.ActivityThread.access$1500(ActivityThread.java:135)
W/[W/NavigateTo](16819): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)
W/[W/NavigateTo](16819): 	at android.os.Handler.dispatchMessage(Handler.java:102)
W/[W/NavigateTo](16819): 	at android.os.Looper.loop(Looper.java:136)
W/[W/NavigateTo](16819): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
W/[W/NavigateTo](16819): 	at java.lang.reflect.Method.invokeNative(Native Method)
W/[W/NavigateTo](16819): 	at java.lang.reflect.Method.invoke(Method.java:515)
W/[W/NavigateTo](16819): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
W/[W/NavigateTo](16819): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
W/[W/NavigateTo](16819): 	at dalvik.system.NativeStart.main(Native Method)
W/[W/EventListener](16819): VehicleDataMessengerRegistration/Cant bind mySPIN service, make sure that a launcher app is installed.
W/[W/EventListener](16819): com.bosch.myspin.serversdk.utils.e$a: No service found for com.bosch.myspin.ACTION_BIND_VEHICLEDATA_REGISTRATION_V13X action.
W/[W/EventListener](16819): 	at com.bosch.myspin.serversdk.utils.e.a(SourceFile:63)
W/[W/EventListener](16819): 	at com.bosch.myspin.serversdk.vehicledata.d.a(SourceFile:141)
W/[W/EventListener](16819): 	at com.bosch.myspin.serversdk.service.client.j.b(SourceFile:635)
W/[W/EventListener](16819): 	at com.bosch.myspin.serversdk.service.client.j.<init>(SourceFile:223)
W/[W/EventListener](16819): 	at com.bosch.myspin.serversdk.MySpinServerSDK.registerApplication(SourceFile:370)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.connect.msapi.MSAPI.registerApplication(MSAPI.java:69)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.connect.connections.BoschConnection.connect(BoschConnection.java:45)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.connect.connectionengine.DefaultConnectionStrategy.initConnections(DefaultConnectionStrategy.java:529)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.connect.connectionengine.DefaultConnectionStrategy.init(DefaultConnectionStrategy.java:84)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.connect.utils.ConnectionManager.<init>(ConnectionManager.java:44)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.connect.utils.ConnectionManager.init(ConnectionManager.java:29)
W/[W/EventListener](16819): 	at com.clearchannel.iheartradio.ConnectApplication.onCreate(ConnectApplication.java:198)
W/[W/EventListener](16819): 	at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1024)
W/[W/EventListener](16819): 	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4346)
W/[W/EventListener](16819): 	at android.app.ActivityThread.access$1500(ActivityThread.java:135)
W/[W/EventListener](16819): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)
W/[W/EventListener](16819): 	at android.os.Handler.dispatchMessage(Handler.java:102)
W/[W/EventListener](16819): 	at android.os.Looper.loop(Looper.java:136)
W/[W/EventListener](16819): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
W/[W/EventListener](16819): 	at java.lang.reflect.Method.invokeNative(Native Method)
W/[W/EventListener](16819): 	at java.lang.reflect.Method.invoke(Method.java:515)
W/[W/EventListener](16819): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
W/[W/EventListener](16819): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
W/[W/EventListener](16819): 	at dalvik.system.NativeStart.main(Native Method)
E/[E/Config](16819): CloudServiceClient/Cant bind mySPIN service, make sure that a launcher app is installed.
W/System.err(16819): com.bosch.myspin.serversdk.MySpinException: mySPIN Service not bound! No launcher app installed!
W/System.err(16819): 	at com.bosch.myspin.serversdk.service.client.j.<init>(SourceFile:232)
W/System.err(16819): 	at com.bosch.myspin.serversdk.MySpinServerSDK.registerApplication(SourceFile:370)
W/System.err(16819): 	at com.clearchannel.iheartradio.connect.msapi.MSAPI.registerApplication(MSAPI.java:69)
W/System.err(16819): 	at com.clearchannel.iheartradio.connect.connections.BoschConnection.connect(BoschConnection.java:45)
W/System.err(16819): 	at com.clearchannel.iheartradio.connect.connectionengine.DefaultConnectionStrategy.initConnections(DefaultConnectionStrategy.java:529)
W/System.err(16819): 	at com.clearchannel.iheartradio.connect.connectionengine.DefaultConnectionStrategy.init(DefaultConnectionStrategy.java:84)
W/System.err(16819): 	at com.clearchannel.iheartradio.connect.utils.ConnectionManager.<init>(ConnectionManager.java:44)
W/System.err(16819): 	at com.clearchannel.iheartradio.connect.utils.ConnectionManager.init(ConnectionManager.java:29)
W/System.err(16819): 	at com.clearchannel.iheartradio.ConnectApplication.onCreate(ConnectApplication.java:198)
W/System.err(16819): 	at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1024)
W/System.err(16819): 	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4346)
W/System.err(16819): 	at android.app.ActivityThread.access$1500(ActivityThread.java:135)
W/System.err(16819): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)
W/System.err(16819): 	at android.os.Handler.dispatchMessage(Handler.java:102)
W/System.err(16819): 	at android.os.Looper.loop(Looper.java:136)
W/System.err(16819): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
W/System.err(16819): 	at java.lang.reflect.Method.invokeNative(Native Method)
W/System.err(16819): 	at java.lang.reflect.Method.invoke(Method.java:515)
W/System.err(16819): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
W/System.err(16819): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
W/System.err(16819): 	at dalvik.system.NativeStart.main(Native Method)
D/BluetoothManagerService(  481): Message: 20
D/BluetoothManagerService(  481): Added callback: android.bluetooth.IBluetoothManagerCallback$Stub$Proxy@4a995ba0:true
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection toHttpConnection(com.facebook.GraphRequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): <com.facebook.GraphRequest: java.net.HttpURLConnection toHttpConnection(com.facebook.GraphRequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.3/121897277851831?fields=supports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs%2Candroid_sdk_error_categories&format=json&sdk=android
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 333K, 10% free 3764K/4160K, paused 1ms+2ms, total 5ms
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void setConnectionContentType(java.net.HttpURLConnection,boolean)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void setConnectionContentType(java.net.HttpURLConnection,boolean)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i2)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.TrackingParam: java.lang.String encode(java.lang.String)>	sig:$r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8")	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void <init>(com.clearchannel.iheartradio.http.OkRequest$Method,java.lang.String,com.clearchannel.iheartradio.http.HeaderHelper,com.clearchannel.iheartradio.utils.Platform,com.clearchannel.iheartradio.http.PlatformSpecificParamFactory)>	sig:specialinvoke $r7.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:specialinvoke $r2.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:$r8 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildPost()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("SUCCESS", 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("MISSING_SCHEME", 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("UNSUPPORTED_SCHEME", 2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_PORT", 3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder$ParseResult: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder$ParseResult: void <init>(java.lang.String,int)>("INVALID_HOST", 4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildPost()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildPost()>	sig:virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:specialinvoke $r2.<okhttp3.FormBody$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:7
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r1, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, " \"\':;<=>@[]^`{}|/\\?#&!$(),~", 0, 0, 1, 1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.FormBody$Builder builderForm(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)>($r7, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded")	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: void <init>(java.util.List,java.util.List)>	sig:specialinvoke $r0.<okhttp3.RequestBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: void <init>(java.util.List,java.util.List)>	sig:$r1 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: void <init>(java.util.List,java.util.List)>	sig:$r2 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: void <init>(java.util.List,java.util.List,okhttp3.FormBody$1)>	sig:specialinvoke $r0.<okhttp3.FormBody: void <init>(java.util.List,java.util.List)>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.FormBody$Builder: okhttp3.FormBody build()>	sig:specialinvoke $r1.<okhttp3.FormBody: void <init>(java.util.List,java.util.List,okhttp3.FormBody$1)>($r2, $r3, null)	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildPost()>	sig:$r2 = virtualinvoke $r13.<okhttp3.FormBody$Builder: okhttp3.FormBody build()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>("POST", $r1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildPost()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildPost()>	sig:$r9 = virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(16819): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 337K, 10% free 3934K/4332K, paused 3ms+2ms, total 10ms
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r6 = virtualinvoke $r4.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r5)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>($r1, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>($r0, $r1, $z0, null)	timediff:1
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>	sig:$r5 = staticinvoke <okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>("OkHttp Dispatcher", 0)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r0.<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>($r1, 0)	timediff:4
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:interfaceinvoke $r4.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r5)	timediff:4
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r3, $i1, $r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 390K, 11% free 3931K/4384K, paused 2ms+0ms, total 5ms
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:14
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r4)	timediff:16
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r5 = virtualinvoke $r3.<okhttp3.RequestBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r6 = virtualinvoke $r5.<okhttp3.MediaType: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r6)	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: long contentLength()>	sig:$l0 = specialinvoke $r0.<okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)>(null, 1)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$l1 = virtualinvoke $r3.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r6)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$1: void <init>()>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine$1: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:2
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:4
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:2
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:3
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:3
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r7.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r8, $r1, 0, 0, $z0, null, null, null)	timediff:7
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 442K, 12% free 4000K/4504K, paused 1ms+0ms, total 4ms
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 1ms
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:4
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:5
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r1)	timediff:0
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r2.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r3, null, null)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:specialinvoke $r0.<okhttp3.CacheControl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r0 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)>(2147483647, $r1)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>	sig:specialinvoke $r0.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>	sig:specialinvoke $r1.<okhttp3.CacheControl: void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: void <clinit>()>	sig:$r2 = virtualinvoke $r0.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r2 = virtualinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r2 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r6.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.measurement.Label: java.lang.String pack()>	sig:$r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8")	timediff:0
I/System.out(16819): body:<com.comscore.metrics.Request: java.net.URL process(java.lang.String)>	sig:specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r5)	timediff:0
I/System.out(16819): <com.comscore.metrics.Request: java.net.URL process(java.lang.String)>###specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r5)###http://b.scorecardresearch.com/p2?c1=19&c2=6036262&ns_ap_an=iHeartAuto&ns_ap_pn=android&ns_ap_pv=4.4.2&c12=c2e427b4b28090045a4988740f4b42df-cs31&ns_ak=TySoeHyjU2lDYMy5qlcSsj94zHe%2Bi99Pl8vJ4soilxySHx2qpt7ql1ThQNfsN5gusQcdrwxogMOwObuCqQ%2B29poB77pzQ35ijAyqlD2eBYLwpFqeI21oRwiq27YDhPOAcAf9Y%2BmIVC1%2FrBK1vMObgOlH%2FGpCp7kXGgfrr8lQHY4%3D&name=start&ns_ap_ec=1&ns_ap_ev=start&ns_ap_device=dream2lteks&ns_ap_id=1524029108230&ns_ap_csf=1&ns_ap_bi=com.clearchannel.iheartradio.connect&ns_ap_pfm=android&ns_ap_pfv=4.4.2&ns_ap_ver=1.10.0&ns_ap_sv=3.1508.28&ns_type=view&ns_radio=wifi&ns_nc=1&ns_ap_gs=1524029108228&ns_ap_jb=0&ns_ap_res=1280x720&ns_ap_install=1524029108228&ns_ap_lastrun=0&ns_ap_cs=1&ns_ap_runs=1&ns_ap_usage=2&ns_ap_fg=0&ns_ap_ft=0&ns_ap_dft=0&ns_ap_bt=0&ns_ap_dbt=0&ns_ap_dit=2&ns_ap_as=1&ns_ap_das=0&ns_ap_it=2&ns_ap_lang=en&ns_ap_ar=i686&ns_ts=1524029108230
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
E/DisconnectedState(16819): Already in disconnected state
I/System.out(16819): body:<com.comscore.metrics.Request: java.net.HttpURLConnection a(java.net.URL)>	sig:$r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.comscore.metrics.Request: java.net.HttpURLConnection a(java.net.URL)>	sig:virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "Close")	timediff:0
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/System.out(16819): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:12
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r14 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r2)	timediff:12
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:12
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:12
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r4.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:13
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r1)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 350K, 10% free 4073K/4504K, paused 4ms+1ms, total 11ms
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r2, $r1)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r19 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>	sig:specialinvoke $r0.<okhttp3.internal.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setUseSessionTickets", $r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>	sig:specialinvoke $r1.<okhttp3.internal.OptionalMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>(null, "setHostname", $r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform$Android: void <init>(okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod,java.lang.reflect.Method,java.lang.reflect.Method,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod)>	sig:specialinvoke $r0.<okhttp3.internal.Platform: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>	sig:specialinvoke $r11.<okhttp3.internal.Platform$Android: void <init>(okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod,java.lang.reflect.Method,java.lang.reflect.Method,okhttp3.internal.OptionalMethod,okhttp3.internal.OptionalMethod)>($r0, $r1, $r2, $r3, $r4, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform: void <clinit>()>	sig:$r0 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform findPlatform()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r4.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:2
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r7.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r3, $r8, $i0)	timediff:2
W/dalvikvm(16819): VFY: unable to find class referenced in signature (Ljava/nio/file/Path;)
W/dalvikvm(16819): VFY: unable to find class referenced in signature ([Ljava/nio/file/OpenOption;)
I/dalvikvm(16819): Could not find method java.nio.file.Files.newOutputStream, referenced from method okio.Okio.sink
W/dalvikvm(16819): VFY: unable to resolve static method 56490: Ljava/nio/file/Files;.newOutputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
D/dalvikvm(16819): VFY: replacing opcode 0x71 at 0x000a
W/dalvikvm(16819): VFY: unable to find class referenced in signature (Ljava/nio/file/Path;)
W/dalvikvm(16819): VFY: unable to find class referenced in signature ([Ljava/nio/file/OpenOption;)
I/dalvikvm(16819): Could not find method java.nio.file.Files.newInputStream, referenced from method okio.Okio.source
W/dalvikvm(16819): VFY: unable to resolve static method 56489: Ljava/nio/file/Files;.newInputStream (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
D/dalvikvm(16819): VFY: replacing opcode 0x71 at 0x000a
I/System.out(16819): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: boolean requiresTunnel()>	sig:$r3 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r5.<okhttp3.Route: boolean requiresTunnel()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$i1 = virtualinvoke $r9.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r6.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean contains(java.lang.String[],java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean nonEmptyIntersection(java.lang.String[],java.lang.String[])>($r3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>	sig:$z0 = virtualinvoke $r4.<okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.util.List intersect(java.lang.Object[],java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[])>(class "java/lang/String", $r3, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$400(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$500(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec: java.lang.String[] access$600(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec: boolean access$700(okhttp3.ConnectionSpec)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:specialinvoke $r6.<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r6 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$000(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$r2 = staticinvoke <okhttp3.ConnectionSpec$Builder: java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>	sig:$z0 = staticinvoke <okhttp3.ConnectionSpec$Builder: boolean access$300(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>	sig:specialinvoke $r0.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>	sig:specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = virtualinvoke $r6.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>	sig:$r0 = specialinvoke $r0.<okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)>($r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>	sig:virtualinvoke $r1.<okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)>($r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>	sig:virtualinvoke $r10.<okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)>($r2, $r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r1.<okhttp3.internal.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r6.<okhttp3.Address: java.util.List protocols()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>	sig:$r4 = staticinvoke <okhttp3.internal.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, $r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform$Android: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>	sig:virtualinvoke $r5.<okhttp3.internal.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])>($r1, $r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)>($r10, $r3, $r13)	timediff:1
D/dalvikvm(16819): GC_FOR_ALLOC freed 292K, 10% free 4084K/4504K, paused 4ms, total 4ms
I/dalvikvm-heap(16819): Grow heap (frag case) to 6.022MB for 2073612-byte allocation
D/dalvikvm(16819): GC_FOR_ALLOC freed 2K, 7% free 6107K/6532K, paused 3ms, total 3ms
I/System.out(16819): body:<com.comscore.metrics.Request: boolean a()>	sig:$i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:30
I/System.out(16819): body:<com.comscore.metrics.Request: boolean a()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<com.comscore.metrics.Request: boolean a()>	sig:$r5 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Length")	timediff:0
D/KeepAlive(16819): cancel()
D/KeepAlive(16819): reset:86400000
I/System.out(16819): body:<com.comscore.metrics.Request: boolean a()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 85K, 7% free 6111K/6532K, paused 1ms+0ms, total 3ms
E/DisconnectedState(16819): Already in disconnected state
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:1
I/System.out(16819): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.clearchannel.iheartradio.connect/settings?instance=a4ca1a2711c164c5e1868e2e062aa5eb1984a666&source=1&build_version=1100904&icon_hash=0f15ad651d9c6b284fd3cb5a9a8bbcb836988780&display_version=1.10.0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(16819): body:<okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>	sig:$r2 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite valueOf(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r7 = staticinvoke <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r8 = staticinvoke <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:$r4 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>	sig:specialinvoke $r9.<okhttp3.Handshake: void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>($r8, $r7, $r4, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r15 = staticinvoke <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>($r14)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r16 = virtualinvoke $r6.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$r4 = staticinvoke <okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>($r2, 2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>	sig:$z1 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>($r1, $r2)	timediff:2
I/System.out(16819): body:<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>	sig:$z0 = virtualinvoke $r0.<okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r6)	timediff:2
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r24 = virtualinvoke $r6.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r9 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r9.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r13 = virtualinvoke $r15.<okhttp3.Handshake: java.util.List peerCertificates()>()	timediff:0
I/System.out(16819): body:<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>	sig:$r3 = virtualinvoke $r0.<okhttp3.CertificatePinner: java.util.Set findMatchingPins(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r24.<okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>($r3, $r13)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$z0 = virtualinvoke $r11.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r3 = virtualinvoke $r12.<okhttp3.internal.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(16819): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r12.<okhttp3.internal.Platform: void afterHandshake(javax.net.ssl.SSLSocket)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:specialinvoke $r0.<okhttp3.internal.io.RealConnection: void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)>($i1, $i2, $r1)	timediff:33
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:37
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:37
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:53
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z0, $z1)	timediff:53
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:specialinvoke r14.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.internal.http.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r0, $r8, $r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:53
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>()	timediff:53
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:interfaceinvoke $r5.<okhttp3.internal.http.HttpStream: void setHttpEngine(okhttp3.internal.http.HttpEngine)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: boolean writeRequestHeadersEagerly()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void sendRequest()>()	timediff:61
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(okhttp3.internal.http.HttpEngine,int,okhttp3.Request)>($r0, 0, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = virtualinvoke $r5.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r18 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream access$000(okhttp3.internal.http.HttpEngine)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: void writingRequestHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(16819): body:<com.facebook.GraphResponse: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:118
I/System.out(16819): body:<com.facebook.GraphResponse: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)>	sig:$r5 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): URLConn;%;0;%;<com.facebook.GraphResponse: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)>;%;$r5 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.3/121897277851831?fields=supports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs%2Candroid_sdk_error_categories&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:interfaceinvoke $r18.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r1)	timediff:4
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Request access$102(okhttp3.internal.http.HttpEngine,okhttp3.Request)>($r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>($r1)	timediff:1
I/System.out(16819): body:<com.facebook.GraphResponse: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:2
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r19 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r18 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream access$000(okhttp3.internal.http.HttpEngine)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r19 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: long contentLength()>	sig:$l0 = specialinvoke $r0.<okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)>(null, 1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$l2 = virtualinvoke $r19.<okhttp3.RequestBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Sink createRequestBody(okhttp3.Request,long)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSink: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSink access$300(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSink: void <init>(okhttp3.internal.http.Http1xStream,long,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSink: void <init>(okhttp3.internal.http.Http1xStream,long)>($r1, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Sink newFixedLengthSink(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSink: void <init>(okhttp3.internal.http.Http1xStream,long,okhttp3.internal.http.Http1xStream$1)>($r0, $l0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Sink createRequestBody(okhttp3.Request,long)>	sig:$r4 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Sink newFixedLengthSink(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r20 = interfaceinvoke $r18.<okhttp3.internal.http.HttpStream: okio.Sink createRequestBody(okhttp3.Request,long)>($r1, $l2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r19 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.FormBody: void writeTo(okio.BufferedSink)>	sig:specialinvoke $r0.<okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)>($r1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:virtualinvoke $r19.<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>($r21)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSink: void write(okio.Buffer,long)>	sig:staticinvoke <okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)>($l1, 0L, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSink: void write(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSink access$300(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSink: void close()>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSink: void close()>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r2, 3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
I/System.out(16819): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.util.List tryToGetNetworkInterfaces()>	sig:$r1 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>()	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$r4 = virtualinvoke $r3.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$r4 = virtualinvoke $r3.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$z0 = virtualinvoke $r7.<java.net.InetAddress: boolean isLoopbackAddress()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$z0 = virtualinvoke $r7.<java.net.InetAddress: boolean isLoopbackAddress()>()	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 751K, 12% free 6470K/7280K, paused 2ms+0ms, total 7ms
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$r4 = virtualinvoke $r3.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$z0 = virtualinvoke $r7.<java.net.InetAddress: boolean isLoopbackAddress()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$r8 = virtualinvoke $r7.<java.net.InetAddress: java.lang.String getHostAddress()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$z0 = virtualinvoke $r7.<java.net.InetAddress: boolean isLoopbackAddress()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.streamingmonitor.fillers.AddNetworkStatus: java.lang.String getLocalIpv4AddressFromNetwortInterfaceList(java.util.List)>	sig:$r8 = virtualinvoke $r7.<java.net.InetAddress: java.lang.String getHostAddress()>()	timediff:0
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:7
I/System.out(16819): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.clearchannel.iheartradio.connect/settings?instance=a4ca1a2711c164c5e1868e2e062aa5eb1984a666&source=1&build_version=1100904&icon_hash=0f15ad651d9c6b284fd3cb5a9a8bbcb836988780&display_version=1.10.0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:1
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
D/dalvikvm(16819): GC_FOR_ALLOC freed 841K, 14% free 6655K/7684K, paused 3ms, total 3ms
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
D/dalvikvm(16819): GC_FOR_ALLOC freed 556K, 15% free 6796K/7904K, paused 4ms, total 4ms
D/dalvikvm(16819): GC_FOR_ALLOC freed 394K, 14% free 6910K/8004K, paused 3ms, total 3ms
D/dalvikvm(16819): GC_FOR_ALLOC freed 508K, 15% free 6958K/8172K, paused 4ms, total 4ms
D/libEGL  (16819): loaded /system/lib/egl/libEGL_adreno.so
D/        (16819): HostConnection::get() New Host Connection established 0xb82d39a0, tid 16819
D/libEGL  (16819): loaded /system/lib/egl/libGLESv1_CM_adreno.so
D/libEGL  (16819): loaded /system/lib/egl/libGLESv2_adreno.so
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
D/OpenGLRenderer(16819): Enabling debug mode 0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1019732, downTime=1019732, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020722, downTime=1020722, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020722, downTime=1020722, deviceId=-1, source=0x101 }
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
D/dalvikvm(16819): GC_CONCURRENT freed 1674K, 21% free 6604K/8340K, paused 1ms+0ms, total 5ms
I/ActivityManager(  481): Displayed com.clearchannel.iheartradio.connect/.SplashActivity: +1s32ms
D/dalvikvm(16819): GC_FOR_ALLOC freed 18K, 21% free 6658K/8340K, paused 4ms, total 4ms
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020789, downTime=1020789, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:227
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4acae5e0 attribute=null, token = android.os.BinderProxy@4a915ae0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020868, downTime=1020868, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020873, downTime=1020873, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020874, downTime=1020874, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020875, downTime=1020875, deviceId=-1, source=0x101 }
D/BluetoothAdapter(  828): 1249413012: getState() :  mService = null. Returning STATE_OFF
I/System.out(16819): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:318
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:318
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r6 = virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: void <clinit>()>	sig:$r1 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: void <clinit>()>	sig:$r0 = virtualinvoke $r1.<okhttp3.internal.Platform: java.lang.String getPrefix()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r8, $r9)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r9, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r10 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r10.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.HttpEngine)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.internal.http.HttpEngine)>	sig:specialinvoke $r5.<okhttp3.internal.http.Http1xStream$ChunkedSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.HttpEngine)>($r0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newChunkedSource(okhttp3.internal.http.HttpEngine)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r11 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:3
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>()	timediff:321
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r16 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>($r4)	timediff:321
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$i1 = virtualinvoke $r16.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r1 = virtualinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:329
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:virtualinvoke $r0.<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r2)	timediff:0
W/WindowManager(  481): updateFocusedWindowLocked, focusedAppToken is null.
D/dalvikvm(16819): GC_CONCURRENT freed 571K, 12% free 7380K/8340K, paused 1ms+1ms, total 8ms
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 5ms
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:5
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r6)	timediff:5
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void maybeCache()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine: void maybeCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response cacheWritingResponse(okhttp3.internal.http.CacheRequest,okhttp3.Response)>($r20, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void readResponse()>()	timediff:335
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r11 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Response getResponse()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r4 = virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r1 = interfaceinvoke $r4.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$i0 = virtualinvoke $r3.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>()	timediff:1
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = virtualinvoke $r3.<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>($r1, $z0)	timediff:407
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 6ms
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;1;%;<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://api2.iheart.com/api/v1/account/loginOrCreateOauthUser;pname=android-appstore;deviceid=c2491be1-02b2-3e48-bdf3-e5c207d00c56;clienttype=AndroidConnect;carrier=nTelos;iheartradioversion=1.10.0;osversion=4.4.2;devicename=SM-G955N;%;POST;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(16819): header:Content-Type: application/json;charset=UTF-8
I/System.out(16819): Transfer-Encoding: chunked
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:08 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-bur17520-BUR
I/System.out(16819): X-Cache: MISS
I/System.out(16819): X-Cache-Hits: 0
I/System.out(16819): X-Timer: S1524029108.311686,VS0,VE313
I/System.out(16819): Vary: Accept-Encoding, X-hostName, X-Accept, X-Locale
I/System.out(16819): X-BACKEND: F_HAProxy
I/System.out(16819): Access-Control-Allow-Headers: X-hostName, X-User-Id, X-Session-Id, Content-Type, X-IHR-Profile-ID, X-IHR-Session-ID, X-Locale, Authorization
I/System.out(16819): Access-Control-Allow-Origin: *
I/System.out(16819): Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029108306
I/System.out(16819): OkHttp-Received-Millis: 1524029108632
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:411
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = interfaceinvoke $r7.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:432
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
W/ViewRootImpl(  533): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020891, downTime=1020891, deviceId=-1, source=0x101 }
W/ViewRootImpl(  533): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020894, downTime=1020894, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020881, downTime=1020881, deviceId=-1, source=0x101 }
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;2;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://api2.iheart.com/api/v1/account/loginOrCreateOauthUser;pname=android-appstore;deviceid=c2491be1-02b2-3e48-bdf3-e5c207d00c56;clienttype=AndroidConnect;carrier=nTelos;iheartradioversion=1.10.0;osversion=4.4.2;devicename=SM-G955N;%;POST;%;[];%;[];%;[];%;[];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(16819): header:Content-Type: application/json;charset=UTF-8
I/System.out(16819): Transfer-Encoding: chunked
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:08 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-bur17520-BUR
I/System.out(16819): X-Cache: MISS
I/System.out(16819): X-Cache-Hits: 0
I/System.out(16819): X-Timer: S1524029108.311686,VS0,VE313
I/System.out(16819): Vary: Accept-Encoding, X-hostName, X-Accept, X-Locale
I/System.out(16819): X-BACKEND: F_HAProxy
I/System.out(16819): Access-Control-Allow-Headers: X-hostName, X-User-Id, X-Session-Id, Content-Type, X-IHR-Profile-ID, X-IHR-Session-ID, X-Locale, Authorization
I/System.out(16819): Access-Control-Allow-Origin: *
I/System.out(16819): Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029108306
I/System.out(16819): OkHttp-Received-Millis: 1524029108632
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:436
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>($z0)	timediff:437
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>($r2, $z1)	timediff:437
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$i0 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r5 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:$r8 = virtualinvoke $r4.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>($r8)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void endOfInput(boolean)>(1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$ChunkedSource: long read(okio.Buffer,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$ChunkedSource: void readChunkSize()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.http.ParseableBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:2
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r2, $r3)	timediff:4
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r5 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r6.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:441
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:304
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r33 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): URLConn;%;3;%;<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>;%;$r33 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://analytics.localytics.com/api/v2/applications/209bf21abe0ebbddb41c5aa-f2c2c8e4-2ee8-11e4-a36d-009c5fda0a25/amp;%;false;%;0;%;no-cache, no-store, max-age=0;%;Not found;%;Not found;%;Not found
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:72
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/MediaFocusControl(  481):   Remote Control   registerMediaButtonIntent() for PendingIntent{4ac10138: PendingIntentRecord{4abcba44 com.clearchannel.iheartradio.connect broadcastIntent}}
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void cancel()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.HttpEngine: void cancel()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.AmpService$CallCanceller: void run()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
D/BluetoothAdapter(  828): 1249413012: getState() :  mService = null. Returning STATE_OFF
W/BackupManagerService(  481): dataChanged but no participant pkg='com.android.providers.settings' uid=10010
D/BluetoothAdapter(  828): 1249413012: getState() :  mService = null. Returning STATE_OFF
D/dalvikvm(16819): GC_CONCURRENT freed 1240K, 15% free 7556K/8860K, paused 0ms+1ms, total 12ms
W/BackupManagerService(  481): dataChanged but no participant pkg='com.android.providers.settings' uid=10010
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void <init>(com.clearchannel.iheartradio.http.OkRequest$Method,java.lang.String,com.clearchannel.iheartradio.http.HeaderHelper,com.clearchannel.iheartradio.utils.Platform,com.clearchannel.iheartradio.http.PlatformSpecificParamFactory)>	sig:specialinvoke $r7.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:specialinvoke $r2.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:$r8 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r6 = virtualinvoke $r4.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r5)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>($r1, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>($r0, $r1, $z0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r3, $i1, $r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r4)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r7.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r8, $r1, 0, 0, $z0, null, null, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:1
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r2.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r3, null, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r2 = virtualinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$i1 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: int allocationLimit()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:virtualinvoke $r2.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isClosed()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isOutputShutdown()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$z2 = virtualinvoke $r2.<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>($z1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z0, $z1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:specialinvoke r14.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.internal.http.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r0, $r8, $r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:4
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r0.<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>($r1, 0)	timediff:4
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:interfaceinvoke $r5.<okhttp3.internal.http.HttpStream: void setHttpEngine(okhttp3.internal.http.HttpEngine)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: boolean writeRequestHeadersEagerly()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void sendRequest()>()	timediff:2
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(okhttp3.internal.http.HttpEngine,int,okhttp3.Request)>($r0, 0, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = virtualinvoke $r5.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:interfaceinvoke $r4.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r5)	timediff:4
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r18 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream access$000(okhttp3.internal.http.HttpEngine)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: void writingRequestHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:interfaceinvoke $r18.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Request access$102(okhttp3.internal.http.HttpEngine,okhttp3.Request)>($r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
W/InputMethodManagerService(  481): Starting input on non-focused client com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9186cc (uid=10188 pid=16819)
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:426
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String,int)>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>	sig:$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): URLConn;%;4;%;<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>;%;$r2 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://settings.crashlytics.com/spi/v2/platforms/android/apps/com.clearchannel.iheartradio.connect/settings?instance=a4ca1a2711c164c5e1868e2e062aa5eb1984a666&source=1&build_version=1100904&icon_hash=0f15ad651d9c6b284fd3cb5a9a8bbcb836988780&display_version=1.10.0;%;false;%;Not found;%;Not found;%;Not found;%;Not found;%;Not found
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1)	timediff:0
W/InputEventReceiver(  533): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  533): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(  533): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(  533): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=-24.514343, y[0]=-77.23622, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1021001, downTime=1021001, deviceId=0, source=0x1002 }
W/ViewRootImpl(  533): Dropping event due to root view being removed: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1020998, downTime=1020998, deviceId=-1, source=0x101 }
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(16819): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:1
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
I/System.out(16819): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:72
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:72
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r6 = virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r8, $r9)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r9, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r10 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r10.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r11 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r10)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>()	timediff:73
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r16 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>($r4)	timediff:73
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$i1 = virtualinvoke $r16.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r1 = virtualinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:74
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:virtualinvoke $r0.<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 1517K, 18% free 7630K/9208K, paused 0ms+0ms, total 4ms
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 3ms
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:3
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:3
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:3
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:3
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r1)	timediff:4
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void maybeCache()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine: void maybeCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response cacheWritingResponse(okhttp3.internal.http.CacheRequest,okhttp3.Response)>($r20, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r8 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
D/dalvikvm(16819): WAIT_FOR_CONCURRENT_GC blocked 4ms
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:specialinvoke $r11.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r3 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>($r6)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void readResponse()>()	timediff:79
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r11 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Response getResponse()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r4 = virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r1 = interfaceinvoke $r4.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$i0 = virtualinvoke $r3.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = virtualinvoke $r3.<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>($r1, $z0)	timediff:81
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;5;%;<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://api2.iheart.com/api/v1/bootstrap/getClientConfig?deviceName=AndroidConnect&clientVersion=1.10.0&sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[];%;[public, max-age=150];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(16819): header:Content-Type: application/json;charset=UTF-8
I/System.out(16819): ETag: 34FA43DD54175857D92E4DD7F94E9F44
I/System.out(16819): Cache-Control: public, max-age=150
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:08 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-iad2120-IAD, cache-bur17520-BUR
I/System.out(16819): X-Cache: MISS, MISS
I/System.out(16819): X-Cache-Hits: 0, 0
I/System.out(16819): X-Timer: S1524029109.732788,VS0,VE68
I/System.out(16819): Vary: Accept-Encoding, X-hostName, X-Accept, X-Locale
I/System.out(16819): X-BACKEND: cluster_dir_chash_bur_ca_us
I/System.out(16819): Access-Control-Allow-Headers: X-hostName, X-User-Id, X-Session-Id, Content-Type, X-IHR-Profile-ID, X-IHR-Session-ID, X-Locale, Authorization
I/System.out(16819): Access-Control-Allow-Origin: *
I/System.out(16819): Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029108734
I/System.out(16819): OkHttp-Received-Millis: 1524029108807
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:86
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = interfaceinvoke $r7.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:86
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;6;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://api2.iheart.com/api/v1/bootstrap/getClientConfig?deviceName=AndroidConnect&clientVersion=1.10.0&sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[];%;[public, max-age=150];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:1
I/System.out(16819): header:Content-Type: application/json;charset=UTF-8
I/System.out(16819): ETag: 34FA43DD54175857D92E4DD7F94E9F44
I/System.out(16819): Cache-Control: public, max-age=150
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:08 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-iad2120-IAD, cache-bur17520-BUR
I/System.out(16819): X-Cache: MISS, MISS
I/System.out(16819): X-Cache-Hits: 0, 0
I/System.out(16819): X-Timer: S1524029109.732788,VS0,VE68
I/System.out(16819): Vary: Accept-Encoding, X-hostName, X-Accept, X-Locale
I/System.out(16819): X-BACKEND: cluster_dir_chash_bur_ca_us
I/System.out(16819): Access-Control-Allow-Headers: X-hostName, X-User-Id, X-Session-Id, Content-Type, X-IHR-Profile-ID, X-IHR-Session-ID, X-Locale, Authorization
I/System.out(16819): Access-Control-Allow-Origin: *
I/System.out(16819): Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029108734
I/System.out(16819): OkHttp-Received-Millis: 1524029108807
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:88
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>($z0)	timediff:88
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>($r2, $z1)	timediff:88
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$i0 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r5 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:2
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:2
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:2
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.ParseableBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:2
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r2, $r3)	timediff:3
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r5 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r6.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:91
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void cancel()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.HttpEngine: void cancel()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.AmpService$CallCanceller: void run()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void <init>(com.clearchannel.iheartradio.http.OkRequest$Method,java.lang.String,com.clearchannel.iheartradio.http.HeaderHelper,com.clearchannel.iheartradio.utils.Platform,com.clearchannel.iheartradio.http.PlatformSpecificParamFactory)>	sig:specialinvoke $r7.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:specialinvoke $r2.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
D/dalvikvm(16819): GC_FOR_ALLOC freed 1171K, 18% free 7713K/9308K, paused 6ms, total 6ms
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:6
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:1
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:$r8 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r6 = virtualinvoke $r4.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r5)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>($r1, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>($r0, $r1, $z0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r0.<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>($r1, 0)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:interfaceinvoke $r4.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r3, $i1, $r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r4)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:1
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r7.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r8, $r1, 0, 0, $z0, null, null, null)	timediff:2
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r2.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r3, null, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r2 = virtualinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$i1 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: int allocationLimit()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r2 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r6.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021108, downTime=1021108, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021112, downTime=1021112, deviceId=-1, source=0x101 }
I/System.out(16819): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:15
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r14 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r2)	timediff:15
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:15
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:15
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r4.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:2
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r4)	timediff:2
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:17
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r19 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r4.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:3
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r7.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r3, $r8, $i0)	timediff:3
I/System.out(16819): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:20
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z0, $z1)	timediff:20
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:specialinvoke r14.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.internal.http.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r0, $r8, $r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:20
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>()	timediff:20
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:interfaceinvoke $r5.<okhttp3.internal.http.HttpStream: void setHttpEngine(okhttp3.internal.http.HttpEngine)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: boolean writeRequestHeadersEagerly()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void sendRequest()>()	timediff:21
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(okhttp3.internal.http.HttpEngine,int,okhttp3.Request)>($r0, 0, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = virtualinvoke $r5.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r18 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream access$000(okhttp3.internal.http.HttpEngine)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: void writingRequestHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:interfaceinvoke $r18.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Request access$102(okhttp3.internal.http.HttpEngine,okhttp3.Request)>($r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm(16819): GC_FOR_ALLOC freed 1397K, 19% free 7678K/9420K, paused 4ms, total 4ms
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9ea57c attribute=null, token = android.os.BinderProxy@4a915ae0
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021209, downTime=1021209, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_SEMICOLON, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021220, downTime=1021220, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:233
V/FlingTracker(  533): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  533): java.lang.Throwable
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  533): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  533): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  533): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  533): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  533): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  533): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  533): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab7e70c attribute=null, token = android.os.BinderProxy@4a915ae0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021277, downTime=1021277, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021279, downTime=1021279, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021280, downTime=1021280, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021281, downTime=1021281, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021284, downTime=1021284, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9b3c70 attribute=null, token = android.os.BinderProxy@4a915ae0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:70
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)	timediff:0
I/System.out(16819): <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>###specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1)###https://e.crashlytics.com/spi/v2/events
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$i0 = virtualinvoke $r3.<java.net.URL: int getPort()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r7 = virtualinvoke $r3.<java.net.URL: java.lang.String getPath()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getQuery()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, $r7, $r8, null)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>	sig:$r8 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>	sig:specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): <io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>###specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4)###https://e.crashlytics.com/spi/v2/events
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory$1: java.net.HttpURLConnection create(java.net.URL)>	sig:$r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1)	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>	sig:$r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021368, downTime=1021368, deviceId=-1, source=0x101 }
I/System.out(16819): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:252
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:252
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r6 = virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r8, $r9)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r9, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r10 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r10.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r11 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>()	timediff:253
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r16 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>($r4)	timediff:253
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$i1 = virtualinvoke $r16.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r1 = virtualinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:254
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:virtualinvoke $r0.<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void maybeCache()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine: void maybeCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response cacheWritingResponse(okhttp3.internal.http.CacheRequest,okhttp3.Response)>($r20, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>($r6)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void readResponse()>()	timediff:256
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r11 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Response getResponse()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r4 = virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r1 = interfaceinvoke $r4.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$i0 = virtualinvoke $r3.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = virtualinvoke $r3.<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>($r1, $z0)	timediff:279
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;7;%;<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;http://auto.iheart.com/runtime/prod/common/android_integration_config_1.10.0_prod.json?sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[5671];%;[];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(16819): header:x-amz-id-2: 7fgQE5e320A5rfEEs1WB8gtLwijLcnewQU5kdFmW+UF/aIzTrZ2i6DFWvm6OrWnNgTRw1fKd0SQ=
I/System.out(16819): x-amz-request-id: 6E84691CF6BD5FD8
I/System.out(16819): Last-Modified: Mon, 10 Jul 2017 18:14:47 GMT
I/System.out(16819): ETag: "e57637b3ccd6e9f7eb9af4a14a927090"
I/System.out(16819): Content-Type: application/json
I/System.out(16819): Server: AmazonS3
I/System.out(16819): Content-Length: 5671
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:09 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-bur17540-BUR
I/System.out(16819): X-Cache: MISS
I/System.out(16819): X-Cache-Hits: 0
I/System.out(16819): X-Timer: S1524029109.886808,VS0,VE239
I/System.out(16819): OkHttp-Sent-Millis: 1524029108878
I/System.out(16819): OkHttp-Received-Millis: 1524029109131
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:280
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = interfaceinvoke $r7.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:280
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;8;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;http://auto.iheart.com/runtime/prod/common/android_integration_config_1.10.0_prod.json?sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[5671];%;[];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(16819): header:x-amz-id-2: 7fgQE5e320A5rfEEs1WB8gtLwijLcnewQU5kdFmW+UF/aIzTrZ2i6DFWvm6OrWnNgTRw1fKd0SQ=
I/System.out(16819): x-amz-request-id: 6E84691CF6BD5FD8
I/System.out(16819): Last-Modified: Mon, 10 Jul 2017 18:14:47 GMT
I/System.out(16819): ETag: "e57637b3ccd6e9f7eb9af4a14a927090"
I/System.out(16819): Content-Type: application/json
I/System.out(16819): Server: AmazonS3
I/System.out(16819): Content-Length: 5671
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:09 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-bur17540-BUR
I/System.out(16819): X-Cache: MISS
I/System.out(16819): X-Cache-Hits: 0
I/System.out(16819): X-Timer: S1524029109.886808,VS0,VE239
I/System.out(16819): OkHttp-Sent-Millis: 1524029108878
I/System.out(16819): OkHttp-Received-Millis: 1524029109131
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:282
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>($z0)	timediff:285
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>($r2, $z1)	timediff:285
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$i0 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r5 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 1523K, 19% free 7660K/9420K, paused 2ms+0ms, total 6ms
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:6
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:6
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:7
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:7
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-3.0, y[0]=4.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1021373, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021375, downTime=1021375, deviceId=-1, source=0x101 }
I/System.out(16819): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:3
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:3
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:3
I/System.out(16819): body:<com.clearchannel.iheartradio.http.ParseableBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:10
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r2, $r3)	timediff:11
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r5 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r6.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:296
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void cancel()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.HttpEngine: void cancel()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.AmpService$CallCanceller: void run()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
I/System.out(16819): body:<io.fabric.sdk.android.services.network.HttpRequest: int code()>	sig:$i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:75
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void <init>(com.clearchannel.iheartradio.http.OkRequest$Method,java.lang.String,com.clearchannel.iheartradio.http.HeaderHelper,com.clearchannel.iheartradio.utils.Platform,com.clearchannel.iheartradio.http.PlatformSpecificParamFactory)>	sig:specialinvoke $r7.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:specialinvoke $r2.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:$r8 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r6 = virtualinvoke $r4.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r5)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>($r1, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>($r0, $r1, $z0, null)	timediff:1
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r3, $i1, $r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r4)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r2 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r3 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r4 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r7.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r8, $r1, 0, 0, $z0, null, null, null)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r2.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r3, null, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r2 = virtualinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$i1 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: int allocationLimit()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r13, $r14)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r15, $r16)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r17, $r18)	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r19, $r20)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:virtualinvoke $r2.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isClosed()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>	sig:$z1 = virtualinvoke $r2.<java.net.Socket: boolean isOutputShutdown()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$z2 = virtualinvoke $r2.<okhttp3.internal.io.RealConnection: boolean isHealthy(boolean)>($z1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z0, $z1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:specialinvoke r14.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.internal.http.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r0, $r8, $r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:interfaceinvoke $r5.<okhttp3.internal.http.HttpStream: void setHttpEngine(okhttp3.internal.http.HttpEngine)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: boolean writeRequestHeadersEagerly()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void sendRequest()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(okhttp3.internal.http.HttpEngine,int,okhttp3.Request)>($r0, 0, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = virtualinvoke $r5.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r18 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream access$000(okhttp3.internal.http.HttpEngine)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: void writingRequestHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:interfaceinvoke $r18.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Request access$102(okhttp3.internal.http.HttpEngine,okhttp3.Request)>($r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:3
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r0.<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>($r1, 0)	timediff:4
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:interfaceinvoke $r4.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r5)	timediff:4
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae368dc attribute=null, token = android.os.BinderProxy@4a915ae0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_MULTIPLE, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x400, repeatCount=51, eventTime=1021494, downTime=1021494, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1021494, downTime=1021494, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1021494, downTime=1021494, deviceId=-1, source=0x101 }
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac0d898 attribute=null, token = android.os.BinderProxy@4a915ae0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021525, downTime=1021525, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021531, downTime=1021531, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021532, downTime=1021532, deviceId=-1, source=0x101 }
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/System.out(16819): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:74
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:74
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r6 = virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r8, $r9)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r9, $r8)	timediff:1
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r10 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r10.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r11 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>()	timediff:75
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r16 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>($r4)	timediff:75
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$i1 = virtualinvoke $r16.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r1 = virtualinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:76
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:virtualinvoke $r0.<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void maybeCache()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine: void maybeCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response cacheWritingResponse(okhttp3.internal.http.CacheRequest,okhttp3.Response)>($r20, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r8 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:specialinvoke $r11.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r3 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>($r6)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void readResponse()>()	timediff:78
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r11 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Response getResponse()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r4 = virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r1 = interfaceinvoke $r4.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$i0 = virtualinvoke $r3.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = virtualinvoke $r3.<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>($r1, $z0)	timediff:80
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:4
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;9;%;<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://api2.iheart.com/api/v2/content/markets?lat=33.985805&lng=-118.25411166666666&X-hostName=ihrc-and.auto.us&sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[];%;[public, max-age=1000];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(16819): header:Content-Type: application/json;charset=UTF-8
I/System.out(16819): ETag: BFB36E1AD252EEB25A9988284AF990FF
I/System.out(16819): Cache-Control: public, max-age=1000
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:09 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-iad2134-IAD, cache-bur17520-BUR
I/System.out(16819): X-Cache: MISS, MISS
I/System.out(16819): X-Cache-Hits: 0, 0
I/System.out(16819): X-Timer: S1524029109.227586,VS0,VE71
I/System.out(16819): Vary: Accept-Encoding, X-hostName, X-Accept, X-Locale
I/System.out(16819): X-BACKEND: cluster_dir_chash_bur_ca_us
I/System.out(16819): Access-Control-Allow-Headers: X-hostName, X-User-Id, X-Session-Id, Content-Type, X-IHR-Profile-ID, X-IHR-Session-ID, X-Locale, Authorization
I/System.out(16819): Access-Control-Allow-Origin: *
I/System.out(16819): Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029109229
I/System.out(16819): OkHttp-Received-Millis: 1524029109304
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:85
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = interfaceinvoke $r7.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:85
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 1572K, 19% free 7702K/9420K, paused 2ms+1ms, total 7ms
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_TV_POWER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021536, downTime=1021536, deviceId=-1, source=0x101 }
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:5
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:4
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:4
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;10;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;https://api2.iheart.com/api/v2/content/markets?lat=33.985805&lng=-118.25411166666666&X-hostName=ihrc-and.auto.us&sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[];%;[public, max-age=1000];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(16819): header:Content-Type: application/json;charset=UTF-8
I/System.out(16819): ETag: BFB36E1AD252EEB25A9988284AF990FF
I/System.out(16819): Cache-Control: public, max-age=1000
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:09 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-iad2134-IAD, cache-bur17520-BUR
I/System.out(16819): X-Cache: MISS, MISS
I/System.out(16819): X-Cache-Hits: 0, 0
I/System.out(16819): X-Timer: S1524029109.227586,VS0,VE71
I/System.out(16819): Vary: Accept-Encoding, X-hostName, X-Accept, X-Locale
I/System.out(16819): X-BACKEND: cluster_dir_chash_bur_ca_us
I/System.out(16819): Access-Control-Allow-Headers: X-hostName, X-User-Id, X-Session-Id, Content-Type, X-IHR-Profile-ID, X-IHR-Session-ID, X-Locale, Authorization
I/System.out(16819): Access-Control-Allow-Origin: *
I/System.out(16819): Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029109229
I/System.out(16819): OkHttp-Received-Millis: 1524029109304
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:102
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>($z0)	timediff:102
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>($r2, $z1)	timediff:102
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$i0 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r5 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:1
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.ParseableBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:1
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r2, $r3)	timediff:3
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r5 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r6.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:105
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void <init>(com.clearchannel.iheartradio.http.OkRequest$Method,java.lang.String,com.clearchannel.iheartradio.http.HeaderHelper,com.clearchannel.iheartradio.utils.Platform,com.clearchannel.iheartradio.http.PlatformSpecificParamFactory)>	sig:specialinvoke $r7.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: void buildHeaders()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:specialinvoke $r2.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:1
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.HeaderHelper: okhttp3.Headers toHeaders(java.util.List)>	sig:$r8 = virtualinvoke $r2.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)>($r2, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)>($r2, $i1, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)>($r2, $i0, $i2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i3, $i2, "@/\\?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i0 = staticinvoke <okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)>($r2, $i3, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r2, $i3, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i5 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i2, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:0
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r1, $i0, $i1, "/\\")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r1, $i0, $i1, " \"<>^`{}|/\\?#", $z1, 0, 0, 1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>	sig:$z1 = specialinvoke $r0.<okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)>($r1, $i0, $i3, $z0, 1)	timediff:1
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)>($r2, $i0, $i5)	timediff:2
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r2, $i5, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $i5, $i3, " \"\'<>#", 1, 0, 1, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>	sig:$r6 = staticinvoke <okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String)>(null, $r0)	timediff:2
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>	sig:$r4 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r1)	timediff:2
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r3)	timediff:2
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkRequest$Builder: okhttp3.Request buildGet()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:$r4 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:$r2 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:$r6 = virtualinvoke $r4.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r5)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>	sig:specialinvoke $r0.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean)>($r1, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:specialinvoke $r6.<okhttp3.RealCall$AsyncCall: void <init>(okhttp3.RealCall,okhttp3.Callback,boolean,okhttp3.RealCall$1)>($r0, $r1, $z0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$i1 = specialinvoke $r0.<okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:specialinvoke $r1.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r0, 0, $r2, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:specialinvoke $r2.<okhttp3.RealCall$ApplicationInterceptorChain: void <init>(okhttp3.RealCall,int,okhttp3.Request,boolean)>($r3, $i1, $r1, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r2.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r3 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r4)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r2 = virtualinvoke $r3.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.OkHttpClient: java.util.List interceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.RequestBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$i0 = virtualinvoke $r6.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r8 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r9 = virtualinvoke $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r10 = virtualinvoke $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r11 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r12 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List protocols()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r13 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:$r14 = virtualinvoke $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:specialinvoke $r13.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r12)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, $i0, $i1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>	sig:$r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>	sig:$r3 = staticinvoke <okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)>($r1, 0, $i0)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r2 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r2, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>	sig:$r0 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)>($r0, 0, $i0, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>	sig:$r5 = staticinvoke <okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)>($r5, $z0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r4 = specialinvoke $r0.<okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)>($r4, 0)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>	sig:$r3 = virtualinvoke $r1.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>	sig:specialinvoke $r0.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>	sig:specialinvoke $r3.<okhttp3.HttpUrl: void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>	sig:$r10 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>	sig:specialinvoke $r5.<okhttp3.Address: void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r7, $i0, $r8, $r9, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:$r7 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Address createAddress(okhttp3.OkHttpClient,okhttp3.Request)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r5 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Address: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r6 = virtualinvoke $r5.<okhttp3.Address: java.net.ProxySelector proxySelector()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.HttpUrl$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedUsername()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPassword()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r3, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.util.List encodedPathSegments()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i0, $i1, 47)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r4 = virtualinvoke $r0.<okhttp3.HttpUrl: java.util.List encodedPathSegments()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:virtualinvoke $r1.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedFragment()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>	sig:$r1 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)>($r0, 0, $i0, $r1, $z0, $z1, $z2, $z3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>	sig:$r3 = staticinvoke <okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r3, "[]", 1, 1, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: int effectivePort()>	sig:$i0 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl$Builder: int effectivePort()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl$Builder: java.lang.String toString()>	sig:staticinvoke <okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:$r4 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.net.URI uri()>	sig:specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r7 = virtualinvoke $r1.<okhttp3.HttpUrl: java.net.URI uri()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>	sig:$r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)>($r5, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>	sig:specialinvoke $r3.<okhttp3.internal.http.RouteSelector: void <init>(okhttp3.Address,okhttp3.internal.RouteDatabase)>($r2, $r4)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>	sig:specialinvoke $r3.<okhttp3.internal.http.StreamAllocation: void <init>(okhttp3.ConnectionPool,okhttp3.Address)>($r6, $r7)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:specialinvoke $r7.<okhttp3.internal.http.HttpEngine: void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean,boolean,boolean,okhttp3.internal.http.StreamAllocation,okhttp3.internal.http.RetryableSink,okhttp3.Response)>($r8, $r1, 0, 0, $z0, null, null, null)	timediff:1
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r2 = staticinvoke <okhttp3.Request: okhttp3.HttpUrl access$600(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.Request: java.lang.String access$700(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r4 = staticinvoke <okhttp3.Request: okhttp3.RequestBody access$800(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r5 = staticinvoke <okhttp3.Request: java.lang.Object access$900(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r6 = staticinvoke <okhttp3.Request: okhttp3.Headers access$1000(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request$Builder: void <init>(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.Request$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Request$Builder: void <init>(okhttp3.Request,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Request$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Host")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i0 = virtualinvoke $r0.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String scheme()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$i1 = staticinvoke <okhttp3.HttpUrl: int defaultPort(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>	sig:$r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = staticinvoke <okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("Accept-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r7 = interfaceinvoke $r6.<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String header(java.lang.String)>("User-Agent")	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r2 = staticinvoke <okhttp3.Request$Builder: okhttp3.HttpUrl access$000(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r3 = staticinvoke <okhttp3.Request$Builder: java.lang.String access$100(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r4 = staticinvoke <okhttp3.Request$Builder: okhttp3.Headers$Builder access$200(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r6 = staticinvoke <okhttp3.Request$Builder: okhttp3.RequestBody access$300(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder)>	sig:$r7 = staticinvoke <okhttp3.Request$Builder: java.lang.Object access$400(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>	sig:specialinvoke $r0.<okhttp3.Request: void <init>(okhttp3.Request$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request$Builder: okhttp3.Request build()>	sig:specialinvoke $r3.<okhttp3.Request: void <init>(okhttp3.Request$Builder,okhttp3.Request$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Request$Builder: okhttp3.Request build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r4 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Request networkRequest(okhttp3.Request)>($r4)	timediff:1
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:specialinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: void <init>(long,okhttp3.Request,okhttp3.Response)>($l0, $r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>	sig:specialinvoke $r2.<okhttp3.internal.http.CacheStrategy: void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.http.CacheStrategy$1)>($r3, null, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy getCandidate()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$i6 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i4)	timediff:0
I/System.out(16819): body:<okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>	sig:specialinvoke $r6.<okhttp3.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String)>($z0, $z1, $i0, $i1, $z2, $z3, $z4, $i2, $i3, $z5, $z6, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: okhttp3.CacheControl cacheControl()>	sig:$r1 = staticinvoke <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>	sig:$z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean onlyIfCached()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r2 = virtualinvoke $r9.<okhttp3.internal.http.CacheStrategy$Factory: okhttp3.internal.http.CacheStrategy get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i0 = virtualinvoke $r2.<okhttp3.OkHttpClient: int connectTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i1 = virtualinvoke $r2.<okhttp3.OkHttpClient: int readTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$i2 = virtualinvoke $r2.<okhttp3.OkHttpClient: int writeTimeoutMillis()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$z1 = virtualinvoke $r2.<okhttp3.OkHttpClient: boolean retryOnConnectionFailure()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$i1 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: int allocationLimit()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$i1 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: int allocationLimit()>()	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r9 = virtualinvoke $r7.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: boolean equals(java.lang.Object)>	sig:$z0 = virtualinvoke $r4.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$z0 = virtualinvoke $r1.<okhttp3.Address: boolean equals(java.lang.Object)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>	sig:$r4 = virtualinvoke $r1.<okhttp3.ConnectionPool: okhttp3.internal.io.RealConnection get(okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r2, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r1 = virtualinvoke $r9.<okhttp3.internal.Internal: okhttp3.internal.io.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.http.StreamAllocation)>($r10, $r3, $r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextProxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r2 = virtualinvoke $r7.<okhttp3.HttpUrl: java.lang.String host()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Address: okhttp3.HttpUrl url()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$i1 = virtualinvoke $r7.<okhttp3.HttpUrl: int port()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r5 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r15 = virtualinvoke $r6.<okhttp3.Address: okhttp3.Dns dns()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dns$1: java.util.List lookup(java.lang.String)>	sig:$r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:$r14 = interfaceinvoke $r15.<okhttp3.Dns: java.util.List lookup(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>	sig:specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r17, $i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>	sig:specialinvoke $r0.<okhttp3.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r8)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.Proxy nextProxy()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:specialinvoke $r4.<okhttp3.Route: void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>	sig:$z0 = virtualinvoke $r6.<okhttp3.internal.RouteDatabase: boolean shouldPostpone(okhttp3.Route)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r11.<okhttp3.internal.http.RouteSelector: okhttp3.Route next()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:specialinvoke $r1.<okhttp3.internal.io.RealConnection: void <init>(okhttp3.Route)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r0.<okhttp3.internal.http.StreamAllocation: void acquire(okhttp3.internal.io.RealConnection)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:virtualinvoke $r1.<okhttp3.ConnectionPool: void put(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r9.<okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r15 = virtualinvoke $r3.<okhttp3.Address: java.util.List connectionSpecs()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r2.<okhttp3.internal.ConnectionSpecSelector: void <init>(java.util.List)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r6 = virtualinvoke $r8.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r10 = virtualinvoke $r8.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r11 = virtualinvoke $r10.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r17 = virtualinvoke $r6.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:$r19 = virtualinvoke $r9.<okhttp3.Address: javax.net.SocketFactory socketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r7 = staticinvoke <okhttp3.internal.Platform: okhttp3.internal.Platform get()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r8 = virtualinvoke $r4.<okhttp3.Route: java.net.InetSocketAddress socketAddress()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>	sig:virtualinvoke $r2.<okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)>($r6)	timediff:4
I/System.out(16819): body:<okhttp3.RealCall: void enqueue(okhttp3.Callback)>	sig:virtualinvoke $r0.<okhttp3.RealCall: void enqueue(okhttp3.Callback,boolean)>($r1, 0)	timediff:4
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: okhttp3.Call executeInternally()>	sig:interfaceinvoke $r4.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r5)	timediff:4
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void cancel()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.HttpEngine: void cancel()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.AmpService$CallCanceller: void run()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>	sig:virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0)	timediff:3
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:virtualinvoke $r7.<okhttp3.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r3, $r8, $i0)	timediff:3
I/System.out(16819): body:<okio.Okio: okio.Source source(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<okio.Okio: okio.Sink sink(java.net.Socket)>	sig:$r3 = virtualinvoke $r0.<java.net.Socket: java.io.OutputStream getOutputStream()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r11 = virtualinvoke $r4.<okhttp3.Route: okhttp3.Address address()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>	sig:$r12 = virtualinvoke $r11.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.io.RealConnection: void connectSocket(int,int,int,okhttp3.internal.ConnectionSpecSelector)>($i0, $i1, $i2, $r2)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r1.<okhttp3.internal.io.RealConnection: void connect(int,int,int,java.util.List,boolean)>($i0, $i1, $i2, $r15, $z0)	timediff:3
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.RouteDatabase routeDatabase(okhttp3.ConnectionPool)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r16 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.RouteDatabase routeDatabase()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:$r12 = virtualinvoke $r1.<okhttp3.internal.io.RealConnection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.Address: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.Route: int hashCode()>	sig:$i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>	sig:virtualinvoke $r16.<okhttp3.internal.RouteDatabase: void connected(okhttp3.Route)>($r12)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>	sig:$r2 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)>($i0, $i1, $i2, $z0)	timediff:5
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z0, $z1)	timediff:5
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: java.net.Socket socket()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>($i1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>	sig:specialinvoke r14.<okhttp3.internal.http.Http1xStream: void <init>(okhttp3.internal.http.StreamAllocation,okio.BufferedSource,okio.BufferedSink)>($r0, $r8, $r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>	sig:$r5 = virtualinvoke $r4.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)>($i0, $i1, $i2, $z1, $z0)	timediff:5
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$r5 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream connect()>()	timediff:5
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:interfaceinvoke $r5.<okhttp3.internal.http.HttpStream: void setHttpEngine(okhttp3.internal.http.HttpEngine)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void sendRequest()>	sig:$z0 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: boolean writeRequestHeadersEagerly()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void sendRequest()>()	timediff:6
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(okhttp3.internal.http.HttpEngine,int,okhttp3.Request)>($r0, 0, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r3 = virtualinvoke $r5.<okhttp3.OkHttpClient: java.util.List networkInterceptors()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r18 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.internal.http.HttpStream access$000(okhttp3.internal.http.HttpEngine)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: void writingRequestHeaders()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>	sig:$r2 = virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r3 = virtualinvoke $r2.<okhttp3.internal.http.HttpEngine: okhttp3.Connection getConnection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r4 = interfaceinvoke $r3.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r5 = virtualinvoke $r4.<okhttp3.Route: java.net.Proxy proxy()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.Request: boolean isHttps()>	sig:$z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedPath()>	sig:$i1 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)>($r2, $i0, $i1, "?#")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>()	timediff:0
I/System.out(16819): body:<okhttp3.HttpUrl: java.lang.String encodedQuery()>	sig:$i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r3, $i1, $i2, 35)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>	sig:$r3 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>	sig:$r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r7 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)>($r1, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Request: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$i1 = virtualinvoke $r1.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021595, downTime=1021595, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac23960 attribute=null, token = android.os.BinderProxy@4a915ae0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void writeRequestHeaders(okhttp3.Request)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: void writeRequest(okhttp3.Headers,java.lang.String)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:interfaceinvoke $r18.<okhttp3.internal.http.HttpStream: void writeRequestHeaders(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Request access$102(okhttp3.internal.http.HttpEngine,okhttp3.Request)>($r4, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$z0 = virtualinvoke $r4.<okhttp3.internal.http.HttpEngine: boolean permitsRequestBody(okhttp3.Request)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: void finishRequest()>()	timediff:0
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021668, downTime=1021668, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021674, downTime=1021674, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-3.0, y[0]=-5.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1021676, downTime=-1, deviceId=0, source=0x10004 }
I/System.out(16819): body:<okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>	sig:specialinvoke $r6.<okhttp3.internal.http.StatusLine: void <init>(okhttp3.Protocol,int,java.lang.String)>($r3, $i3, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r7 = staticinvoke <okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:specialinvoke $r8.<okhttp3.Response$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)>($r9)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder code(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:1
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:1
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>	sig:$r0 = virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)>	sig:virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:virtualinvoke $r4.<okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)>($r1, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r10 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Headers readHeaders()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>	sig:$r8 = virtualinvoke $r8.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r10)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponseHeaders()>	sig:$r1 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okhttp3.Response$Builder readResponse()>()	timediff:95
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.Response$Builder readResponseHeaders()>()	timediff:95
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r6 = virtualinvoke $r5.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r7 = virtualinvoke $r6.<okhttp3.internal.io.RealConnection: okhttp3.Handshake handshake()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)>($r7)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r8, $r9)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:specialinvoke $r0.<okhttp3.Headers$Builder: void checkNameAndValue(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>	sig:virtualinvoke $r0.<okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>	sig:virtualinvoke $r3.<okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)>($r9, $r8)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r10 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r10.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
D/dalvikvm(16819): GC_FOR_ALLOC freed 1614K, 18% free 7728K/9420K, paused 5ms, total 5ms
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Response)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>	sig:$r3 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream$AbstractSource: void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1)>($r1, null)	timediff:0
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>	sig:specialinvoke $r4.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void <init>(okhttp3.internal.http.Http1xStream,long)>($r0, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source newFixedLengthSource(long)>($l0)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r3 = specialinvoke $r0.<okhttp3.internal.http.Http1xStream: okio.Source getTransferStream(okhttp3.Response)>($r1)	timediff:7
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:$r4 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>	sig:specialinvoke $r2.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r4, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r11 = interfaceinvoke $r2.<okhttp3.internal.http.HttpStream: okhttp3.ResponseBody openResponseBody(okhttp3.Response)>($r10)	timediff:7
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r4 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:1
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r1 = virtualinvoke $r4.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:1
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r3 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Request: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r2.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r3.<okhttp3.Request: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: java.lang.String header(java.lang.String)>("Connection")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>	sig:$r1 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response readNetworkResponse()>()	timediff:103
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r16 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response access$200(okhttp3.internal.http.HttpEngine)>($r4)	timediff:103
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$i1 = virtualinvoke $r16.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r1 = virtualinvoke $r13.<okhttp3.internal.http.HttpEngine$NetworkInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:104
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r5 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>	sig:$r4 = virtualinvoke $r2.<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:virtualinvoke $r0.<okhttp3.internal.http.HttpEngine: void receiveHeaders(okhttp3.Headers)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>(null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>	sig:$r0 = virtualinvoke $r2.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = staticinvoke <okhttp3.internal.http.HttpEngine: okhttp3.Response stripBody(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)>("networkResponse", $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r7 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = virtualinvoke $r7.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: okhttp3.Request request()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>	sig:$i0 = virtualinvoke $r0.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$z0 = staticinvoke <okhttp3.internal.http.HttpEngine: boolean hasBody(okhttp3.Response)>($r6)	timediff:1
I/System.out(16819): body:<okhttp3.OkHttpClient$1: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>	sig:$r2 = virtualinvoke $r1.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache internalCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void maybeCache()>	sig:$r3 = virtualinvoke $r1.<okhttp3.internal.Internal: okhttp3.internal.InternalCache internalCache(okhttp3.OkHttpClient)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:specialinvoke $r0.<okhttp3.internal.http.HttpEngine: void maybeCache()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response cacheWritingResponse(okhttp3.internal.http.CacheRequest,okhttp3.Response)>($r20, $r6)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>	sig:$r1 = virtualinvoke $r3.<okhttp3.Headers: java.lang.String get(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: java.lang.String header(java.lang.String)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r4 = virtualinvoke $r3.<okhttp3.Response: java.lang.String header(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r6 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r8 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r8.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Encoding")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r9 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r8 = virtualinvoke $r9.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r2 = staticinvoke <okhttp3.Response: okhttp3.Request access$1100(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r3 = staticinvoke <okhttp3.Response: okhttp3.Protocol access$1200(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$i0 = staticinvoke <okhttp3.Response: int access$1300(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r4 = staticinvoke <okhttp3.Response: java.lang.String access$1400(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r5 = staticinvoke <okhttp3.Response: okhttp3.Handshake access$1500(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r6 = staticinvoke <okhttp3.Response: okhttp3.Headers access$1600(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r8 = staticinvoke <okhttp3.Response: okhttp3.ResponseBody access$1700(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1800(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$1900(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response)>	sig:$r9 = staticinvoke <okhttp3.Response: okhttp3.Response access$2000(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response$Builder: void <init>(okhttp3.Response)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: okhttp3.Response$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Response$Builder: void <init>(okhttp3.Response,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r1.<okhttp3.Response: okhttp3.Response$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:specialinvoke $r1.<okhttp3.Headers$Builder: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)>($r8)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>	sig:specialinvoke $r0.<okhttp3.ResponseBody: void <init>()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:specialinvoke $r11.<okhttp3.internal.http.RealResponseBody: void <init>(okhttp3.Headers,okio.BufferedSource)>($r8, $r7)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r10 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>($r11)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r2 = staticinvoke <okhttp3.Response$Builder: okhttp3.Request access$000(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r3 = staticinvoke <okhttp3.Response$Builder: okhttp3.Protocol access$100(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$i0 = staticinvoke <okhttp3.Response$Builder: int access$200(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r4 = staticinvoke <okhttp3.Response$Builder: java.lang.String access$300(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r5 = staticinvoke <okhttp3.Response$Builder: okhttp3.Handshake access$400(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r6 = staticinvoke <okhttp3.Response$Builder: okhttp3.Headers$Builder access$500(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r2 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>	sig:$r3 = staticinvoke <okhttp3.Headers$Builder: java.util.List access$000(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>	sig:specialinvoke $r0.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Headers$Builder: okhttp3.Headers build()>	sig:specialinvoke $r1.<okhttp3.Headers: void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r7 = virtualinvoke $r6.<okhttp3.Headers$Builder: okhttp3.Headers build()>()	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r8 = staticinvoke <okhttp3.Response$Builder: okhttp3.ResponseBody access$600(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$700(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$800(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder)>	sig:$r9 = staticinvoke <okhttp3.Response$Builder: okhttp3.Response access$900(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>	sig:specialinvoke $r0.<okhttp3.Response: void <init>(okhttp3.Response$Builder)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.Response$Builder: okhttp3.Response build()>	sig:specialinvoke $r6.<okhttp3.Response: void <init>(okhttp3.Response$Builder,okhttp3.Response$1)>($r0, null)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>	sig:$r3 = virtualinvoke $r10.<okhttp3.Response$Builder: okhttp3.Response build()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void readResponse()>	sig:$r6 = specialinvoke $r0.<okhttp3.internal.http.HttpEngine: okhttp3.Response unzip(okhttp3.Response)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void readResponse()>()	timediff:105
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r11 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Response getResponse()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r4 = virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: okhttp3.internal.io.RealConnection connection()>()	timediff:0
D/dalvikvm(16819): GC_CONCURRENT freed 285K, 19% free 7707K/9420K, paused 0ms+1ms, total 6ms
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r1 = interfaceinvoke $r4.<okhttp3.Connection: okhttp3.Route route()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$i0 = virtualinvoke $r3.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:$r1 = virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: okhttp3.Request followUpRequest()>()	timediff:2
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void release()>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>(0, 1, 0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void release()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>	sig:virtualinvoke $r7.<okhttp3.internal.http.HttpEngine: void releaseStreamAllocation()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = virtualinvoke $r3.<okhttp3.RealCall: okhttp3.Response getResponse(okhttp3.Request,boolean)>($r1, $z0)	timediff:115
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021676, downTime=1021676, deviceId=-1, source=0x101 }
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;11;%;<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>;%;$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;http://api2.iheart.com/v2/cms/script/current-time/?sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[];%;[max-age=30];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:0
I/System.out(16819): header:Access-Control-Allow-Credentials: true
I/System.out(16819): Cache-Control: max-age=30
I/System.out(16819): Content-Type: application/json; charset=utf-8
I/System.out(16819): Etag: W/"23-eGexKTtX9QUOWAM6zeMHrw"
I/System.out(16819): X-Powered-By: Express
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:09 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-jfk8130-JFK, cache-bur17551-BUR, cache-bur17525-BUR
I/System.out(16819): X-Cache: MISS, MISS, MISS
I/System.out(16819): X-Cache-Hits: 0, 0, 0
I/System.out(16819): X-Timer: S1524029109.365383,VS0,VE81
I/System.out(16819): Vary: Accept-Encoding, Accept, Origin, Origin
I/System.out(16819): X-BACKEND: cluster_dir_chash_bur_ca_us
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029109357
I/System.out(16819): OkHttp-Received-Millis: 1524029109453
I/System.out(16819): body:<com.clearchannel.iheartradio.http.intercept.UserAgentInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>	sig:$r5 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:119
I/System.out(16819): body:<okhttp3.RealCall$ApplicationInterceptorChain: okhttp3.Response proceed(okhttp3.Request)>	sig:$r8 = interfaceinvoke $r7.<okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>($r2)	timediff:119
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:responseHeaders = virtualinvoke resp.<okhttp3.Response: okhttp3.Headers headers()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r0 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r1 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Cache-Control")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r2 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Expires")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r3 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Age")	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.util.List values(java.lang.String)>	sig:$r3 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r4 = virtualinvoke responseHeaders.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie")	timediff:1
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r13 = virtualinvoke req.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r14 = virtualinvoke $r13.<okhttp3.HttpUrl: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r17 = virtualinvoke req.<okhttp3.Request: java.lang.String method()>()	timediff:0
I/System.out(16819): OkHttpP;%;12;%;<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>;%;$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2);%;http://api2.iheart.com/v2/cms/script/current-time/?sysInfo=VVN8fHx8fHx8fGVuX1VTfHxTTS1HOTU1Tnw0LjQuMnx8MS4xMC4w;%;GET;%;[];%;[max-age=30];%;[];%;[0];%;[];%;
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$i1 = virtualinvoke $r0.<okhttp3.Headers: int size()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:1
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String name(int)>($i0)	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String toString()>	sig:$r2 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String value(int)>($i0)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printOkHttpInfo(java.lang.String,java.lang.String,okhttp3.Request,okhttp3.Response)>	sig:$r48 = virtualinvoke responseHeaders.<okhttp3.Headers: java.lang.String toString()>()	timediff:2
I/System.out(16819): header:Access-Control-Allow-Credentials: true
I/System.out(16819): Cache-Control: max-age=30
I/System.out(16819): Content-Type: application/json; charset=utf-8
I/System.out(16819): Etag: W/"23-eGexKTtX9QUOWAM6zeMHrw"
I/System.out(16819): X-Powered-By: Express
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Accept-Ranges: bytes
I/System.out(16819): Date: Wed, 18 Apr 2018 05:25:09 GMT
I/System.out(16819): Via: 1.1 varnish
I/System.out(16819): Age: 0
I/System.out(16819): Connection: keep-alive
I/System.out(16819): X-Served-By: cache-jfk8130-JFK, cache-bur17551-BUR, cache-bur17525-BUR
I/System.out(16819): X-Cache: MISS, MISS, MISS
I/System.out(16819): X-Cache-Hits: 0, 0, 0
I/System.out(16819): X-Timer: S1524029109.365383,VS0,VE81
I/System.out(16819): Vary: Accept-Encoding, Accept, Origin, Origin
I/System.out(16819): X-BACKEND: cluster_dir_chash_bur_ca_us
I/System.out(16819): X-GEO-COUNTRY: US
I/System.out(16819): OkHttp-Sent-Millis: 1524029109357
I/System.out(16819): OkHttp-Received-Millis: 1524029109453
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>	sig:$r3 = interfaceinvoke $r1.<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>($r2)	timediff:122
I/System.out(16819): body:<okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>	sig:$r1 = specialinvoke $r0.<okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain(boolean)>($z0)	timediff:122
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r3 = staticinvoke <okhttp3.RealCall: okhttp3.Response access$100(okhttp3.RealCall,boolean)>($r2, $z1)	timediff:122
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$i0 = virtualinvoke $r2.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor$1: void onResponse(okhttp3.Call,okhttp3.Response)>	sig:$r8 = virtualinvoke $r7.<okhttp3.Request: okhttp3.HttpUrl url()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$r7 = virtualinvoke $r1.<okhttp3.Response: okhttp3.ResponseBody body()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.OkHttpExecutor: com.clearchannel.iheartradio.http.Result processResponse(okhttp3.Response,com.clearchannel.iheartradio.api.connection.AsyncCallback)>	sig:$i0 = virtualinvoke $r1.<okhttp3.Response: int code()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$r1 = virtualinvoke $r0.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Length")	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: long contentLength()>	sig:$l0 = staticinvoke <okhttp3.internal.http.OkHeaders: long contentLength(okhttp3.Headers)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$l0 = virtualinvoke $r0.<okhttp3.ResponseBody: long contentLength()>()	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:$r5 = virtualinvoke $r0.<okhttp3.ResponseBody: okio.BufferedSource source()>()	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:$r7 = staticinvoke <okhttp3.internal.http.Http1xStream: okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream)>($r6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$i0 = staticinvoke <okhttp3.internal.http.Http1xStream: int access$500(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>	sig:specialinvoke $r0.<okhttp3.internal.http.Http1xStream: void detachTimeout(okio.ForwardingTimeout)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout)>($r1, $r5)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:staticinvoke <okhttp3.internal.http.Http1xStream: int access$502(okhttp3.internal.http.Http1xStream,int)>($r1, 6)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:$r6 = staticinvoke <okhttp3.internal.http.Http1xStream: okhttp3.internal.http.StreamAllocation access$700(okhttp3.internal.http.Http1xStream)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void release(okhttp3.internal.io.RealConnection)>($r3)	timediff:0
I/System.out(16819): body:<okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>	sig:$z0 = virtualinvoke $r1.<okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.io.RealConnection)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>	sig:$z2 = virtualinvoke $r6.<okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.io.RealConnection)>($r7, $r3)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool: long cleanup(long)>	sig:$i5 = specialinvoke $r0.<okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.io.RealConnection,long)>($r5, $l0)	timediff:0
I/System.out(16819): body:<okhttp3.ConnectionPool$1: void run()>	sig:$l1 = virtualinvoke $r1.<okhttp3.ConnectionPool: long cleanup(long)>($l0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>	sig:specialinvoke $r0.<okhttp3.internal.http.StreamAllocation: void deallocate(boolean,boolean,boolean)>($z0, 0, 1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$AbstractSource: void endOfInput(boolean)>	sig:virtualinvoke $r6.<okhttp3.internal.http.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpStream)>($z0, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.Http1xStream$FixedLengthSource: long read(okio.Buffer,long)>	sig:virtualinvoke $r0.<okhttp3.internal.http.Http1xStream$FixedLengthSource: void endOfInput(boolean)>(1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: byte[] bytes()>	sig:staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>($r5)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: byte[] bytes()>()	timediff:0
I/System.out(16819): body:<okhttp3.Headers: java.lang.String get(java.lang.String)>	sig:$r1 = staticinvoke <okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>	sig:specialinvoke $r11.<okhttp3.MediaType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r6, $r7, $r1)	timediff:0
I/System.out(16819): body:<okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()>	sig:$r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r2 = virtualinvoke $r0.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>()	timediff:1
I/System.out(16819): body:<okhttp3.ResponseBody: java.nio.charset.Charset charset()>	sig:$r1 = virtualinvoke $r2.<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r1)	timediff:0
I/System.out(16819): body:<okhttp3.ResponseBody: java.lang.String string()>	sig:$r3 = specialinvoke $r0.<okhttp3.ResponseBody: java.nio.charset.Charset charset()>()	timediff:1
I/System.out(16819): body:<com.clearchannel.iheartradio.http.ParseableBody: java.lang.String string()>	sig:$r2 = virtualinvoke $r1.<okhttp3.ResponseBody: java.lang.String string()>()	timediff:1
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:interfaceinvoke $r4.<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)>($r2, $r3)	timediff:1
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r5 = staticinvoke <okhttp3.RealCall: okhttp3.OkHttpClient access$300(okhttp3.RealCall)>($r2)	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:$r6 = virtualinvoke $r5.<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>()	timediff:0
I/System.out(16819): body:<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>	sig:specialinvoke $r0.<okhttp3.Dispatcher: void promoteCalls()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall$AsyncCall: void execute()>	sig:virtualinvoke $r6.<okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>($r0)	timediff:0
I/System.out(16819): body:<okhttp3.internal.NamedRunnable: void run()>	sig:virtualinvoke $r0.<okhttp3.internal.NamedRunnable: void execute()>()	timediff:123
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/System.out(16819): body:<okhttp3.internal.http.HttpEngine: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.StreamAllocation: void cancel()>()	timediff:0
I/System.out(16819): body:<okhttp3.RealCall: void cancel()>	sig:virtualinvoke $r1.<okhttp3.internal.http.HttpEngine: void cancel()>()	timediff:0
I/System.out(16819): body:<com.clearchannel.iheartradio.http.rest.AmpService$CallCanceller: void run()>	sig:interfaceinvoke $r1.<okhttp3.Call: void cancel()>()	timediff:0
I/ActivityManager(  481): START u0 {flg=0x24000000 cmp=com.clearchannel.iheartradio.connect/.login.LoginGateActivity} from pid 16819
E/DisconnectedState(16819): Already in disconnected state
E/DisconnectedState(16819): Already in disconnected state
D/dalvikvm(16819): GC_FOR_ALLOC freed 676K, 19% free 7709K/9420K, paused 6ms, total 6ms
I/dalvikvm-heap(16819): Grow heap (frag case) to 7.719MB for 140220-byte allocation
D/dalvikvm(16819): GC_FOR_ALLOC freed 6K, 18% free 7839K/9560K, paused 3ms, total 3ms
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
E/DisconnectedState(16819): Already in disconnected state
I/MediaFocusControl(  481):  AudioFocus  requestAudioFocus() from android.media.AudioManager@4a7d0d10com.clearchannel.iheartradio.player.legacy.media.AudioFocusHelper$1@4a7e3514
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021733, downTime=1021733, deviceId=-1, source=0x101 }
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  481): Displayed com.clearchannel.iheartradio.connect/.login.LoginGateActivity: +97ms
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:70
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:10
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:74
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_7, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021865, downTime=1021865, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1021865, downTime=1021865, deviceId=-1, source=0x101 }
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/ActivityManager(  481): Duplicate finish request for ActivityRecord{4a927a98 u0 com.clearchannel.iheartradio.connect/.SplashActivity t207 f}
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac18da8 attribute=null, token = android.os.BinderProxy@4ac4afe8
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
I/ActivityManager(  481): START u0 {flg=0x24000000 cmp=com.clearchannel.iheartradio.connect/.login.LoginActivity} from pid 16819
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
E/DisconnectedState(16819): Already in disconnected state
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
E/DisconnectedState(16819): Already in disconnected state
E/DisconnectedState(16819): Already in disconnected state
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1022272, downTime=1022272, deviceId=-1, source=0x101 }
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.windowGainedFocus:1985 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/ActivityManager(  481): Displayed com.clearchannel.iheartradio.connect/.login.LoginActivity: +70ms
D/dalvikvm(16819): GC_CONCURRENT freed 1337K, 15% free 8132K/9560K, paused 2ms+3ms, total 13ms
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:71
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:12
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:73
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
E/DisconnectedState(16819): Already in disconnected state
I/ActivityManager(  481): START u0 {act=com.google.android.gms.signin.action.SIGN_IN cmp=com.google.android.gms/.signin.activity.SignInActivity (has extras)} from pid -1
E/DisconnectedState(16819): Already in disconnected state
E/DisconnectedState(16819): Already in disconnected state
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:12
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:69
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_E, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1022883, downTime=1022883, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_L, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1022890, downTime=1022890, deviceId=-1, source=0x101 }
W/ActivityManager(  481): Duplicate finish request for ActivityRecord{4a927a98 u0 com.clearchannel.iheartradio.connect/.SplashActivity t207 f}
W/ActivityManager(  481): Duplicate finish request for ActivityRecord{4a927a98 u0 com.clearchannel.iheartradio.connect/.SplashActivity t207 f}
W/ActivityManager(  481): Duplicate finish request for ActivityRecord{4ac468c0 u0 com.clearchannel.iheartradio.connect/.login.LoginGateActivity t207 f}
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_MODE, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023011, downTime=1023011, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023011, downTime=1023011, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023012, downTime=1023012, deviceId=-1, source=0x101 }
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_5, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023021, downTime=1023021, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab68d9c attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MUHENKAN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023086, downTime=1023086, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023089, downTime=1023089, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1023134, downTime=1023134, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1023134, downTime=1023134, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1023134, downTime=1023134, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x400, repeatCount=0, eventTime=1023134, downTime=1023134, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023129, downTime=1023129, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac25838 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm(  481): GC_EXPLICIT freed 2863K, 47% free 14860K/27864K, paused 1ms+2ms, total 18ms
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023218, downTime=1023218, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023222, downTime=1023222, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023261, downTime=1023261, deviceId=-1, source=0x101 }
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac5a178 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023350, downTime=1023350, deviceId=-1, source=0x101 }
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_AVR_INPUT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023402, downTime=1023402, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9f5388 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023711, downTime=1023711, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023714, downTime=1023714, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023714, downTime=1023714, deviceId=-1, source=0x101 }
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-4.0, y[0]=4.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1023717, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=0.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1023717, downTime=1023715, deviceId=0, source=0x10004 }
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection toHttpConnection(com.facebook.GraphRequestBatch)>	sig:specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)	timediff:1
I/System.out(16819): <com.facebook.GraphRequest: java.net.HttpURLConnection toHttpConnection(com.facebook.GraphRequestBatch)>###specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4)###https://graph.facebook.com/v2.3/121897277851831?fields=supports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs%2Candroid_sdk_error_categories&format=json&sdk=android
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:$r1 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r3)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Language", $r3)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: java.net.HttpURLConnection createConnection(java.net.URL)>	sig:virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void setConnectionContentType(java.net.HttpURLConnection,boolean)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void setConnectionContentType(java.net.HttpURLConnection,boolean)>	sig:virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r10 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>()	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("User-Agent")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:$r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type")	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i2)	timediff:0
I/System.out(16819): body:<com.facebook.GraphRequest: void serializeToUrlConnection(com.facebook.GraphRequestBatch,java.net.HttpURLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i2)	timediff:0
I/ActivityManager(  481): START u0 {act=SSO_WITH_FALLBACK cmp=com.clearchannel.iheartradio.connect/com.facebook.FacebookActivity (has extras)} from pid 16819
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_N, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023749, downTime=1023749, deviceId=-1, source=0x101 }
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
D/dalvikvm(16819): GC_CONCURRENT freed 1504K, 16% free 8372K/9920K, paused 2ms+1ms, total 8ms
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
E/DisconnectedState(16819): Already in disconnected state
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:1
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.facebook.GraphResponse: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:76
I/System.out(16819): body:<com.facebook.GraphResponse: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)>	sig:$r5 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:$r0 = virtualinvoke urlConnection.<java.net.URLConnection: java.net.URL getURL()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:urlString = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: void printURLInfo(java.lang.String,java.lang.String,java.net.URLConnection)>	sig:isDoOutput = virtualinvoke urlConnection.<java.net.URLConnection: boolean getDoOutput()>()	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): body:<empirical.HelperClass: java.lang.String getHeaderField(java.net.URLConnection,java.lang.String)>	sig:data = virtualinvoke conn.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(field)	timediff:0
I/System.out(16819): URLConn;%;13;%;<com.facebook.GraphResponse: java.util.List fromHttpConnection(java.net.HttpURLConnection,com.facebook.GraphRequestBatch)>;%;$r5 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();%;https://graph.facebook.com/v2.3/121897277851831?fields=supports_implicit_sdk_logging%2Cgdpv4_nux_content%2Cgdpv4_nux_enabled%2Candroid_dialog_configs%2Candroid_sdk_error_categories&format=json&sdk=android;%;false;%;Not found;%;private, no-cache, no-store, must-revalidate;%;Sat, 01 Jan 2000 00:00:00 GMT;%;Not found;%;Not found
I/System.out(16819): body:<com.facebook.GraphResponse: java.util.List createResponsesFromObject(java.net.HttpURLConnection,java.util.List,java.lang.Object)>	sig:$i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:0
I/System.out(16819): body:<com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>	sig:virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
V/WebViewChromium(16819): Binding Chromium to the background looper Looper (main, tid 1) {4a78284c}
I/chromium(16819): [INFO:library_loader_hooks.cc(112)] Chromium logging enabled: level = 0, default verbosity = 0
I/BrowserProcessMain(16819): Initializing chromium process, renderers=0
W/chromium(16819): [WARNING:proxy_service.cc(888)] PAC support disabled because there is no system implementation
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:11
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023885, downTime=1023885, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:71
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  481): Displayed com.clearchannel.iheartradio.connect/com.facebook.FacebookActivity: +180ms
I/chromium(16819): [INFO:simple_index_file.cc(397)] Simple Cache Index is being restored from disk.
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 481
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023987, downTime=1023987, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023993, downTime=1023993, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1023995, downTime=1023995, deviceId=-1, source=0x101 }
D/dalvikvm(16819): GC_FOR_ALLOC freed 1028K, 17% free 8593K/10284K, paused 4ms, total 4ms
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_F, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024004, downTime=1024004, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 481
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(16819): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-507.57788, y[0]=104.55081, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=5, eventTime=1024035, downTime=1024034, deviceId=0, source=0x1002 }
W/ViewRootImpl(16819): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=-511.50443, y[0]=94.8454, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1024035, downTime=1024034, deviceId=0, source=0x1002 }
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/InputManager(  481): Input event injection from pid 16808 failed.
E/DisconnectedState(16819): Already in disconnected state
E/DisconnectedState(16819): Already in disconnected state
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024177, downTime=1024177, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024179, downTime=1024179, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024179, downTime=1024179, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024180, downTime=1024180, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024181, downTime=1024181, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024181, downTime=1024181, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024182, downTime=1024182, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024183, downTime=1024183, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9f645c attribute=null, token = android.os.BinderProxy@4ac66bc4
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/InputDispatcher(  481): Dropped event because of pending overdue app switch.
W/InputManager(  481): Input event injection from pid 16808 failed.
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 481
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024707, downTime=1024707, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-5.0, y[0]=3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1024711, downTime=-1, deviceId=0, source=0x10004 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024712, downTime=1024712, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aaab1c0 attribute=android.view.inputmethod.EditorInfo@4aa88474, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.windowGainedFocus:1932 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1024793, downTime=1024793, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac529ec attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025011, downTime=1025011, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025013, downTime=1025013, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025014, downTime=1025014, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025016, downTime=1025016, deviceId=-1, source=0x101 }
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
I/InputDispatcher(  481): Dropped event because of pending overdue app switch.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a934e00 attribute=android.view.inputmethod.EditorInfo@4a9d4c00, token = android.os.BinderProxy@4ac66bc4
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.windowGainedFocus:1932 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 481
D/dalvikvm(  481): GC_FOR_ALLOC freed 2945K, 47% free 14808K/27864K, paused 14ms, total 14ms
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/ContentMaintenance(  711): Pruning caches...
I/ContentMaintenance(  711): Internal cache bytes used: 0; limit: 100000000; download size: 0
I/ContentMaintenance(  711): Cache pruning complete.
I/ContentMaintenance(  711): Beginning garbage collection.
I/RealtimeCacheCleanup(  711): Beginning Realtime garbage collection.
I/RealtimeCacheCleanup(  711): Finished Realtime garbage collection.
I/ContentMaintenance(  711): Finished garbage collection.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/InputManager(  481): Input event injection from pid 16808 failed.
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025252, downTime=1025252, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025293, downTime=1025293, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9ad664 attribute=android.view.inputmethod.EditorInfo@4ada62f0, token = android.os.BinderProxy@4ac66bc4
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.windowGainedFocus:1932 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025506, downTime=1025506, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_ADD, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025599, downTime=1025599, deviceId=-1, source=0x101 }
I/InputDispatcher(  481): Dropped event because of pending overdue app switch.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a97d214 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_FOCUS, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025684, downTime=1025684, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025692, downTime=1025692, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025693, downTime=1025693, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025694, downTime=1025694, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025696, downTime=1025696, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_START, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025697, downTime=1025697, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025697, downTime=1025697, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025700, downTime=1025700, deviceId=-1, source=0x101 }
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
W/InputManager(  481): Input event injection from pid 16808 failed.
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ab5d2d4 attribute=android.view.inputmethod.EditorInfo@4aae79c0, token = android.os.BinderProxy@4ac66bc4
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.windowGainedFocus:1932 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025827, downTime=1025827, deviceId=-1, source=0x101 }
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025831, downTime=1025831, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025839, downTime=1025839, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac90194 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=0.0, y[0]=-3.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=18, eventTime=1025977, downTime=-1, deviceId=0, source=0x10004 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025977, downTime=1025977, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_CHANNEL_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1025985, downTime=1025985, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=android.intent.action.CALL_BUTTON flg=0x10000000} from pid 16819
W/PhoneFallbackEventHandler(16819): No activity found for android.intent.action.CALL_BUTTON.
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9c2a00 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026135, downTime=1026135, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026138, downTime=1026138, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_NUMPAD_EQUALS, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026140, downTime=1026140, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-4.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=9, eventTime=1026142, downTime=-1, deviceId=0, source=0x10004 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026144, downTime=1026144, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026184, downTime=1026184, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a822768 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026197, downTime=1026197, deviceId=-1, source=0x101 }
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026207, downTime=1026207, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa24884 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
D/dalvikvm(16819): GC_CONCURRENT freed 1461K, 15% free 8946K/10468K, paused 1ms+2ms, total 9ms
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026723, downTime=1026723, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BUTTON_7, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026726, downTime=1026726, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026726, downTime=1026726, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MENU, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026728, downTime=1026728, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/ViewRootImpl(16819): Dropping event due to no window focus: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=-5.0, y[0]=2.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=2, eventTime=1026778, downTime=-1, deviceId=0, source=0x10004 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa3e2a4 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026814, downTime=1026814, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_FORWARD, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026816, downTime=1026816, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MANNER_MODE, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026819, downTime=1026819, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aaa46c8 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026865, downTime=1026865, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_CALL, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1026869, downTime=1026869, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4addabd8 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4afbaf0c attribute=android.view.inputmethod.EditorInfo@4afbaf14, token = android.os.BinderProxy@4ac66bc4
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.windowGainedFocus:1932 
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_RIGHT_BRACKET, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027034, downTime=1027034, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027067, downTime=1027067, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_PROG_GREEN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027099, downTime=1027099, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ae32a04 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.clearchannel.iheartradio.connect/.SplashActivity} from pid 16808
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_LEFT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027145, downTime=1027145, deviceId=-1, source=0x101 }
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=-0.0)
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027153, downTime=1027153, deviceId=-1, source=0x101 }
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/ViewRootImpl(16819): Dropping event due to root view being removed: MotionEvent { action=ACTION_DOWN, id[0]=0, x[0]=-181.0, y[0]=23.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1027191, downTime=1027191, deviceId=0, source=0x1002 }
W/ViewRootImpl(16819): Dropping event due to root view being removed: MotionEvent { action=ACTION_UP, id[0]=0, x[0]=-189.89966, y[0]=8.182556, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=1027192, downTime=1027191, deviceId=0, source=0x1002 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027194, downTime=1027194, deviceId=-1, source=0x101 }
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_MEDIA_PREVIOUS, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027197, downTime=1027197, deviceId=-1, source=0x101 }
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_DOWN, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027210, downTime=1027210, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9d5ef4 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/ViewRootImpl(16819): Dropping event due to root view being removed: MotionEvent { action=ACTION_MOVE, id[0]=0, x[0]=4.0, y[0]=0.0, toolType[0]=TOOL_TYPE_UNKNOWN, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=4, eventTime=1027231, downTime=-1, deviceId=0, source=0x10004 }
I/ActivityManager(  481): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.vphone.launcher/.Launcher} from pid 481
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_STB_INPUT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027238, downTime=1027238, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aca0790 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_VOLUME_UP, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027240, downTime=1027240, deviceId=-1, source=0x101 }
I/ActivityManager(  481): START u0 {act=com.google.android.gms.signin.action.SIGN_IN cmp=com.google.android.gms/.signin.activity.SignInActivity (has extras)} from pid -1
W/InputEventReceiver(16819): Attempted to finish an input event but the input event receiver has already been disposed.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_9, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027281, downTime=1027281, deviceId=-1, source=0x101 }
E/DisconnectedState(16819): Already in disconnected state
E/DisconnectedState(16819): Already in disconnected state
E/DisconnectedState(16819): Already in disconnected state
W/DebugConnManager(16819): getNetworkInfo() on networkType 1
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aefaab0 attribute=null, token = android.os.BinderProxy@4ac66bc4
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027310, downTime=1027310, deviceId=-1, source=0x101 }
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)	timediff:0
I/System.out(16819): <com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>###specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>($r2)###https://analytics.localytics.com/api/v2/uploads
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: java.net.URLConnection createURLConnection(java.net.URL,java.net.Proxy)>	sig:$r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>()	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setConnectTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setReadTimeout(int)>(60000)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setDoOutput(boolean)>($z1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-gzip")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Encoding", "gzip")	timediff:1
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-DONT-SEND-AMP", "1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-upload-time", $r13)	timediff:0
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4ac1384c attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027365, downTime=1027365, deviceId=-1, source=0x101 }
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-install-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-client-version", "androida_3.8.1")	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-app-version", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("x-customer-id", $r13)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1)	timediff:0
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$r22 = virtualinvoke $r20.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>()	timediff:12
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aefd2a0 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/FlingTracker(  533): computeCurrentVelocity warning: totalweight=0
V/FlingTracker(  533): java.lang.Throwable
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$FlingTracker.computeCurrentVelocity(PanelView.java:162)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelView$3.onTouch(PanelView.java:462)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7701)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.NotificationPanelView.onTouchEvent(NotificationPanelView.java:138)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PanelBar.onTouchEvent(PanelBar.java:130)
V/FlingTracker(  533): 	at com.android.systemui.statusbar.phone.PhoneStatusBarView.onTouchEvent(PhoneStatusBarView.java:201)
V/FlingTracker(  533): 	at android.view.View.dispatchTouchEvent(View.java:7706)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2210)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1945)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
V/FlingTracker(  533): 	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1959)
V/FlingTracker(  533): 	at android.view.View.dispatchPointerEvent(View.java:7886)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3978)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3857)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3549)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3473)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3442)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3450)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3423)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5626)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5606)
V/FlingTracker(  533): 	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5577)
V/FlingTracker(  533): 	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5706)
V/FlingTracker(  533): 	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
V/FlingTracker(  533): 	at android.os.MessageQueue.nativePollOnce(Native Method)
V/FlingTracker(  533): 	at android.os.MessageQueue.next(MessageQueue.java:138)
V/FlingTracker(  533): 	at android.os.Looper.loop(Looper.java:123)
V/FlingTracker(  533): 	at android.app.ActivityThread.main(ActivityThread.java:5019)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invokeNative(Native Method)
V/FlingTracker(  533): 	at java.lang.reflect.Method.invoke(Method.java:515)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
V/FlingTracker(  533): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
V/FlingTracker(  533): 	at dalvik.system.NativeStart.main(Native Method)
V/PanelView(  533): animationTick called with dtms=0; nothing to do (h=0.0 v=0.0)
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:$i1 = virtualinvoke $r20.<java.net.HttpURLConnection: int getResponseCode()>()	timediff:71
I/System.out(16819): body:<com.localytics.android.BaseUploadThread: boolean upload(com.localytics.android.BaseUploadThread$UploadType,java.lang.String,java.lang.String,int,boolean)>	sig:virtualinvoke $r20.<java.net.HttpURLConnection: void disconnect()>()	timediff:0
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027481, downTime=1027481, deviceId=-1, source=0x101 }
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_RIGHT, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027486, downTime=1027486, deviceId=-1, source=0x101 }
D/dalvikvm(  481): GC_FOR_ALLOC freed 2802K, 47% free 14962K/27864K, paused 14ms, total 14ms
W/ViewRootImpl(16819): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_DPAD_CENTER, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027587, downTime=1027587, deviceId=-1, source=0x101 }
W/InputMethodManagerService(  481): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4aa6ce68 attribute=null, token = android.os.BinderProxy@4ac66bc4
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
D/dalvikvm(  481): GC_CONCURRENT freed 206K, 45% free 15403K/27864K, paused 3ms+2ms, total 26ms
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.showSoftInput:1753 com.android.internal.view.IInputMethodManager$Stub.onTransact:175 com.android.server.InputMethodManagerService.onTransact:818 
I/ActivityManager(  481): START u0 {act=com.android.systemui.recent.action.TOGGLE_RECENTS flg=0x10800000 cmp=com.android.systemui/.recent.RecentsActivity (has extras)} from pid 533
D/BluetoothAdapter(  828): 1249413012: getState() :  mService = null. Returning STATE_OFF
V/InputMethodService(  616): onEvaluateInputViewShown: config.hardKeyboardHidden = 1
W/WindowManager(  481): updateFocusedWindowLocked, focusedAppToken is null.
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.showCurrentInputLocked:1791 com.android.server.InputMethodManagerService.attachNewInputLocked:1095 com.android.server.InputMethodManagerService.startInputUncheckedLocked:1166 com.android.server.InputMethodManagerService.startInputLocked:1128 
W/ViewRootImpl(  533): Dropping event due to no window focus: KeyEvent { action=ACTION_DOWN, keyCode=KEYCODE_BACK, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=1027624, downTime=1027624, deviceId=-1, source=0x101 }
I/AndroidRuntime(16808): VM exiting with result code 0.
W/EGL_emulation(16819): eglSurfaceAttrib not implemented 3093 12436
W/ContextImpl(  481): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1123 com.android.server.InputMethodManagerService.hideCurrentInputLocked:1880 com.android.server.InputMethodManagerService.windowGainedFocus:1968 com.android.internal.view.IInputMethodManager$Stub.onTransact:221 com.android.server.InputMethodManagerService.onTransact:818 
W/IInputConnectionWrapper(16819): showStatusIcon on inactive InputConnection
W/InputMethodManagerService(  481): Starting input on non-focused client com.android.internal.view.IInputMethodClient$Stub$Proxy@4a9186cc (uid=10188 pid=16819)
W/SurfaceFlinger(  166): couldn't log to binary event log: overflow.
